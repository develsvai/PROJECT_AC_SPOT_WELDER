
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000029be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000de  00800060  000029be  00002a52  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000061  0080013e  0080013e  00002b30  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002b30  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002b8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00002bc8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000279f  00000000  00000000  00002ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d9  00000000  00000000  00005487  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016f9  00000000  00000000  00005d60  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005a8  00000000  00000000  0000745c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000608  00000000  00000000  00007a04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000296a  00000000  00000000  0000800c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  0000a976  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	aa c0       	rjmp	.+340    	; 0x156 <__ctors_end>
       2:	00 00       	nop
       4:	63 c6       	rjmp	.+3270   	; 0xccc <__vector_1>
       6:	00 00       	nop
       8:	c3 c0       	rjmp	.+390    	; 0x190 <__bad_interrupt>
       a:	00 00       	nop
       c:	c1 c0       	rjmp	.+386    	; 0x190 <__bad_interrupt>
       e:	00 00       	nop
      10:	bf c0       	rjmp	.+382    	; 0x190 <__bad_interrupt>
      12:	00 00       	nop
      14:	bd c0       	rjmp	.+378    	; 0x190 <__bad_interrupt>
      16:	00 00       	nop
      18:	bb c0       	rjmp	.+374    	; 0x190 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b9 c0       	rjmp	.+370    	; 0x190 <__bad_interrupt>
      1e:	00 00       	nop
      20:	b7 c0       	rjmp	.+366    	; 0x190 <__bad_interrupt>
      22:	00 00       	nop
      24:	b5 c0       	rjmp	.+362    	; 0x190 <__bad_interrupt>
      26:	00 00       	nop
      28:	b3 c0       	rjmp	.+358    	; 0x190 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b1 c0       	rjmp	.+354    	; 0x190 <__bad_interrupt>
      2e:	00 00       	nop
      30:	af c0       	rjmp	.+350    	; 0x190 <__bad_interrupt>
      32:	00 00       	nop
      34:	ad c0       	rjmp	.+346    	; 0x190 <__bad_interrupt>
      36:	00 00       	nop
      38:	ab c0       	rjmp	.+342    	; 0x190 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a9 c0       	rjmp	.+338    	; 0x190 <__bad_interrupt>
      3e:	00 00       	nop
      40:	a7 c0       	rjmp	.+334    	; 0x190 <__bad_interrupt>
      42:	00 00       	nop
      44:	a5 c0       	rjmp	.+330    	; 0x190 <__bad_interrupt>
      46:	00 00       	nop
      48:	a3 c0       	rjmp	.+326    	; 0x190 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a1 c0       	rjmp	.+322    	; 0x190 <__bad_interrupt>
      4e:	00 00       	nop
      50:	9f c0       	rjmp	.+318    	; 0x190 <__bad_interrupt>
	...

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d4 e0       	ldi	r29, 0x04	; 4
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	11 e0       	ldi	r17, 0x01	; 1
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	ee eb       	ldi	r30, 0xBE	; 190
     16a:	f9 e2       	ldi	r31, 0x29	; 41
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	ae 33       	cpi	r26, 0x3E	; 62
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	21 e0       	ldi	r18, 0x01	; 1
     17a:	ae e3       	ldi	r26, 0x3E	; 62
     17c:	b1 e0       	ldi	r27, 0x01	; 1
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	af 39       	cpi	r26, 0x9F	; 159
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <main>
     18c:	0c 94 dd 14 	jmp	0x29ba	; 0x29ba <_exit>

00000190 <__bad_interrupt>:
     190:	37 cf       	rjmp	.-402    	; 0x0 <__vectors>

00000192 <twi_master_transmit>:

void lcd_position(unsigned char row, unsigned char col){
	unsigned char cmd;
	
	cmd = 0x08 | ((row-1)*0x40+(col-1));
	dis_cmd(cmd);
     192:	94 ea       	ldi	r25, 0xA4	; 164
     194:	96 bf       	out	0x36, r25	; 54
     196:	06 b6       	in	r0, 0x36	; 54
     198:	07 fe       	sbrs	r0, 7
     19a:	fd cf       	rjmp	.-6      	; 0x196 <twi_master_transmit+0x4>
     19c:	91 b1       	in	r25, 0x01	; 1
     19e:	98 7f       	andi	r25, 0xF8	; 248
     1a0:	98 30       	cpi	r25, 0x08	; 8
     1a2:	c9 f7       	brne	.-14     	; 0x196 <twi_master_transmit+0x4>
     1a4:	88 0f       	add	r24, r24
     1a6:	83 b9       	out	0x03, r24	; 3
     1a8:	84 e8       	ldi	r24, 0x84	; 132
     1aa:	86 bf       	out	0x36, r24	; 54
     1ac:	06 b6       	in	r0, 0x36	; 54
     1ae:	07 fe       	sbrs	r0, 7
     1b0:	fd cf       	rjmp	.-6      	; 0x1ac <twi_master_transmit+0x1a>
     1b2:	81 b1       	in	r24, 0x01	; 1
     1b4:	88 7f       	andi	r24, 0xF8	; 248
     1b6:	88 31       	cpi	r24, 0x18	; 24
     1b8:	c9 f7       	brne	.-14     	; 0x1ac <twi_master_transmit+0x1a>
     1ba:	63 b9       	out	0x03, r22	; 3
     1bc:	84 e8       	ldi	r24, 0x84	; 132
     1be:	86 bf       	out	0x36, r24	; 54
     1c0:	06 b6       	in	r0, 0x36	; 54
     1c2:	07 fe       	sbrs	r0, 7
     1c4:	fd cf       	rjmp	.-6      	; 0x1c0 <twi_master_transmit+0x2e>
     1c6:	81 b1       	in	r24, 0x01	; 1
     1c8:	88 7f       	andi	r24, 0xF8	; 248
     1ca:	88 32       	cpi	r24, 0x28	; 40
     1cc:	c9 f7       	brne	.-14     	; 0x1c0 <twi_master_transmit+0x2e>
     1ce:	84 e9       	ldi	r24, 0x94	; 148
     1d0:	86 bf       	out	0x36, r24	; 54
     1d2:	08 95       	ret

000001d4 <lcd_cont>:
     1d4:	cf 93       	push	r28
     1d6:	df 93       	push	r29
     1d8:	c8 2f       	mov	r28, r24
     1da:	8f e8       	ldi	r24, 0x8F	; 143
     1dc:	91 e0       	ldi	r25, 0x01	; 1
     1de:	01 97       	sbiw	r24, 0x01	; 1
     1e0:	f1 f7       	brne	.-4      	; 0x1de <lcd_cont+0xa>
     1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <lcd_cont+0x10>
     1e4:	00 00       	nop
     1e6:	6c 2f       	mov	r22, r28
     1e8:	87 e2       	ldi	r24, 0x27	; 39
     1ea:	d3 df       	rcall	.-90     	; 0x192 <twi_master_transmit>
     1ec:	dc 2f       	mov	r29, r28
     1ee:	d8 60       	ori	r29, 0x08	; 8
     1f0:	6d 2f       	mov	r22, r29
     1f2:	87 e2       	ldi	r24, 0x27	; 39
     1f4:	ce df       	rcall	.-100    	; 0x192 <twi_master_transmit>
     1f6:	6c 2f       	mov	r22, r28
     1f8:	6c 60       	ori	r22, 0x0C	; 12
     1fa:	87 e2       	ldi	r24, 0x27	; 39
     1fc:	ca df       	rcall	.-108    	; 0x192 <twi_master_transmit>
     1fe:	95 e0       	ldi	r25, 0x05	; 5
     200:	9a 95       	dec	r25
     202:	f1 f7       	brne	.-4      	; 0x200 <lcd_cont+0x2c>
     204:	00 00       	nop
     206:	6d 2f       	mov	r22, r29
     208:	87 e2       	ldi	r24, 0x27	; 39
     20a:	c3 df       	rcall	.-122    	; 0x192 <twi_master_transmit>
     20c:	df 91       	pop	r29
     20e:	cf 91       	pop	r28
     210:	08 95       	ret

00000212 <dis_cmd>:
     212:	cf 93       	push	r28
     214:	c8 2f       	mov	r28, r24
     216:	80 7f       	andi	r24, 0xF0	; 240
     218:	dd df       	rcall	.-70     	; 0x1d4 <lcd_cont>
     21a:	8c 2f       	mov	r24, r28
     21c:	82 95       	swap	r24
     21e:	80 7f       	andi	r24, 0xF0	; 240
     220:	d9 df       	rcall	.-78     	; 0x1d4 <lcd_cont>
     222:	cf 91       	pop	r28
     224:	08 95       	ret

00000226 <lcd_Data>:
     226:	cf 93       	push	r28
     228:	df 93       	push	r29
     22a:	c8 2f       	mov	r28, r24
     22c:	8f e8       	ldi	r24, 0x8F	; 143
     22e:	91 e0       	ldi	r25, 0x01	; 1
     230:	01 97       	sbiw	r24, 0x01	; 1
     232:	f1 f7       	brne	.-4      	; 0x230 <lcd_Data+0xa>
     234:	00 c0       	rjmp	.+0      	; 0x236 <lcd_Data+0x10>
     236:	00 00       	nop
     238:	6c 2f       	mov	r22, r28
     23a:	87 e2       	ldi	r24, 0x27	; 39
     23c:	aa df       	rcall	.-172    	; 0x192 <twi_master_transmit>
     23e:	dc 2f       	mov	r29, r28
     240:	d9 60       	ori	r29, 0x09	; 9
     242:	6d 2f       	mov	r22, r29
     244:	87 e2       	ldi	r24, 0x27	; 39
     246:	a5 df       	rcall	.-182    	; 0x192 <twi_master_transmit>
     248:	6c 2f       	mov	r22, r28
     24a:	6d 60       	ori	r22, 0x0D	; 13
     24c:	87 e2       	ldi	r24, 0x27	; 39
     24e:	a1 df       	rcall	.-190    	; 0x192 <twi_master_transmit>
     250:	95 e0       	ldi	r25, 0x05	; 5
     252:	9a 95       	dec	r25
     254:	f1 f7       	brne	.-4      	; 0x252 <lcd_Data+0x2c>
     256:	00 00       	nop
     258:	6d 2f       	mov	r22, r29
     25a:	87 e2       	ldi	r24, 0x27	; 39
     25c:	9a df       	rcall	.-204    	; 0x192 <twi_master_transmit>
     25e:	df 91       	pop	r29
     260:	cf 91       	pop	r28
     262:	08 95       	ret

00000264 <dis_data>:
     264:	cf 93       	push	r28
     266:	c8 2f       	mov	r28, r24
     268:	80 7f       	andi	r24, 0xF0	; 240
     26a:	dd df       	rcall	.-70     	; 0x226 <lcd_Data>
     26c:	8c 2f       	mov	r24, r28
     26e:	82 95       	swap	r24
     270:	80 7f       	andi	r24, 0xF0	; 240
     272:	d9 df       	rcall	.-78     	; 0x226 <lcd_Data>
     274:	cf 91       	pop	r28
     276:	08 95       	ret

00000278 <LCD_initialize>:
     278:	8a e0       	ldi	r24, 0x0A	; 10
     27a:	80 b9       	out	0x00, r24	; 0
     27c:	11 b8       	out	0x01, r1	; 1
     27e:	2f ef       	ldi	r18, 0xFF	; 255
     280:	83 ef       	ldi	r24, 0xF3	; 243
     282:	91 e0       	ldi	r25, 0x01	; 1
     284:	21 50       	subi	r18, 0x01	; 1
     286:	80 40       	sbci	r24, 0x00	; 0
     288:	90 40       	sbci	r25, 0x00	; 0
     28a:	e1 f7       	brne	.-8      	; 0x284 <LCD_initialize+0xc>
     28c:	00 c0       	rjmp	.+0      	; 0x28e <LCD_initialize+0x16>
     28e:	00 00       	nop
     290:	88 e2       	ldi	r24, 0x28	; 40
     292:	bf df       	rcall	.-130    	; 0x212 <dis_cmd>
     294:	87 ec       	ldi	r24, 0xC7	; 199
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	01 97       	sbiw	r24, 0x01	; 1
     29a:	f1 f7       	brne	.-4      	; 0x298 <LCD_initialize+0x20>
     29c:	00 c0       	rjmp	.+0      	; 0x29e <LCD_initialize+0x26>
     29e:	00 00       	nop
     2a0:	8c e0       	ldi	r24, 0x0C	; 12
     2a2:	b7 df       	rcall	.-146    	; 0x212 <dis_cmd>
     2a4:	87 ec       	ldi	r24, 0xC7	; 199
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	01 97       	sbiw	r24, 0x01	; 1
     2aa:	f1 f7       	brne	.-4      	; 0x2a8 <LCD_initialize+0x30>
     2ac:	00 c0       	rjmp	.+0      	; 0x2ae <LCD_initialize+0x36>
     2ae:	00 00       	nop
     2b0:	81 e0       	ldi	r24, 0x01	; 1
     2b2:	af df       	rcall	.-162    	; 0x212 <dis_cmd>
     2b4:	8f e3       	ldi	r24, 0x3F	; 63
     2b6:	9f e1       	ldi	r25, 0x1F	; 31
     2b8:	01 97       	sbiw	r24, 0x01	; 1
     2ba:	f1 f7       	brne	.-4      	; 0x2b8 <LCD_initialize+0x40>
     2bc:	00 c0       	rjmp	.+0      	; 0x2be <LCD_initialize+0x46>
     2be:	00 00       	nop
     2c0:	86 e0       	ldi	r24, 0x06	; 6
     2c2:	a7 df       	rcall	.-178    	; 0x212 <dis_cmd>
     2c4:	87 ec       	ldi	r24, 0xC7	; 199
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	01 97       	sbiw	r24, 0x01	; 1
     2ca:	f1 f7       	brne	.-4      	; 0x2c8 <LCD_initialize+0x50>
     2cc:	00 c0       	rjmp	.+0      	; 0x2ce <LCD_initialize+0x56>
     2ce:	00 00       	nop
     2d0:	08 95       	ret

000002d2 <LCD_string>:
     2d2:	ef 92       	push	r14
     2d4:	ff 92       	push	r15
     2d6:	0f 93       	push	r16
     2d8:	1f 93       	push	r17
     2da:	cf 93       	push	r28
     2dc:	df 93       	push	r29
     2de:	08 2f       	mov	r16, r24
     2e0:	7b 01       	movw	r14, r22
     2e2:	97 df       	rcall	.-210    	; 0x212 <dis_cmd>
     2e4:	f7 01       	movw	r30, r14
     2e6:	80 81       	ld	r24, Z
     2e8:	88 23       	and	r24, r24
     2ea:	89 f0       	breq	.+34     	; 0x30e <LCD_string+0x3c>
     2ec:	e7 01       	movw	r28, r14
     2ee:	10 e0       	ldi	r17, 0x00	; 0
     2f0:	0e 19       	sub	r16, r14
     2f2:	1f 09       	sbc	r17, r15
     2f4:	98 01       	movw	r18, r16
     2f6:	2c 0f       	add	r18, r28
     2f8:	3d 1f       	adc	r19, r29
     2fa:	20 39       	cpi	r18, 0x90	; 144
     2fc:	31 05       	cpc	r19, r1
     2fe:	11 f4       	brne	.+4      	; 0x304 <LCD_string+0x32>
     300:	80 ec       	ldi	r24, 0xC0	; 192
     302:	87 df       	rcall	.-242    	; 0x212 <dis_cmd>
     304:	89 91       	ld	r24, Y+
     306:	ae df       	rcall	.-164    	; 0x264 <dis_data>
     308:	98 81       	ld	r25, Y
     30a:	91 11       	cpse	r25, r1
     30c:	f3 cf       	rjmp	.-26     	; 0x2f4 <LCD_string+0x22>
     30e:	df 91       	pop	r29
     310:	cf 91       	pop	r28
     312:	1f 91       	pop	r17
     314:	0f 91       	pop	r16
     316:	ff 90       	pop	r15
     318:	ef 90       	pop	r14
     31a:	08 95       	ret

0000031c <spottimeset>:
	     PORTC = 0x00;
	     delay_ms(nbl);
	     isr_cn=0;
	}
}
void spottimeset(void){
     31c:	7f 92       	push	r7
     31e:	8f 92       	push	r8
     320:	9f 92       	push	r9
     322:	af 92       	push	r10
     324:	bf 92       	push	r11
     326:	cf 92       	push	r12
     328:	df 92       	push	r13
     32a:	ef 92       	push	r14
     32c:	ff 92       	push	r15
     32e:	0f 93       	push	r16
     330:	1f 93       	push	r17
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     336:	2f ef       	ldi	r18, 0xFF	; 255
     338:	85 ea       	ldi	r24, 0xA5	; 165
     33a:	9e e0       	ldi	r25, 0x0E	; 14
     33c:	21 50       	subi	r18, 0x01	; 1
     33e:	80 40       	sbci	r24, 0x00	; 0
     340:	90 40       	sbci	r25, 0x00	; 0
     342:	e1 f7       	brne	.-8      	; 0x33c <spottimeset+0x20>
     344:	00 c0       	rjmp	.+0      	; 0x346 <spottimeset+0x2a>
     346:	00 00       	nop
	_delay_ms(300);
	//LCD_initialize();
	val = eeprom_read_byte(0);
     348:	80 e0       	ldi	r24, 0x00	; 0
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
     350:	28 2f       	mov	r18, r24
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	30 93 96 01 	sts	0x0196, r19	; 0x800196 <val+0x1>
     358:	20 93 95 01 	sts	0x0195, r18	; 0x800195 <val>
	if(val>=100)sprintf(msg,"TIME=%2d",val);
     35c:	24 36       	cpi	r18, 0x64	; 100
     35e:	31 05       	cpc	r19, r1
     360:	9c f0       	brlt	.+38     	; 0x388 <spottimeset+0x6c>
     362:	1f 92       	push	r1
     364:	8f 93       	push	r24
     366:	8a ec       	ldi	r24, 0xCA	; 202
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	9f 93       	push	r25
     36c:	8f 93       	push	r24
     36e:	81 e8       	ldi	r24, 0x81	; 129
     370:	91 e0       	ldi	r25, 0x01	; 1
     372:	9f 93       	push	r25
     374:	8f 93       	push	r24
     376:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
     37a:	0f 90       	pop	r0
     37c:	0f 90       	pop	r0
     37e:	0f 90       	pop	r0
     380:	0f 90       	pop	r0
     382:	0f 90       	pop	r0
     384:	0f 90       	pop	r0
     386:	12 c0       	rjmp	.+36     	; 0x3ac <spottimeset+0x90>
	else sprintf(msg,"TIME=%2d ",val);
     388:	1f 92       	push	r1
     38a:	8f 93       	push	r24
     38c:	83 ed       	ldi	r24, 0xD3	; 211
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	9f 93       	push	r25
     392:	8f 93       	push	r24
     394:	81 e8       	ldi	r24, 0x81	; 129
     396:	91 e0       	ldi	r25, 0x01	; 1
     398:	9f 93       	push	r25
     39a:	8f 93       	push	r24
     39c:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
     3a0:	0f 90       	pop	r0
     3a2:	0f 90       	pop	r0
     3a4:	0f 90       	pop	r0
     3a6:	0f 90       	pop	r0
     3a8:	0f 90       	pop	r0
     3aa:	0f 90       	pop	r0
	//lcd_on_off(1,0,0);
	LCD_string(0x80,msg);
     3ac:	61 e8       	ldi	r22, 0x81	; 129
     3ae:	71 e0       	ldi	r23, 0x01	; 1
     3b0:	80 e8       	ldi	r24, 0x80	; 128
     3b2:	8f df       	rcall	.-226    	; 0x2d2 <LCD_string>
	DDRB = 0x0f;
     3b4:	8f e0       	ldi	r24, 0x0F	; 15
     3b6:	87 bb       	out	0x17, r24	; 23
	en_flag=1;
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	90 93 c7 00 	sts	0x00C7, r25	; 0x8000c7 <en_flag+0x1>
     3c0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <en_flag>
	en_flag_n = 0;
     3c4:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <en_flag_n+0x1>
     3c8:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <en_flag_n>
				_delay_ms(180);
				DDRB = 0xef;
			}
			if(en_flag_ccw && en_flag_n == 1){
			  en_flag=0;
			  DDRB = 0XFF;
     3cc:	77 24       	eor	r7, r7
     3ce:	7a 94       	dec	r7
			  _delay_ms(10);
			  if(val>=100)sprintf(msg,"TIME=%2d",val);
			  else sprintf(msg,"TIME=%2d ",val);
			  LCD_string(0x80,msg);
			  _delay_ms(180);
			  DDRB = 0xef;
     3d0:	0f 2e       	mov	r0, r31
     3d2:	ff ee       	ldi	r31, 0xEF	; 239
     3d4:	8f 2e       	mov	r8, r31
     3d6:	f0 2d       	mov	r31, r0
				  else val =1;
			  }
			  else val =150;
			  _delay_ms(10);
			  if(val>=100)sprintf(msg,"TIME=%2d",val);
			  else sprintf(msg,"TIME=%2d ",val);
     3d8:	0f 2e       	mov	r0, r31
     3da:	f3 ed       	ldi	r31, 0xD3	; 211
     3dc:	ef 2e       	mov	r14, r31
     3de:	f0 e0       	ldi	r31, 0x00	; 0
     3e0:	ff 2e       	mov	r15, r31
     3e2:	f0 2d       	mov	r31, r0
				  }
				  else val =1;
			  }
			  else val =150;
			  _delay_ms(10);
			  if(val>=100)sprintf(msg,"TIME=%2d",val);
     3e4:	0a ec       	ldi	r16, 0xCA	; 202
     3e6:	10 e0       	ldi	r17, 0x00	; 0
					  if(val<=20)val--;
					  else val-=5;
				  }
				  else val =1;
			  }
			  else val =150;
     3e8:	0f 2e       	mov	r0, r31
     3ea:	f6 e9       	ldi	r31, 0x96	; 150
     3ec:	cf 2e       	mov	r12, r31
     3ee:	d1 2c       	mov	r13, r1
     3f0:	f0 2d       	mov	r31, r0
			  if(val<151){
				  if(val>0){
					  if(val<=20)val--;
					  else val-=5;
				  }
				  else val =1;
     3f2:	aa 24       	eor	r10, r10
     3f4:	a3 94       	inc	r10
     3f6:	b1 2c       	mov	r11, r1
	en_flag_n = 0;
	while(1){
		_delay_us(10);
		if(en_flag_cw && en_flag ==1 ){
			if(en_flag_ccw) en_flag_n =1;
			else en_flag_n =2;
     3f8:	c2 e0       	ldi	r28, 0x02	; 2
     3fa:	d0 e0       	ldi	r29, 0x00	; 0
			  DDRB = 0xef;
		  }
	    }
		if(~en_flag_cw){
			en_flag=1;
			DDRB = 0x0f;
     3fc:	0f 2e       	mov	r0, r31
     3fe:	ff e0       	ldi	r31, 0x0F	; 15
     400:	9f 2e       	mov	r9, r31
     402:	f0 2d       	mov	r31, r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     404:	25 e3       	ldi	r18, 0x35	; 53
     406:	2a 95       	dec	r18
     408:	f1 f7       	brne	.-4      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     40a:	00 00       	nop
	DDRB = 0x0f;
	en_flag=1;
	en_flag_n = 0;
	while(1){
		_delay_us(10);
		if(en_flag_cw && en_flag ==1 ){
     40c:	b4 9b       	sbis	0x16, 4	; 22
     40e:	ee c0       	rjmp	.+476    	; 0x5ec <__stack+0x18d>
     410:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <en_flag>
     414:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <en_flag+0x1>
     418:	01 97       	sbiw	r24, 0x01	; 1
     41a:	09 f0       	breq	.+2      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     41c:	e7 c0       	rjmp	.+462    	; 0x5ec <__stack+0x18d>
			if(en_flag_ccw) en_flag_n =1;
     41e:	b5 9b       	sbis	0x16, 5	; 22
     420:	05 c0       	rjmp	.+10     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     422:	b0 92 75 01 	sts	0x0175, r11	; 0x800175 <en_flag_n+0x1>
     426:	a0 92 74 01 	sts	0x0174, r10	; 0x800174 <en_flag_n>
     42a:	04 c0       	rjmp	.+8      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
			else en_flag_n =2;
     42c:	d0 93 75 01 	sts	0x0175, r29	; 0x800175 <en_flag_n+0x1>
     430:	c0 93 74 01 	sts	0x0174, r28	; 0x800174 <en_flag_n>
     434:	85 e3       	ldi	r24, 0x35	; 53
     436:	8a 95       	dec	r24
     438:	f1 f7       	brne	.-4      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     43a:	00 00       	nop
			_delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
     43c:	b5 99       	sbic	0x16, 5	; 22
     43e:	6a c0       	rjmp	.+212    	; 0x514 <__stack+0xb5>
     440:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <en_flag_n>
     444:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <en_flag_n+0x1>
     448:	02 97       	sbiw	r24, 0x02	; 2
     44a:	09 f0       	breq	.+2      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     44c:	63 c0       	rjmp	.+198    	; 0x514 <__stack+0xb5>
				en_flag=0;
     44e:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <en_flag+0x1>
     452:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <en_flag>
				DDRB = 0XFF;
     456:	77 ba       	out	0x17, r7	; 23
				if(val<151){
     458:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <val>
     45c:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <val+0x1>
     460:	87 39       	cpi	r24, 0x97	; 151
     462:	91 05       	cpc	r25, r1
     464:	bc f4       	brge	.+46     	; 0x494 <__stack+0x35>
					if(val>0){
     466:	18 16       	cp	r1, r24
     468:	19 06       	cpc	r1, r25
     46a:	7c f4       	brge	.+30     	; 0x48a <__stack+0x2b>
						if(val<20)val++;
     46c:	84 31       	cpi	r24, 0x14	; 20
     46e:	91 05       	cpc	r25, r1
     470:	34 f4       	brge	.+12     	; 0x47e <__stack+0x1f>
     472:	01 96       	adiw	r24, 0x01	; 1
     474:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <val+0x1>
     478:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <val>
     47c:	0f c0       	rjmp	.+30     	; 0x49c <__stack+0x3d>
						else val+=5;
     47e:	05 96       	adiw	r24, 0x05	; 5
     480:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <val+0x1>
     484:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <val>
     488:	09 c0       	rjmp	.+18     	; 0x49c <__stack+0x3d>
					}
					else val=1;
     48a:	b0 92 96 01 	sts	0x0196, r11	; 0x800196 <val+0x1>
     48e:	a0 92 95 01 	sts	0x0195, r10	; 0x800195 <val>
     492:	04 c0       	rjmp	.+8      	; 0x49c <__stack+0x3d>
				}
				else val = 150;
     494:	d0 92 96 01 	sts	0x0196, r13	; 0x800196 <val+0x1>
     498:	c0 92 95 01 	sts	0x0195, r12	; 0x800195 <val>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     49c:	8f e3       	ldi	r24, 0x3F	; 63
     49e:	9c e9       	ldi	r25, 0x9C	; 156
     4a0:	01 97       	sbiw	r24, 0x01	; 1
     4a2:	f1 f7       	brne	.-4      	; 0x4a0 <__stack+0x41>
     4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <__stack+0x47>
     4a6:	00 00       	nop
				_delay_ms(10);
				if(val>=100)sprintf(msg,"TIME=%2d",val);  
     4a8:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <val>
     4ac:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <val+0x1>
     4b0:	84 36       	cpi	r24, 0x64	; 100
     4b2:	91 05       	cpc	r25, r1
     4b4:	8c f0       	brlt	.+34     	; 0x4d8 <__stack+0x79>
     4b6:	9f 93       	push	r25
     4b8:	8f 93       	push	r24
     4ba:	1f 93       	push	r17
     4bc:	0f 93       	push	r16
     4be:	81 e8       	ldi	r24, 0x81	; 129
     4c0:	91 e0       	ldi	r25, 0x01	; 1
     4c2:	9f 93       	push	r25
     4c4:	8f 93       	push	r24
     4c6:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
     4ca:	0f 90       	pop	r0
     4cc:	0f 90       	pop	r0
     4ce:	0f 90       	pop	r0
     4d0:	0f 90       	pop	r0
     4d2:	0f 90       	pop	r0
     4d4:	0f 90       	pop	r0
     4d6:	10 c0       	rjmp	.+32     	; 0x4f8 <__stack+0x99>
				else sprintf(msg,"TIME=%2d ",val);  
     4d8:	9f 93       	push	r25
     4da:	8f 93       	push	r24
     4dc:	ff 92       	push	r15
     4de:	ef 92       	push	r14
     4e0:	81 e8       	ldi	r24, 0x81	; 129
     4e2:	91 e0       	ldi	r25, 0x01	; 1
     4e4:	9f 93       	push	r25
     4e6:	8f 93       	push	r24
     4e8:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
     4ec:	0f 90       	pop	r0
     4ee:	0f 90       	pop	r0
     4f0:	0f 90       	pop	r0
     4f2:	0f 90       	pop	r0
     4f4:	0f 90       	pop	r0
     4f6:	0f 90       	pop	r0
				LCD_string(0x80,msg);
     4f8:	61 e8       	ldi	r22, 0x81	; 129
     4fa:	71 e0       	ldi	r23, 0x01	; 1
     4fc:	80 e8       	ldi	r24, 0x80	; 128
     4fe:	e9 de       	rcall	.-558    	; 0x2d2 <LCD_string>
     500:	9f ef       	ldi	r25, 0xFF	; 255
     502:	29 ec       	ldi	r18, 0xC9	; 201
     504:	88 e0       	ldi	r24, 0x08	; 8
     506:	91 50       	subi	r25, 0x01	; 1
     508:	20 40       	sbci	r18, 0x00	; 0
     50a:	80 40       	sbci	r24, 0x00	; 0
     50c:	e1 f7       	brne	.-8      	; 0x506 <__stack+0xa7>
     50e:	00 c0       	rjmp	.+0      	; 0x510 <__stack+0xb1>
     510:	00 00       	nop
				_delay_ms(180);
				DDRB = 0xef;
     512:	87 ba       	out	0x17, r8	; 23
			}
			if(en_flag_ccw && en_flag_n == 1){
     514:	b5 9b       	sbis	0x16, 5	; 22
     516:	6a c0       	rjmp	.+212    	; 0x5ec <__stack+0x18d>
     518:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <en_flag_n>
     51c:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <en_flag_n+0x1>
     520:	01 97       	sbiw	r24, 0x01	; 1
     522:	09 f0       	breq	.+2      	; 0x526 <__stack+0xc7>
     524:	63 c0       	rjmp	.+198    	; 0x5ec <__stack+0x18d>
			  en_flag=0;
     526:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <en_flag+0x1>
     52a:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <en_flag>
			  DDRB = 0XFF;
     52e:	77 ba       	out	0x17, r7	; 23
			  if(val<151){
     530:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <val>
     534:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <val+0x1>
     538:	87 39       	cpi	r24, 0x97	; 151
     53a:	91 05       	cpc	r25, r1
     53c:	bc f4       	brge	.+46     	; 0x56c <__stack+0x10d>
				  if(val>0){
     53e:	18 16       	cp	r1, r24
     540:	19 06       	cpc	r1, r25
     542:	7c f4       	brge	.+30     	; 0x562 <__stack+0x103>
					  if(val<=20)val--;
     544:	85 31       	cpi	r24, 0x15	; 21
     546:	91 05       	cpc	r25, r1
     548:	34 f4       	brge	.+12     	; 0x556 <__stack+0xf7>
     54a:	01 97       	sbiw	r24, 0x01	; 1
     54c:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <val+0x1>
     550:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <val>
     554:	0f c0       	rjmp	.+30     	; 0x574 <__stack+0x115>
					  else val-=5;
     556:	05 97       	sbiw	r24, 0x05	; 5
     558:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <val+0x1>
     55c:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <val>
     560:	09 c0       	rjmp	.+18     	; 0x574 <__stack+0x115>
				  }
				  else val =1;
     562:	b0 92 96 01 	sts	0x0196, r11	; 0x800196 <val+0x1>
     566:	a0 92 95 01 	sts	0x0195, r10	; 0x800195 <val>
     56a:	04 c0       	rjmp	.+8      	; 0x574 <__stack+0x115>
			  }
			  else val =150;
     56c:	d0 92 96 01 	sts	0x0196, r13	; 0x800196 <val+0x1>
     570:	c0 92 95 01 	sts	0x0195, r12	; 0x800195 <val>
     574:	8f e3       	ldi	r24, 0x3F	; 63
     576:	9c e9       	ldi	r25, 0x9C	; 156
     578:	01 97       	sbiw	r24, 0x01	; 1
     57a:	f1 f7       	brne	.-4      	; 0x578 <__stack+0x119>
     57c:	00 c0       	rjmp	.+0      	; 0x57e <__stack+0x11f>
     57e:	00 00       	nop
			  _delay_ms(10);
			  if(val>=100)sprintf(msg,"TIME=%2d",val);
     580:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <val>
     584:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <val+0x1>
     588:	84 36       	cpi	r24, 0x64	; 100
     58a:	91 05       	cpc	r25, r1
     58c:	8c f0       	brlt	.+34     	; 0x5b0 <__stack+0x151>
     58e:	9f 93       	push	r25
     590:	8f 93       	push	r24
     592:	1f 93       	push	r17
     594:	0f 93       	push	r16
     596:	81 e8       	ldi	r24, 0x81	; 129
     598:	91 e0       	ldi	r25, 0x01	; 1
     59a:	9f 93       	push	r25
     59c:	8f 93       	push	r24
     59e:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
     5a2:	0f 90       	pop	r0
     5a4:	0f 90       	pop	r0
     5a6:	0f 90       	pop	r0
     5a8:	0f 90       	pop	r0
     5aa:	0f 90       	pop	r0
     5ac:	0f 90       	pop	r0
     5ae:	10 c0       	rjmp	.+32     	; 0x5d0 <__stack+0x171>
			  else sprintf(msg,"TIME=%2d ",val);
     5b0:	9f 93       	push	r25
     5b2:	8f 93       	push	r24
     5b4:	ff 92       	push	r15
     5b6:	ef 92       	push	r14
     5b8:	81 e8       	ldi	r24, 0x81	; 129
     5ba:	91 e0       	ldi	r25, 0x01	; 1
     5bc:	9f 93       	push	r25
     5be:	8f 93       	push	r24
     5c0:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
     5c4:	0f 90       	pop	r0
     5c6:	0f 90       	pop	r0
     5c8:	0f 90       	pop	r0
     5ca:	0f 90       	pop	r0
     5cc:	0f 90       	pop	r0
     5ce:	0f 90       	pop	r0
			  LCD_string(0x80,msg);
     5d0:	61 e8       	ldi	r22, 0x81	; 129
     5d2:	71 e0       	ldi	r23, 0x01	; 1
     5d4:	80 e8       	ldi	r24, 0x80	; 128
     5d6:	7d de       	rcall	.-774    	; 0x2d2 <LCD_string>
     5d8:	9f ef       	ldi	r25, 0xFF	; 255
     5da:	29 ec       	ldi	r18, 0xC9	; 201
     5dc:	88 e0       	ldi	r24, 0x08	; 8
     5de:	91 50       	subi	r25, 0x01	; 1
     5e0:	20 40       	sbci	r18, 0x00	; 0
     5e2:	80 40       	sbci	r24, 0x00	; 0
     5e4:	e1 f7       	brne	.-8      	; 0x5de <__stack+0x17f>
     5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <__stack+0x189>
     5e8:	00 00       	nop
			  _delay_ms(180);
			  DDRB = 0xef;
     5ea:	87 ba       	out	0x17, r8	; 23
		  }
	    }
		if(~en_flag_cw){
     5ec:	b4 99       	sbic	0x16, 4	; 22
     5ee:	05 c0       	rjmp	.+10     	; 0x5fa <__stack+0x19b>
			en_flag=1;
     5f0:	b0 92 c7 00 	sts	0x00C7, r11	; 0x8000c7 <en_flag+0x1>
     5f4:	a0 92 c6 00 	sts	0x00C6, r10	; 0x8000c6 <en_flag>
			DDRB = 0x0f;
     5f8:	97 ba       	out	0x17, r9	; 23
		}
		if(en_flag_sw){
     5fa:	b6 9b       	sbis	0x16, 6	; 22
     5fc:	03 cf       	rjmp	.-506    	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
			eeprom_write_byte(0,val);
     5fe:	60 91 95 01 	lds	r22, 0x0195	; 0x800195 <val>
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <eeprom_write_byte>
			vbl = eeprom_read_byte(0);
     60a:	80 e0       	ldi	r24, 0x00	; 0
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <vbl+0x1>
     618:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <vbl>
			break;
		}
	  }
	}
     61c:	df 91       	pop	r29
     61e:	cf 91       	pop	r28
     620:	1f 91       	pop	r17
     622:	0f 91       	pop	r16
     624:	ff 90       	pop	r15
     626:	ef 90       	pop	r14
     628:	df 90       	pop	r13
     62a:	cf 90       	pop	r12
     62c:	bf 90       	pop	r11
     62e:	af 90       	pop	r10
     630:	9f 90       	pop	r9
     632:	8f 90       	pop	r8
     634:	7f 90       	pop	r7
     636:	08 95       	ret

00000638 <spotmult>:
void spotmult(void){
     638:	7f 92       	push	r7
     63a:	8f 92       	push	r8
     63c:	9f 92       	push	r9
     63e:	af 92       	push	r10
     640:	bf 92       	push	r11
     642:	cf 92       	push	r12
     644:	df 92       	push	r13
     646:	ef 92       	push	r14
     648:	ff 92       	push	r15
     64a:	0f 93       	push	r16
     64c:	1f 93       	push	r17
     64e:	cf 93       	push	r28
     650:	df 93       	push	r29
     652:	2f ef       	ldi	r18, 0xFF	; 255
     654:	85 ea       	ldi	r24, 0xA5	; 165
     656:	9e e0       	ldi	r25, 0x0E	; 14
     658:	21 50       	subi	r18, 0x01	; 1
     65a:	80 40       	sbci	r24, 0x00	; 0
     65c:	90 40       	sbci	r25, 0x00	; 0
     65e:	e1 f7       	brne	.-8      	; 0x658 <spotmult+0x20>
     660:	00 c0       	rjmp	.+0      	; 0x662 <spotmult+0x2a>
     662:	00 00       	nop
	_delay_ms(300);
	//LCD_initialize();
	bal = eeprom_read_byte(1);
     664:	81 e0       	ldi	r24, 0x01	; 1
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
     66c:	28 2f       	mov	r18, r24
     66e:	30 e0       	ldi	r19, 0x00	; 0
     670:	30 93 9c 01 	sts	0x019C, r19	; 0x80019c <bal+0x1>
     674:	20 93 9b 01 	sts	0x019B, r18	; 0x80019b <bal>
	sprintf(msg,"MULT=%2d ",bal);
     678:	1f 92       	push	r1
     67a:	8f 93       	push	r24
     67c:	8d ed       	ldi	r24, 0xDD	; 221
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	9f 93       	push	r25
     682:	8f 93       	push	r24
     684:	81 e8       	ldi	r24, 0x81	; 129
     686:	91 e0       	ldi	r25, 0x01	; 1
     688:	9f 93       	push	r25
     68a:	8f 93       	push	r24
     68c:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
	//lcd_on_off(1,0,0);
	LCD_string(0x88,msg);
     690:	61 e8       	ldi	r22, 0x81	; 129
     692:	71 e0       	ldi	r23, 0x01	; 1
     694:	88 e8       	ldi	r24, 0x88	; 136
     696:	1d de       	rcall	.-966    	; 0x2d2 <LCD_string>
    DDRB = 0x0f;
     698:	8f e0       	ldi	r24, 0x0F	; 15
     69a:	87 bb       	out	0x17, r24	; 23
     69c:	0f 90       	pop	r0
     69e:	0f 90       	pop	r0
     6a0:	0f 90       	pop	r0
     6a2:	0f 90       	pop	r0
     6a4:	0f 90       	pop	r0
     6a6:	0f 90       	pop	r0
	int en_flag=1;
     6a8:	81 e0       	ldi	r24, 0x01	; 1
     6aa:	90 e0       	ldi	r25, 0x00	; 0
			  if(en_flag_ccw) en_flag_n =1;
			  else en_flag_n =2;
			  _delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
				en_flag=0;
				DDRB = 0XFF;
     6ac:	77 24       	eor	r7, r7
     6ae:	7a 94       	dec	r7
					else bal=1;
				}
				else bal = 20;
				_delay_ms(10);
				//dis_cmd(0x01);
				sprintf(msg,"MULT=%2d ",bal);
     6b0:	0f 2e       	mov	r0, r31
     6b2:	fd ed       	ldi	r31, 0xDD	; 221
     6b4:	cf 2e       	mov	r12, r31
     6b6:	f0 e0       	ldi	r31, 0x00	; 0
     6b8:	df 2e       	mov	r13, r31
     6ba:	f0 2d       	mov	r31, r0
     6bc:	0f 2e       	mov	r0, r31
     6be:	f1 e8       	ldi	r31, 0x81	; 129
     6c0:	ef 2e       	mov	r14, r31
     6c2:	f1 e0       	ldi	r31, 0x01	; 1
     6c4:	ff 2e       	mov	r15, r31
     6c6:	f0 2d       	mov	r31, r0
				//lcd_on_off(1,0,0);
				LCD_string(0x88,msg);
				_delay_ms(180);
				DDRB = 0xef;
     6c8:	0f ee       	ldi	r16, 0xEF	; 239
		  if(en_flag_cw && en_flag ==1 ){
			  if(en_flag_ccw) en_flag_n =1;
			  else en_flag_n =2;
			  _delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
				en_flag=0;
     6ca:	91 2c       	mov	r9, r1
     6cc:	81 2c       	mov	r8, r1
					if(bal>0){
						bal++;
					}
					else bal=1;
				}
				else bal = 20;
     6ce:	0f 2e       	mov	r0, r31
     6d0:	f4 e1       	ldi	r31, 0x14	; 20
     6d2:	af 2e       	mov	r10, r31
     6d4:	b1 2c       	mov	r11, r1
     6d6:	f0 2d       	mov	r31, r0
				DDRB = 0XFF;
				if(bal<21){
					if(bal>0){
						bal++;
					}
					else bal=1;
     6d8:	d1 e0       	ldi	r29, 0x01	; 1
     6da:	c0 e0       	ldi	r28, 0x00	; 0
			 DDRB = 0xef;
			}
		}
		if(~en_flag_cw){
			en_flag=1;
			DDRB = 0x0f;
     6dc:	1f e0       	ldi	r17, 0x0F	; 15
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6de:	25 e3       	ldi	r18, 0x35	; 53
     6e0:	2a 95       	dec	r18
     6e2:	f1 f7       	brne	.-4      	; 0x6e0 <spotmult+0xa8>
     6e4:	00 00       	nop
    DDRB = 0x0f;
	int en_flag=1;
	int en_flag_n = 0;
	while(1){ 
		_delay_us(10);
		  if(en_flag_cw && en_flag ==1 ){
     6e6:	b4 9b       	sbis	0x16, 4	; 22
     6e8:	8b c0       	rjmp	.+278    	; 0x800 <spotmult+0x1c8>
     6ea:	81 30       	cpi	r24, 0x01	; 1
     6ec:	91 05       	cpc	r25, r1
     6ee:	09 f0       	breq	.+2      	; 0x6f2 <spotmult+0xba>
     6f0:	87 c0       	rjmp	.+270    	; 0x800 <spotmult+0x1c8>
			  if(en_flag_ccw) en_flag_n =1;
     6f2:	b5 99       	sbic	0x16, 5	; 22
     6f4:	9c c0       	rjmp	.+312    	; 0x82e <spotmult+0x1f6>
     6f6:	a3 c0       	rjmp	.+326    	; 0x83e <spotmult+0x206>
			  else en_flag_n =2;
			  _delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
				en_flag=0;
				DDRB = 0XFF;
     6f8:	77 ba       	out	0x17, r7	; 23
				if(bal<21){
     6fa:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <bal>
     6fe:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <bal+0x1>
     702:	85 31       	cpi	r24, 0x15	; 21
     704:	91 05       	cpc	r25, r1
     706:	74 f4       	brge	.+28     	; 0x724 <spotmult+0xec>
					if(bal>0){
     708:	18 16       	cp	r1, r24
     70a:	19 06       	cpc	r1, r25
     70c:	34 f4       	brge	.+12     	; 0x71a <spotmult+0xe2>
						bal++;
     70e:	01 96       	adiw	r24, 0x01	; 1
     710:	90 93 9c 01 	sts	0x019C, r25	; 0x80019c <bal+0x1>
     714:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <bal>
     718:	09 c0       	rjmp	.+18     	; 0x72c <spotmult+0xf4>
					}
					else bal=1;
     71a:	d0 93 9b 01 	sts	0x019B, r29	; 0x80019b <bal>
     71e:	c0 93 9c 01 	sts	0x019C, r28	; 0x80019c <bal+0x1>
     722:	04 c0       	rjmp	.+8      	; 0x72c <spotmult+0xf4>
				}
				else bal = 20;
     724:	b0 92 9c 01 	sts	0x019C, r11	; 0x80019c <bal+0x1>
     728:	a0 92 9b 01 	sts	0x019B, r10	; 0x80019b <bal>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     72c:	8f e3       	ldi	r24, 0x3F	; 63
     72e:	9c e9       	ldi	r25, 0x9C	; 156
     730:	01 97       	sbiw	r24, 0x01	; 1
     732:	f1 f7       	brne	.-4      	; 0x730 <spotmult+0xf8>
     734:	00 c0       	rjmp	.+0      	; 0x736 <spotmult+0xfe>
     736:	00 00       	nop
				_delay_ms(10);
				//dis_cmd(0x01);
				sprintf(msg,"MULT=%2d ",bal);
     738:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <bal+0x1>
     73c:	8f 93       	push	r24
     73e:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <bal>
     742:	8f 93       	push	r24
     744:	df 92       	push	r13
     746:	cf 92       	push	r12
     748:	ff 92       	push	r15
     74a:	ef 92       	push	r14
     74c:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
				//lcd_on_off(1,0,0);
				LCD_string(0x88,msg);
     750:	b7 01       	movw	r22, r14
     752:	88 e8       	ldi	r24, 0x88	; 136
     754:	be dd       	rcall	.-1156   	; 0x2d2 <LCD_string>
     756:	9f ef       	ldi	r25, 0xFF	; 255
     758:	29 ec       	ldi	r18, 0xC9	; 201
     75a:	88 e0       	ldi	r24, 0x08	; 8
     75c:	91 50       	subi	r25, 0x01	; 1
     75e:	20 40       	sbci	r18, 0x00	; 0
     760:	80 40       	sbci	r24, 0x00	; 0
     762:	e1 f7       	brne	.-8      	; 0x75c <spotmult+0x124>
     764:	00 c0       	rjmp	.+0      	; 0x766 <spotmult+0x12e>
     766:	00 00       	nop
				_delay_ms(180);
				DDRB = 0xef;
     768:	07 bb       	out	0x17, r16	; 23
			 }
			if(en_flag_ccw && en_flag_n == 1){
     76a:	86 b3       	in	r24, 0x16	; 22
     76c:	0f 90       	pop	r0
     76e:	0f 90       	pop	r0
     770:	0f 90       	pop	r0
     772:	0f 90       	pop	r0
     774:	0f 90       	pop	r0
     776:	0f 90       	pop	r0
		  if(en_flag_cw && en_flag ==1 ){
			  if(en_flag_ccw) en_flag_n =1;
			  else en_flag_n =2;
			  _delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
				en_flag=0;
     778:	89 2d       	mov	r24, r9
     77a:	98 2d       	mov	r25, r8
     77c:	41 c0       	rjmp	.+130    	; 0x800 <spotmult+0x1c8>
				_delay_ms(180);
				DDRB = 0xef;
			 }
			if(en_flag_ccw && en_flag_n == 1){
			 en_flag=0;
			 DDRB = 0XFF;
     77e:	77 ba       	out	0x17, r7	; 23
			 if(bal<21){
     780:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <bal>
     784:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <bal+0x1>
     788:	85 31       	cpi	r24, 0x15	; 21
     78a:	91 05       	cpc	r25, r1
     78c:	74 f4       	brge	.+28     	; 0x7aa <spotmult+0x172>
				 if(bal>0){
     78e:	18 16       	cp	r1, r24
     790:	19 06       	cpc	r1, r25
     792:	34 f4       	brge	.+12     	; 0x7a0 <spotmult+0x168>
					 bal--;
     794:	01 97       	sbiw	r24, 0x01	; 1
     796:	90 93 9c 01 	sts	0x019C, r25	; 0x80019c <bal+0x1>
     79a:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <bal>
     79e:	09 c0       	rjmp	.+18     	; 0x7b2 <spotmult+0x17a>
				 }
				 else bal =1;
     7a0:	d0 93 9b 01 	sts	0x019B, r29	; 0x80019b <bal>
     7a4:	c0 93 9c 01 	sts	0x019C, r28	; 0x80019c <bal+0x1>
     7a8:	04 c0       	rjmp	.+8      	; 0x7b2 <spotmult+0x17a>
			 }
			 else bal = 20;
     7aa:	b0 92 9c 01 	sts	0x019C, r11	; 0x80019c <bal+0x1>
     7ae:	a0 92 9b 01 	sts	0x019B, r10	; 0x80019b <bal>
     7b2:	8f e3       	ldi	r24, 0x3F	; 63
     7b4:	9c e9       	ldi	r25, 0x9C	; 156
     7b6:	01 97       	sbiw	r24, 0x01	; 1
     7b8:	f1 f7       	brne	.-4      	; 0x7b6 <spotmult+0x17e>
     7ba:	00 c0       	rjmp	.+0      	; 0x7bc <spotmult+0x184>
     7bc:	00 00       	nop
			 _delay_ms(10);
			// dis_cmd(0x01);
			 sprintf(msg,"MULT=%2d ",bal);
     7be:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <bal+0x1>
     7c2:	8f 93       	push	r24
     7c4:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <bal>
     7c8:	8f 93       	push	r24
     7ca:	df 92       	push	r13
     7cc:	cf 92       	push	r12
     7ce:	ff 92       	push	r15
     7d0:	ef 92       	push	r14
     7d2:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
			// lcd_on_off(1,0,0);
			 LCD_string(0x88,msg);
     7d6:	b7 01       	movw	r22, r14
     7d8:	88 e8       	ldi	r24, 0x88	; 136
     7da:	7b dd       	rcall	.-1290   	; 0x2d2 <LCD_string>
     7dc:	9f ef       	ldi	r25, 0xFF	; 255
     7de:	29 ec       	ldi	r18, 0xC9	; 201
     7e0:	88 e0       	ldi	r24, 0x08	; 8
     7e2:	91 50       	subi	r25, 0x01	; 1
     7e4:	20 40       	sbci	r18, 0x00	; 0
     7e6:	80 40       	sbci	r24, 0x00	; 0
     7e8:	e1 f7       	brne	.-8      	; 0x7e2 <spotmult+0x1aa>
     7ea:	00 c0       	rjmp	.+0      	; 0x7ec <spotmult+0x1b4>
     7ec:	00 00       	nop
			 _delay_ms(180);
			 DDRB = 0xef;
     7ee:	07 bb       	out	0x17, r16	; 23
     7f0:	0f 90       	pop	r0
     7f2:	0f 90       	pop	r0
     7f4:	0f 90       	pop	r0
     7f6:	0f 90       	pop	r0
     7f8:	0f 90       	pop	r0
     7fa:	0f 90       	pop	r0
				LCD_string(0x88,msg);
				_delay_ms(180);
				DDRB = 0xef;
			 }
			if(en_flag_ccw && en_flag_n == 1){
			 en_flag=0;
     7fc:	89 2d       	mov	r24, r9
     7fe:	98 2d       	mov	r25, r8
			 LCD_string(0x88,msg);
			 _delay_ms(180);
			 DDRB = 0xef;
			}
		}
		if(~en_flag_cw){
     800:	b4 99       	sbic	0x16, 4	; 22
     802:	03 c0       	rjmp	.+6      	; 0x80a <spotmult+0x1d2>
			en_flag=1;
			DDRB = 0x0f;
     804:	17 bb       	out	0x17, r17	; 23
			 _delay_ms(180);
			 DDRB = 0xef;
			}
		}
		if(~en_flag_cw){
			en_flag=1;
     806:	8d 2f       	mov	r24, r29
     808:	9c 2f       	mov	r25, r28
			DDRB = 0x0f;
		}
		if(en_flag_sw){
     80a:	b6 9b       	sbis	0x16, 6	; 22
     80c:	68 cf       	rjmp	.-304    	; 0x6de <spotmult+0xa6>
			eeprom_write_byte(1,bal);
     80e:	60 91 9b 01 	lds	r22, 0x019B	; 0x80019b <bal>
     812:	81 e0       	ldi	r24, 0x01	; 1
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <eeprom_write_byte>
			bbl = eeprom_read_byte(1);
     81a:	81 e0       	ldi	r24, 0x01	; 1
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	90 93 98 01 	sts	0x0198, r25	; 0x800198 <bbl+0x1>
     828:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <bbl>
			break;
		}
	  }
	}
     82c:	10 c0       	rjmp	.+32     	; 0x84e <spotmult+0x216>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     82e:	25 e3       	ldi	r18, 0x35	; 53
     830:	2a 95       	dec	r18
     832:	f1 f7       	brne	.-4      	; 0x830 <spotmult+0x1f8>
     834:	00 00       	nop
		_delay_us(10);
		  if(en_flag_cw && en_flag ==1 ){
			  if(en_flag_ccw) en_flag_n =1;
			  else en_flag_n =2;
			  _delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
     836:	26 b3       	in	r18, 0x16	; 22
				//lcd_on_off(1,0,0);
				LCD_string(0x88,msg);
				_delay_ms(180);
				DDRB = 0xef;
			 }
			if(en_flag_ccw && en_flag_n == 1){
     838:	b5 99       	sbic	0x16, 5	; 22
     83a:	a1 cf       	rjmp	.-190    	; 0x77e <spotmult+0x146>
     83c:	e1 cf       	rjmp	.-62     	; 0x800 <spotmult+0x1c8>
     83e:	25 e3       	ldi	r18, 0x35	; 53
     840:	2a 95       	dec	r18
     842:	f1 f7       	brne	.-4      	; 0x840 <spotmult+0x208>
     844:	00 00       	nop
		_delay_us(10);
		  if(en_flag_cw && en_flag ==1 ){
			  if(en_flag_ccw) en_flag_n =1;
			  else en_flag_n =2;
			  _delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
     846:	b5 9b       	sbis	0x16, 5	; 22
     848:	57 cf       	rjmp	.-338    	; 0x6f8 <spotmult+0xc0>
				//lcd_on_off(1,0,0);
				LCD_string(0x88,msg);
				_delay_ms(180);
				DDRB = 0xef;
			 }
			if(en_flag_ccw && en_flag_n == 1){
     84a:	26 b3       	in	r18, 0x16	; 22
     84c:	d9 cf       	rjmp	.-78     	; 0x800 <spotmult+0x1c8>
			eeprom_write_byte(1,bal);
			bbl = eeprom_read_byte(1);
			break;
		}
	  }
	}
     84e:	df 91       	pop	r29
     850:	cf 91       	pop	r28
     852:	1f 91       	pop	r17
     854:	0f 91       	pop	r16
     856:	ff 90       	pop	r15
     858:	ef 90       	pop	r14
     85a:	df 90       	pop	r13
     85c:	cf 90       	pop	r12
     85e:	bf 90       	pop	r11
     860:	af 90       	pop	r10
     862:	9f 90       	pop	r9
     864:	8f 90       	pop	r8
     866:	7f 90       	pop	r7
     868:	08 95       	ret

0000086a <spotrest>:
void spotrest (void){
     86a:	5f 92       	push	r5
     86c:	6f 92       	push	r6
     86e:	7f 92       	push	r7
     870:	8f 92       	push	r8
     872:	9f 92       	push	r9
     874:	af 92       	push	r10
     876:	bf 92       	push	r11
     878:	cf 92       	push	r12
     87a:	df 92       	push	r13
     87c:	ef 92       	push	r14
     87e:	ff 92       	push	r15
     880:	0f 93       	push	r16
     882:	1f 93       	push	r17
     884:	cf 93       	push	r28
     886:	df 93       	push	r29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     888:	2f ef       	ldi	r18, 0xFF	; 255
     88a:	85 ea       	ldi	r24, 0xA5	; 165
     88c:	9e e0       	ldi	r25, 0x0E	; 14
     88e:	21 50       	subi	r18, 0x01	; 1
     890:	80 40       	sbci	r24, 0x00	; 0
     892:	90 40       	sbci	r25, 0x00	; 0
     894:	e1 f7       	brne	.-8      	; 0x88e <spotrest+0x24>
     896:	00 c0       	rjmp	.+0      	; 0x898 <spotrest+0x2e>
     898:	00 00       	nop
	_delay_ms(300);
	//LCD_initialize();
	nal = eeprom_read_byte(2);
     89a:	82 e0       	ldi	r24, 0x02	; 2
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
     8a2:	28 2f       	mov	r18, r24
     8a4:	30 e0       	ldi	r19, 0x00	; 0
     8a6:	30 93 9a 01 	sts	0x019A, r19	; 0x80019a <nal+0x1>
     8aa:	20 93 99 01 	sts	0x0199, r18	; 0x800199 <nal>
	sprintf(msg,"REST=%2d ",nal);
     8ae:	1f 92       	push	r1
     8b0:	8f 93       	push	r24
     8b2:	87 ee       	ldi	r24, 0xE7	; 231
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	9f 93       	push	r25
     8b8:	8f 93       	push	r24
     8ba:	81 e8       	ldi	r24, 0x81	; 129
     8bc:	91 e0       	ldi	r25, 0x01	; 1
     8be:	9f 93       	push	r25
     8c0:	8f 93       	push	r24
     8c2:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
	//lcd_on_off(1,0,0);
	LCD_string(0xc0,msg);
     8c6:	61 e8       	ldi	r22, 0x81	; 129
     8c8:	71 e0       	ldi	r23, 0x01	; 1
     8ca:	80 ec       	ldi	r24, 0xC0	; 192
     8cc:	02 dd       	rcall	.-1532   	; 0x2d2 <LCD_string>
    DDRB = 0x0f;
     8ce:	8f e0       	ldi	r24, 0x0F	; 15
     8d0:	87 bb       	out	0x17, r24	; 23
     8d2:	0f 90       	pop	r0
     8d4:	0f 90       	pop	r0
     8d6:	0f 90       	pop	r0
     8d8:	0f 90       	pop	r0
     8da:	0f 90       	pop	r0
     8dc:	0f 90       	pop	r0
	int en_flag=1;
     8de:	81 e0       	ldi	r24, 0x01	; 1
     8e0:	90 e0       	ldi	r25, 0x00	; 0
			if(en_flag_ccw) en_flag_n =1;
			else en_flag_n =2;
			_delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
				en_flag=0;
				DDRB = 0XFF;
     8e2:	55 24       	eor	r5, r5
     8e4:	5a 94       	dec	r5
					else nal=5;
				}
				else nal = 200;
				_delay_ms(10);
				//dis_cmd(0x01);
				sprintf(msg,"REST=%2d ",nal);
     8e6:	0f 2e       	mov	r0, r31
     8e8:	f7 ee       	ldi	r31, 0xE7	; 231
     8ea:	ef 2e       	mov	r14, r31
     8ec:	f0 e0       	ldi	r31, 0x00	; 0
     8ee:	ff 2e       	mov	r15, r31
     8f0:	f0 2d       	mov	r31, r0
     8f2:	01 e8       	ldi	r16, 0x81	; 129
     8f4:	11 e0       	ldi	r17, 0x01	; 1
				lcd_on_off(1,0,0);
				LCD_string(0xc0,msg);
				_delay_ms(180);
				DDRB = 0xef;
     8f6:	0f 2e       	mov	r0, r31
     8f8:	ff ee       	ldi	r31, 0xEF	; 239
     8fa:	6f 2e       	mov	r6, r31
     8fc:	f0 2d       	mov	r31, r0
		if(en_flag_cw && en_flag ==1 ){
			if(en_flag_ccw) en_flag_n =1;
			else en_flag_n =2;
			_delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
				en_flag=0;
     8fe:	71 2c       	mov	r7, r1
     900:	81 2c       	mov	r8, r1
					if(nal>4){
				        nal+=5;
					}
					else nal=5;
				}
				else nal = 200;
     902:	0f 2e       	mov	r0, r31
     904:	f8 ec       	ldi	r31, 0xC8	; 200
     906:	af 2e       	mov	r10, r31
     908:	b1 2c       	mov	r11, r1
     90a:	f0 2d       	mov	r31, r0
				DDRB = 0XFF;
				if(nal<201){
					if(nal>4){
				        nal+=5;
					}
					else nal=5;
     90c:	0f 2e       	mov	r0, r31
     90e:	f5 e0       	ldi	r31, 0x05	; 5
     910:	cf 2e       	mov	r12, r31
     912:	d1 2c       	mov	r13, r1
     914:	f0 2d       	mov	r31, r0
			 DDRB = 0xef;
			}
		}
		if(~en_flag_cw){
			en_flag=1;
			DDRB = 0x0f;
     916:	0f 2e       	mov	r0, r31
     918:	ff e0       	ldi	r31, 0x0F	; 15
     91a:	9f 2e       	mov	r9, r31
     91c:	f0 2d       	mov	r31, r0
			 _delay_ms(180);
			 DDRB = 0xef;
			}
		}
		if(~en_flag_cw){
			en_flag=1;
     91e:	d1 e0       	ldi	r29, 0x01	; 1
     920:	c0 e0       	ldi	r28, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     922:	25 e3       	ldi	r18, 0x35	; 53
     924:	2a 95       	dec	r18
     926:	f1 f7       	brne	.-4      	; 0x924 <spotrest+0xba>
     928:	00 00       	nop
    DDRB = 0x0f;
	int en_flag=1;
	int en_flag_n = 0;
	while(1){
		_delay_us(10);
		if(en_flag_cw && en_flag ==1 ){
     92a:	b4 9b       	sbis	0x16, 4	; 22
     92c:	8f c0       	rjmp	.+286    	; 0xa4c <spotrest+0x1e2>
     92e:	81 30       	cpi	r24, 0x01	; 1
     930:	91 05       	cpc	r25, r1
     932:	09 f0       	breq	.+2      	; 0x936 <spotrest+0xcc>
     934:	8b c0       	rjmp	.+278    	; 0xa4c <spotrest+0x1e2>
			if(en_flag_ccw) en_flag_n =1;
     936:	b5 99       	sbic	0x16, 5	; 22
     938:	a0 c0       	rjmp	.+320    	; 0xa7a <spotrest+0x210>
     93a:	a7 c0       	rjmp	.+334    	; 0xa8a <spotrest+0x220>
			else en_flag_n =2;
			_delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
				en_flag=0;
				DDRB = 0XFF;
     93c:	57 ba       	out	0x17, r5	; 23
				if(nal<201){
     93e:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <nal>
     942:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <nal+0x1>
     946:	89 3c       	cpi	r24, 0xC9	; 201
     948:	91 05       	cpc	r25, r1
     94a:	74 f4       	brge	.+28     	; 0x968 <spotrest+0xfe>
					if(nal>4){
     94c:	85 30       	cpi	r24, 0x05	; 5
     94e:	91 05       	cpc	r25, r1
     950:	34 f0       	brlt	.+12     	; 0x95e <spotrest+0xf4>
				        nal+=5;
     952:	05 96       	adiw	r24, 0x05	; 5
     954:	90 93 9a 01 	sts	0x019A, r25	; 0x80019a <nal+0x1>
     958:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <nal>
     95c:	09 c0       	rjmp	.+18     	; 0x970 <spotrest+0x106>
					}
					else nal=5;
     95e:	d0 92 9a 01 	sts	0x019A, r13	; 0x80019a <nal+0x1>
     962:	c0 92 99 01 	sts	0x0199, r12	; 0x800199 <nal>
     966:	04 c0       	rjmp	.+8      	; 0x970 <spotrest+0x106>
				}
				else nal = 200;
     968:	b0 92 9a 01 	sts	0x019A, r11	; 0x80019a <nal+0x1>
     96c:	a0 92 99 01 	sts	0x0199, r10	; 0x800199 <nal>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     970:	8f e3       	ldi	r24, 0x3F	; 63
     972:	9c e9       	ldi	r25, 0x9C	; 156
     974:	01 97       	sbiw	r24, 0x01	; 1
     976:	f1 f7       	brne	.-4      	; 0x974 <spotrest+0x10a>
     978:	00 c0       	rjmp	.+0      	; 0x97a <spotrest+0x110>
     97a:	00 00       	nop
				_delay_ms(10);
				//dis_cmd(0x01);
				sprintf(msg,"REST=%2d ",nal);
     97c:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <nal+0x1>
     980:	8f 93       	push	r24
     982:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <nal>
     986:	8f 93       	push	r24
     988:	ff 92       	push	r15
     98a:	ef 92       	push	r14
     98c:	1f 93       	push	r17
     98e:	0f 93       	push	r16
     990:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
	unsigned loo;
	loo = 0b00001000;
	if(D==1)  loo |= 0b00000100;
	if(C==1)  loo |= 0b00000010;
	if(B==1)  loo |= 0b00000001;
	dis_cmd(loo);
     994:	8c e0       	ldi	r24, 0x0C	; 12
     996:	3d dc       	rcall	.-1926   	; 0x212 <dis_cmd>
				lcd_on_off(1,0,0);
				LCD_string(0xc0,msg);
     998:	b8 01       	movw	r22, r16
     99a:	80 ec       	ldi	r24, 0xC0	; 192
     99c:	9a dc       	rcall	.-1740   	; 0x2d2 <LCD_string>
     99e:	9f ef       	ldi	r25, 0xFF	; 255
     9a0:	29 ec       	ldi	r18, 0xC9	; 201
     9a2:	88 e0       	ldi	r24, 0x08	; 8
     9a4:	91 50       	subi	r25, 0x01	; 1
     9a6:	20 40       	sbci	r18, 0x00	; 0
     9a8:	80 40       	sbci	r24, 0x00	; 0
     9aa:	e1 f7       	brne	.-8      	; 0x9a4 <spotrest+0x13a>
     9ac:	00 c0       	rjmp	.+0      	; 0x9ae <spotrest+0x144>
     9ae:	00 00       	nop
				_delay_ms(180);
				DDRB = 0xef;
     9b0:	67 ba       	out	0x17, r6	; 23
			}
			if(en_flag_ccw && en_flag_n == 1){
     9b2:	86 b3       	in	r24, 0x16	; 22
     9b4:	0f 90       	pop	r0
     9b6:	0f 90       	pop	r0
     9b8:	0f 90       	pop	r0
     9ba:	0f 90       	pop	r0
     9bc:	0f 90       	pop	r0
     9be:	0f 90       	pop	r0
		if(en_flag_cw && en_flag ==1 ){
			if(en_flag_ccw) en_flag_n =1;
			else en_flag_n =2;
			_delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
				en_flag=0;
     9c0:	87 2d       	mov	r24, r7
     9c2:	98 2d       	mov	r25, r8
     9c4:	43 c0       	rjmp	.+134    	; 0xa4c <spotrest+0x1e2>
				_delay_ms(180);
				DDRB = 0xef;
			}
			if(en_flag_ccw && en_flag_n == 1){
				en_flag=0;
				DDRB = 0XFF;
     9c6:	57 ba       	out	0x17, r5	; 23
			 if(nal<201){
     9c8:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <nal>
     9cc:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <nal+0x1>
     9d0:	89 3c       	cpi	r24, 0xC9	; 201
     9d2:	91 05       	cpc	r25, r1
     9d4:	74 f4       	brge	.+28     	; 0x9f2 <spotrest+0x188>
				 if(nal>4){
     9d6:	85 30       	cpi	r24, 0x05	; 5
     9d8:	91 05       	cpc	r25, r1
     9da:	34 f0       	brlt	.+12     	; 0x9e8 <spotrest+0x17e>
					  nal-=5;
     9dc:	05 97       	sbiw	r24, 0x05	; 5
     9de:	90 93 9a 01 	sts	0x019A, r25	; 0x80019a <nal+0x1>
     9e2:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <nal>
     9e6:	09 c0       	rjmp	.+18     	; 0x9fa <spotrest+0x190>
				 }
				 else nal =5;
     9e8:	d0 92 9a 01 	sts	0x019A, r13	; 0x80019a <nal+0x1>
     9ec:	c0 92 99 01 	sts	0x0199, r12	; 0x800199 <nal>
     9f0:	04 c0       	rjmp	.+8      	; 0x9fa <spotrest+0x190>
			 }
			 else nal =200;
     9f2:	b0 92 9a 01 	sts	0x019A, r11	; 0x80019a <nal+0x1>
     9f6:	a0 92 99 01 	sts	0x0199, r10	; 0x800199 <nal>
     9fa:	8f e3       	ldi	r24, 0x3F	; 63
     9fc:	9c e9       	ldi	r25, 0x9C	; 156
     9fe:	01 97       	sbiw	r24, 0x01	; 1
     a00:	f1 f7       	brne	.-4      	; 0x9fe <spotrest+0x194>
     a02:	00 c0       	rjmp	.+0      	; 0xa04 <spotrest+0x19a>
     a04:	00 00       	nop
			 _delay_ms(10);
			 //dis_cmd(0x01);
			 sprintf(msg,"REST=%2d ",nal);
     a06:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <nal+0x1>
     a0a:	8f 93       	push	r24
     a0c:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <nal>
     a10:	8f 93       	push	r24
     a12:	ff 92       	push	r15
     a14:	ef 92       	push	r14
     a16:	1f 93       	push	r17
     a18:	0f 93       	push	r16
     a1a:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
     a1e:	8c e0       	ldi	r24, 0x0C	; 12
			 lcd_on_off(1,0,0);
			 LCD_string(0xc0,msg);
     a20:	f8 db       	rcall	.-2064   	; 0x212 <dis_cmd>
     a22:	b8 01       	movw	r22, r16
     a24:	80 ec       	ldi	r24, 0xC0	; 192
     a26:	55 dc       	rcall	.-1878   	; 0x2d2 <LCD_string>
     a28:	9f ef       	ldi	r25, 0xFF	; 255
     a2a:	29 ec       	ldi	r18, 0xC9	; 201
     a2c:	88 e0       	ldi	r24, 0x08	; 8
     a2e:	91 50       	subi	r25, 0x01	; 1
     a30:	20 40       	sbci	r18, 0x00	; 0
     a32:	80 40       	sbci	r24, 0x00	; 0
     a34:	e1 f7       	brne	.-8      	; 0xa2e <spotrest+0x1c4>
     a36:	00 c0       	rjmp	.+0      	; 0xa38 <spotrest+0x1ce>
     a38:	00 00       	nop
			 _delay_ms(180);
			 DDRB = 0xef;
     a3a:	67 ba       	out	0x17, r6	; 23
     a3c:	0f 90       	pop	r0
     a3e:	0f 90       	pop	r0
     a40:	0f 90       	pop	r0
     a42:	0f 90       	pop	r0
     a44:	0f 90       	pop	r0
     a46:	0f 90       	pop	r0
				LCD_string(0xc0,msg);
				_delay_ms(180);
				DDRB = 0xef;
			}
			if(en_flag_ccw && en_flag_n == 1){
				en_flag=0;
     a48:	87 2d       	mov	r24, r7
     a4a:	98 2d       	mov	r25, r8
			 LCD_string(0xc0,msg);
			 _delay_ms(180);
			 DDRB = 0xef;
			}
		}
		if(~en_flag_cw){
     a4c:	b4 99       	sbic	0x16, 4	; 22
     a4e:	03 c0       	rjmp	.+6      	; 0xa56 <spotrest+0x1ec>
			en_flag=1;
			DDRB = 0x0f;
     a50:	97 ba       	out	0x17, r9	; 23
			 _delay_ms(180);
			 DDRB = 0xef;
			}
		}
		if(~en_flag_cw){
			en_flag=1;
     a52:	8d 2f       	mov	r24, r29
     a54:	9c 2f       	mov	r25, r28
			DDRB = 0x0f;
		}
	    if(en_flag_sw){
     a56:	b6 9b       	sbis	0x16, 6	; 22
     a58:	64 cf       	rjmp	.-312    	; 0x922 <spotrest+0xb8>
		   eeprom_write_byte(2,nal);
     a5a:	60 91 99 01 	lds	r22, 0x0199	; 0x800199 <nal>
     a5e:	82 e0       	ldi	r24, 0x02	; 2
     a60:	90 e0       	ldi	r25, 0x00	; 0
     a62:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <eeprom_write_byte>
		   nbl = eeprom_read_byte(2);
     a66:	82 e0       	ldi	r24, 0x02	; 2
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <nbl+0x1>
     a74:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <nbl>
		   break;
	   }
	}
}
     a78:	10 c0       	rjmp	.+32     	; 0xa9a <spotrest+0x230>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a7a:	25 e3       	ldi	r18, 0x35	; 53
     a7c:	2a 95       	dec	r18
     a7e:	f1 f7       	brne	.-4      	; 0xa7c <spotrest+0x212>
     a80:	00 00       	nop
		_delay_us(10);
		if(en_flag_cw && en_flag ==1 ){
			if(en_flag_ccw) en_flag_n =1;
			else en_flag_n =2;
			_delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
     a82:	26 b3       	in	r18, 0x16	; 22
				lcd_on_off(1,0,0);
				LCD_string(0xc0,msg);
				_delay_ms(180);
				DDRB = 0xef;
			}
			if(en_flag_ccw && en_flag_n == 1){
     a84:	b5 99       	sbic	0x16, 5	; 22
     a86:	9f cf       	rjmp	.-194    	; 0x9c6 <spotrest+0x15c>
     a88:	e1 cf       	rjmp	.-62     	; 0xa4c <spotrest+0x1e2>
     a8a:	25 e3       	ldi	r18, 0x35	; 53
     a8c:	2a 95       	dec	r18
     a8e:	f1 f7       	brne	.-4      	; 0xa8c <spotrest+0x222>
     a90:	00 00       	nop
		_delay_us(10);
		if(en_flag_cw && en_flag ==1 ){
			if(en_flag_ccw) en_flag_n =1;
			else en_flag_n =2;
			_delay_us(10);
			if(~en_flag_ccw && en_flag_n == 2){
     a92:	b5 9b       	sbis	0x16, 5	; 22
     a94:	53 cf       	rjmp	.-346    	; 0x93c <spotrest+0xd2>
				lcd_on_off(1,0,0);
				LCD_string(0xc0,msg);
				_delay_ms(180);
				DDRB = 0xef;
			}
			if(en_flag_ccw && en_flag_n == 1){
     a96:	26 b3       	in	r18, 0x16	; 22
     a98:	d9 cf       	rjmp	.-78     	; 0xa4c <spotrest+0x1e2>
		   eeprom_write_byte(2,nal);
		   nbl = eeprom_read_byte(2);
		   break;
	   }
	}
}
     a9a:	df 91       	pop	r29
     a9c:	cf 91       	pop	r28
     a9e:	1f 91       	pop	r17
     aa0:	0f 91       	pop	r16
     aa2:	ff 90       	pop	r15
     aa4:	ef 90       	pop	r14
     aa6:	df 90       	pop	r13
     aa8:	cf 90       	pop	r12
     aaa:	bf 90       	pop	r11
     aac:	af 90       	pop	r10
     aae:	9f 90       	pop	r9
     ab0:	8f 90       	pop	r8
     ab2:	7f 90       	pop	r7
     ab4:	6f 90       	pop	r6
     ab6:	5f 90       	pop	r5
     ab8:	08 95       	ret

00000aba <adc>:
float adc(void){
	int ADval;
	float Vin;
	char val[20];
	DDRA = 0x00;
     aba:	1a ba       	out	0x1a, r1	; 26
	DDRC = 0xff;
     abc:	8f ef       	ldi	r24, 0xFF	; 255
     abe:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x40;
     ac0:	80 e4       	ldi	r24, 0x40	; 64
     ac2:	85 bb       	out	0x15, r24	; 21
	ADMUX = 0x40;
     ac4:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0x87;
     ac6:	87 e8       	ldi	r24, 0x87	; 135
     ac8:	86 b9       	out	0x06, r24	; 6
	while(1){
		ADCSRA |= 0x40;
     aca:	36 9a       	sbi	0x06, 6	; 6
		while((ADCSRA & 0x10)==0);
     acc:	34 9b       	sbis	0x06, 4	; 6
     ace:	fe cf       	rjmp	.-4      	; 0xacc <adc+0x12>
		ADval = (int)ADCL + ((int)ADCH<<8);
     ad0:	84 b1       	in	r24, 0x04	; 4
     ad2:	65 b1       	in	r22, 0x05	; 5
		Vin = (float)ADval;
		return Vin;
     ad4:	70 e0       	ldi	r23, 0x00	; 0
     ad6:	76 2f       	mov	r23, r22
     ad8:	66 27       	eor	r22, r22
     ada:	68 0f       	add	r22, r24
     adc:	71 1d       	adc	r23, r1
     ade:	07 2e       	mov	r0, r23
     ae0:	00 0c       	add	r0, r0
     ae2:	88 0b       	sbc	r24, r24
     ae4:	99 0b       	sbc	r25, r25
     ae6:	0c 94 4e 0e 	jmp	0x1c9c	; 0x1c9c <__floatsisf>
	}
} 
     aea:	08 95       	ret

00000aec <auto_spot>:
void auto_spot(void){
     aec:	bf 92       	push	r11
     aee:	cf 92       	push	r12
     af0:	df 92       	push	r13
     af2:	ef 92       	push	r14
     af4:	ff 92       	push	r15
     af6:	0f 93       	push	r16
     af8:	1f 93       	push	r17
     afa:	cf 93       	push	r28
     afc:	df 93       	push	r29
if(autospot_sw==1){
     afe:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
     b02:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
     b06:	01 97       	sbiw	r24, 0x01	; 1
     b08:	59 f4       	brne	.+22     	; 0xb20 <auto_spot+0x34>
LCD_string(0xc9, "ON  ");
     b0a:	61 ef       	ldi	r22, 0xF1	; 241
     b0c:	70 e0       	ldi	r23, 0x00	; 0
     b0e:	89 ec       	ldi	r24, 0xC9	; 201
     b10:	e0 db       	rcall	.-2112   	; 0x2d2 <LCD_string>
spot_onoff_counter =2;
     b12:	82 e0       	ldi	r24, 0x02	; 2
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <spot_onoff_counter+0x1>
     b1a:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <spot_onoff_counter>
     b1e:	0a c0       	rjmp	.+20     	; 0xb34 <auto_spot+0x48>
}
else{ 
LCD_string(0xc9,"OFF  ");
     b20:	66 ef       	ldi	r22, 0xF6	; 246
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	89 ec       	ldi	r24, 0xC9	; 201
     b26:	d5 db       	rcall	.-2134   	; 0x2d2 <LCD_string>
spot_onoff_counter =1;
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <spot_onoff_counter+0x1>
     b30:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <spot_onoff_counter>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b34:	2f ef       	ldi	r18, 0xFF	; 255
     b36:	85 ea       	ldi	r24, 0xA5	; 165
     b38:	9e e0       	ldi	r25, 0x0E	; 14
     b3a:	21 50       	subi	r18, 0x01	; 1
     b3c:	80 40       	sbci	r24, 0x00	; 0
     b3e:	90 40       	sbci	r25, 0x00	; 0
     b40:	e1 f7       	brne	.-8      	; 0xb3a <auto_spot+0x4e>
     b42:	00 c0       	rjmp	.+0      	; 0xb44 <auto_spot+0x58>
     b44:	00 00       	nop
}
_delay_ms(300); 
break_time=0;
     b46:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <break_time+0x1>
     b4a:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <break_time>
PORTC = 0x40;
     b4e:	80 e4       	ldi	r24, 0x40	; 64
     b50:	85 bb       	out	0x15, r24	; 21
DDRB = 0x0f;
     b52:	8f e0       	ldi	r24, 0x0F	; 15
     b54:	87 bb       	out	0x17, r24	; 23
  while(1){
	  key_value = spot_onoff_counter | key_Data;
     b56:	ca e6       	ldi	r28, 0x6A	; 106
     b58:	d1 e0       	ldi	r29, 0x01	; 1
		 case 17|33:spot_onoff_counter =2;
					LCD_string(0xc9, "ON  ");
					_delay_ms(150);
		            break;
		  
		 case 18|34:spot_onoff_counter =1;
     b5a:	01 e0       	ldi	r16, 0x01	; 1
     b5c:	10 e0       	ldi	r17, 0x00	; 0
					break;
					
					
		 case 66 : autospot_sw=1;
				   break_time=1;
				   PORTC = 0x40;
     b5e:	68 94       	set
     b60:	bb 24       	eor	r11, r11
     b62:	b6 f8       	bld	r11, 6
				   eeprom_write_byte(3,autospot_sw);
     b64:	0f 2e       	mov	r0, r31
     b66:	fe e6       	ldi	r31, 0x6E	; 110
     b68:	cf 2e       	mov	r12, r31
     b6a:	f1 e0       	ldi	r31, 0x01	; 1
     b6c:	df 2e       	mov	r13, r31
     b6e:	f0 2d       	mov	r31, r0
PORTC = 0x40;
DDRB = 0x0f;
  while(1){
	  key_value = spot_onoff_counter | key_Data;
	  switch(key_value){
		 case 17|33:spot_onoff_counter =2;
     b70:	68 94       	set
     b72:	ee 24       	eor	r14, r14
     b74:	e1 f8       	bld	r14, 1
     b76:	f1 2c       	mov	r15, r1
_delay_ms(300); 
break_time=0;
PORTC = 0x40;
DDRB = 0x0f;
  while(1){
	  key_value = spot_onoff_counter | key_Data;
     b78:	86 b3       	in	r24, 0x16	; 22
     b7a:	80 7f       	andi	r24, 0xF0	; 240
     b7c:	98 81       	ld	r25, Y
     b7e:	89 2b       	or	r24, r25
     b80:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <key_value>
	  switch(key_value){
     b84:	82 33       	cpi	r24, 0x32	; 50
     b86:	d9 f0       	breq	.+54     	; 0xbbe <auto_spot+0xd2>
     b88:	1c f4       	brge	.+6      	; 0xb90 <auto_spot+0xa4>
     b8a:	81 33       	cpi	r24, 0x31	; 49
     b8c:	31 f0       	breq	.+12     	; 0xb9a <auto_spot+0xae>
     b8e:	4c c0       	rjmp	.+152    	; 0xc28 <auto_spot+0x13c>
     b90:	81 34       	cpi	r24, 0x41	; 65
     b92:	e1 f1       	breq	.+120    	; 0xc0c <auto_spot+0x120>
     b94:	82 34       	cpi	r24, 0x42	; 66
     b96:	51 f1       	breq	.+84     	; 0xbec <auto_spot+0x100>
     b98:	47 c0       	rjmp	.+142    	; 0xc28 <auto_spot+0x13c>
		 case 17|33:spot_onoff_counter =2;
     b9a:	f0 92 6b 01 	sts	0x016B, r15	; 0x80016b <spot_onoff_counter+0x1>
     b9e:	e0 92 6a 01 	sts	0x016A, r14	; 0x80016a <spot_onoff_counter>
					LCD_string(0xc9, "ON  ");
     ba2:	61 ef       	ldi	r22, 0xF1	; 241
     ba4:	70 e0       	ldi	r23, 0x00	; 0
     ba6:	89 ec       	ldi	r24, 0xC9	; 201
     ba8:	94 db       	rcall	.-2264   	; 0x2d2 <LCD_string>
     baa:	ef ef       	ldi	r30, 0xFF	; 255
     bac:	f2 e5       	ldi	r31, 0x52	; 82
     bae:	27 e0       	ldi	r18, 0x07	; 7
     bb0:	e1 50       	subi	r30, 0x01	; 1
     bb2:	f0 40       	sbci	r31, 0x00	; 0
     bb4:	20 40       	sbci	r18, 0x00	; 0
     bb6:	e1 f7       	brne	.-8      	; 0xbb0 <auto_spot+0xc4>
     bb8:	00 c0       	rjmp	.+0      	; 0xbba <auto_spot+0xce>
     bba:	00 00       	nop
     bbc:	35 c0       	rjmp	.+106    	; 0xc28 <auto_spot+0x13c>
					_delay_ms(150);
		            break;
		  
		 case 18|34:spot_onoff_counter =1;
     bbe:	10 93 6b 01 	sts	0x016B, r17	; 0x80016b <spot_onoff_counter+0x1>
     bc2:	00 93 6a 01 	sts	0x016A, r16	; 0x80016a <spot_onoff_counter>
		            LCD_string(0xc9, "OFF ");
     bc6:	6c ef       	ldi	r22, 0xFC	; 252
     bc8:	70 e0       	ldi	r23, 0x00	; 0
     bca:	89 ec       	ldi	r24, 0xC9	; 201
     bcc:	82 db       	rcall	.-2300   	; 0x2d2 <LCD_string>
					PORTC = 0x00;
     bce:	15 ba       	out	0x15, r1	; 21
					autospot_sw =0;
     bd0:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <autospot_sw+0x1>
     bd4:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <autospot_sw>
     bd8:	8f ef       	ldi	r24, 0xFF	; 255
     bda:	92 e5       	ldi	r25, 0x52	; 82
     bdc:	e7 e0       	ldi	r30, 0x07	; 7
     bde:	81 50       	subi	r24, 0x01	; 1
     be0:	90 40       	sbci	r25, 0x00	; 0
     be2:	e0 40       	sbci	r30, 0x00	; 0
     be4:	e1 f7       	brne	.-8      	; 0xbde <auto_spot+0xf2>
     be6:	00 c0       	rjmp	.+0      	; 0xbe8 <auto_spot+0xfc>
     be8:	00 00       	nop
     bea:	1e c0       	rjmp	.+60     	; 0xc28 <auto_spot+0x13c>
					_delay_ms(150);
					break;
					
					
		 case 66 : autospot_sw=1;
     bec:	10 93 6f 01 	sts	0x016F, r17	; 0x80016f <autospot_sw+0x1>
     bf0:	00 93 6e 01 	sts	0x016E, r16	; 0x80016e <autospot_sw>
				   break_time=1;
     bf4:	10 93 67 01 	sts	0x0167, r17	; 0x800167 <break_time+0x1>
     bf8:	00 93 66 01 	sts	0x0166, r16	; 0x800166 <break_time>
				   PORTC = 0x40;
     bfc:	b5 ba       	out	0x15, r11	; 21
				   eeprom_write_byte(3,autospot_sw);
     bfe:	f6 01       	movw	r30, r12
     c00:	60 81       	ld	r22, Z
     c02:	83 e0       	ldi	r24, 0x03	; 3
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <eeprom_write_byte>
				   break;
     c0a:	0e c0       	rjmp	.+28     	; 0xc28 <auto_spot+0x13c>
				   
		 case 65 : autospot_sw =0;
     c0c:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <autospot_sw+0x1>
     c10:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <autospot_sw>
		           eeprom_write_byte(3,autospot_sw);
     c14:	60 e0       	ldi	r22, 0x00	; 0
     c16:	83 e0       	ldi	r24, 0x03	; 3
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <eeprom_write_byte>
				   break_time=1;
     c1e:	10 93 67 01 	sts	0x0167, r17	; 0x800167 <break_time+0x1>
     c22:	00 93 66 01 	sts	0x0166, r16	; 0x800166 <break_time>
				   PORTC = 0x00;
     c26:	15 ba       	out	0x15, r1	; 21
		           break;		
				   
	  }
	  if(break_time ==1){
     c28:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <break_time>
     c2c:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <break_time+0x1>
     c30:	01 97       	sbiw	r24, 0x01	; 1
     c32:	09 f0       	breq	.+2      	; 0xc36 <auto_spot+0x14a>
     c34:	a1 cf       	rjmp	.-190    	; 0xb78 <auto_spot+0x8c>
		  en_sw_counter=1;
     c36:	81 e0       	ldi	r24, 0x01	; 1
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <en_sw_counter+0x1>
     c3e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <en_sw_counter>
		  break_time=0;
     c42:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <break_time+0x1>
     c46:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <break_time>
     c4a:	ff ef       	ldi	r31, 0xFF	; 255
     c4c:	22 e5       	ldi	r18, 0x52	; 82
     c4e:	87 e0       	ldi	r24, 0x07	; 7
     c50:	f1 50       	subi	r31, 0x01	; 1
     c52:	20 40       	sbci	r18, 0x00	; 0
     c54:	80 40       	sbci	r24, 0x00	; 0
     c56:	e1 f7       	brne	.-8      	; 0xc50 <auto_spot+0x164>
     c58:	00 c0       	rjmp	.+0      	; 0xc5a <auto_spot+0x16e>
     c5a:	00 00       	nop
		  _delay_ms(150);
		  break;
	  }
  }
}
     c5c:	df 91       	pop	r29
     c5e:	cf 91       	pop	r28
     c60:	1f 91       	pop	r17
     c62:	0f 91       	pop	r16
     c64:	ff 90       	pop	r15
     c66:	ef 90       	pop	r14
     c68:	df 90       	pop	r13
     c6a:	cf 90       	pop	r12
     c6c:	bf 90       	pop	r11
     c6e:	08 95       	ret

00000c70 <first_page>:
void first_page(void){
     c70:	cf 93       	push	r28
     c72:	df 93       	push	r29
     c74:	c5 e0       	ldi	r28, 0x05	; 5
     c76:	d0 e0       	ldi	r29, 0x00	; 0
     c78:	8f e3       	ldi	r24, 0x3F	; 63
     c7a:	9c e9       	ldi	r25, 0x9C	; 156
     c7c:	01 97       	sbiw	r24, 0x01	; 1
     c7e:	f1 f7       	brne	.-4      	; 0xc7c <first_page+0xc>
     c80:	00 c0       	rjmp	.+0      	; 0xc82 <first_page+0x12>
     c82:	00 00       	nop
 for(int i=0; i<5; i++){
	 _delay_ms(10);
	LCD_initialize();
     c84:	f9 da       	rcall	.-2574   	; 0x278 <LCD_initialize>
     c86:	8c e0       	ldi	r24, 0x0C	; 12
     c88:	c4 da       	rcall	.-2680   	; 0x212 <dis_cmd>
	lcd_on_off(1,0,0);
	LCD_string(0x81,firstmsg_1);
     c8a:	60 e6       	ldi	r22, 0x60	; 96
     c8c:	70 e0       	ldi	r23, 0x00	; 0
     c8e:	81 e8       	ldi	r24, 0x81	; 129
     c90:	20 db       	rcall	.-2496   	; 0x2d2 <LCD_string>
	LCD_string(0xc0,"");
     c92:	6b ef       	ldi	r22, 0xFB	; 251
     c94:	70 e0       	ldi	r23, 0x00	; 0
     c96:	80 ec       	ldi	r24, 0xC0	; 192
     c98:	1c db       	rcall	.-2504   	; 0x2d2 <LCD_string>
     c9a:	21 97       	sbiw	r28, 0x01	; 1
		  break;
	  }
  }
}
void first_page(void){
 for(int i=0; i<5; i++){
     c9c:	69 f7       	brne	.-38     	; 0xc78 <first_page+0x8>
     c9e:	9f ef       	ldi	r25, 0xFF	; 255
     ca0:	2b e7       	ldi	r18, 0x7B	; 123
     ca2:	82 e9       	ldi	r24, 0x92	; 146
     ca4:	91 50       	subi	r25, 0x01	; 1
     ca6:	20 40       	sbci	r18, 0x00	; 0
     ca8:	80 40       	sbci	r24, 0x00	; 0
     caa:	e1 f7       	brne	.-8      	; 0xca4 <first_page+0x34>
     cac:	00 c0       	rjmp	.+0      	; 0xcae <first_page+0x3e>
     cae:	00 00       	nop
	lcd_on_off(1,0,0);
	LCD_string(0x81,firstmsg_1);
	LCD_string(0xc0,"");
  }
    _delay_ms(3000);
}
     cb0:	df 91       	pop	r29
     cb2:	cf 91       	pop	r28
     cb4:	08 95       	ret

00000cb6 <delay_ms>:
			}
       }
 }
void delay_ms(int ms)
{
	while (ms-- != 0)
     cb6:	00 97       	sbiw	r24, 0x00	; 0
     cb8:	41 f0       	breq	.+16     	; 0xcca <delay_ms+0x14>
     cba:	ef e9       	ldi	r30, 0x9F	; 159
     cbc:	ff e0       	ldi	r31, 0x0F	; 15
     cbe:	31 97       	sbiw	r30, 0x01	; 1
     cc0:	f1 f7       	brne	.-4      	; 0xcbe <delay_ms+0x8>
     cc2:	00 c0       	rjmp	.+0      	; 0xcc4 <delay_ms+0xe>
     cc4:	00 00       	nop
     cc6:	01 97       	sbiw	r24, 0x01	; 1
     cc8:	c1 f7       	brne	.-16     	; 0xcba <delay_ms+0x4>
     cca:	08 95       	ret

00000ccc <__vector_1>:
void spottimeset(void);
void spotmult(void);
void spotrest (void);

ISR(INT0_vect)
{
     ccc:	1f 92       	push	r1
     cce:	0f 92       	push	r0
     cd0:	0f b6       	in	r0, 0x3f	; 63
     cd2:	0f 92       	push	r0
     cd4:	11 24       	eor	r1, r1
     cd6:	2f 93       	push	r18
     cd8:	3f 93       	push	r19
     cda:	4f 93       	push	r20
     cdc:	5f 93       	push	r21
     cde:	6f 93       	push	r22
     ce0:	7f 93       	push	r23
     ce2:	8f 93       	push	r24
     ce4:	9f 93       	push	r25
     ce6:	af 93       	push	r26
     ce8:	bf 93       	push	r27
     cea:	ef 93       	push	r30
     cec:	ff 93       	push	r31
	if(isr_cn == 1 & vbl>=8){
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <isr_cn>
     cf4:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <isr_cn+0x1>
     cf8:	21 30       	cpi	r18, 0x01	; 1
     cfa:	31 05       	cpc	r19, r1
     cfc:	09 f0       	breq	.+2      	; 0xd00 <__vector_1+0x34>
     cfe:	80 e0       	ldi	r24, 0x00	; 0
     d00:	20 91 7a 01 	lds	r18, 0x017A	; 0x80017a <vbl>
     d04:	30 91 7b 01 	lds	r19, 0x017B	; 0x80017b <vbl+0x1>
     d08:	91 e0       	ldi	r25, 0x01	; 1
     d0a:	28 30       	cpi	r18, 0x08	; 8
     d0c:	31 05       	cpc	r19, r1
     d0e:	0c f4       	brge	.+2      	; 0xd12 <__vector_1+0x46>
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	99 23       	and	r25, r25
     d14:	51 f1       	breq	.+84     	; 0xd6a <__vector_1+0x9e>
     d16:	88 23       	and	r24, r24
     d18:	41 f1       	breq	.+80     	; 0xd6a <__vector_1+0x9e>
     d1a:	8f ec       	ldi	r24, 0xCF	; 207
     d1c:	97 e0       	ldi	r25, 0x07	; 7
     d1e:	01 97       	sbiw	r24, 0x01	; 1
     d20:	f1 f7       	brne	.-4      	; 0xd1e <__vector_1+0x52>
     d22:	00 c0       	rjmp	.+0      	; 0xd24 <__vector_1+0x58>
     d24:	00 00       	nop
		_delay_ms(0.5);
		 PORTC = 0x20;
     d26:	80 e2       	ldi	r24, 0x20	; 32
     d28:	85 bb       	out	0x15, r24	; 21
		 delay_ms(spot_time_hz * halfcycle);
     d2a:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <halfcycle>
     d2e:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <halfcycle+0x1>
     d32:	40 91 58 01 	lds	r20, 0x0158	; 0x800158 <halfcycle+0x2>
     d36:	50 91 59 01 	lds	r21, 0x0159	; 0x800159 <halfcycle+0x3>
     d3a:	60 91 5e 01 	lds	r22, 0x015E	; 0x80015e <spot_time_hz>
     d3e:	70 91 5f 01 	lds	r23, 0x015F	; 0x80015f <spot_time_hz+0x1>
     d42:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <spot_time_hz+0x2>
     d46:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <spot_time_hz+0x3>
     d4a:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <__mulsf3>
     d4e:	73 d7       	rcall	.+3814   	; 0x1c36 <__fixsfsi>
     d50:	cb 01       	movw	r24, r22
     d52:	b1 df       	rcall	.-158    	; 0xcb6 <delay_ms>
		 PORTC = 0x00;
     d54:	15 ba       	out	0x15, r1	; 21
		 delay_ms(nbl);
     d56:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <nbl>
     d5a:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <nbl+0x1>
     d5e:	ab df       	rcall	.-170    	; 0xcb6 <delay_ms>
		 isr_cn=0;
     d60:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <isr_cn+0x1>
     d64:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <isr_cn>
     d68:	20 c0       	rjmp	.+64     	; 0xdaa <__vector_1+0xde>
	} 
	if(isr_cn == 1 & vbl<8){
     d6a:	91 e0       	ldi	r25, 0x01	; 1
     d6c:	28 30       	cpi	r18, 0x08	; 8
     d6e:	31 05       	cpc	r19, r1
     d70:	0c f0       	brlt	.+2      	; 0xd74 <__vector_1+0xa8>
     d72:	90 e0       	ldi	r25, 0x00	; 0
     d74:	99 23       	and	r25, r25
     d76:	c9 f0       	breq	.+50     	; 0xdaa <__vector_1+0xde>
     d78:	88 23       	and	r24, r24
     d7a:	b9 f0       	breq	.+46     	; 0xdaa <__vector_1+0xde>
     d7c:	8f ec       	ldi	r24, 0xCF	; 207
     d7e:	97 e0       	ldi	r25, 0x07	; 7
     d80:	01 97       	sbiw	r24, 0x01	; 1
     d82:	f1 f7       	brne	.-4      	; 0xd80 <__vector_1+0xb4>
     d84:	00 c0       	rjmp	.+0      	; 0xd86 <__vector_1+0xba>
     d86:	00 00       	nop
		_delay_ms(0.5);
         PORTC = 0x20;
     d88:	80 e2       	ldi	r24, 0x20	; 32
     d8a:	85 bb       	out	0x15, r24	; 21
	     delay_ms(vbl);
     d8c:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <vbl>
     d90:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <vbl+0x1>
     d94:	90 df       	rcall	.-224    	; 0xcb6 <delay_ms>
	     PORTC = 0x00;
     d96:	15 ba       	out	0x15, r1	; 21
	     delay_ms(nbl);
     d98:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <nbl>
     d9c:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <nbl+0x1>
     da0:	8a df       	rcall	.-236    	; 0xcb6 <delay_ms>
	     isr_cn=0;
     da2:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <isr_cn+0x1>
     da6:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <isr_cn>
	}
}
     daa:	ff 91       	pop	r31
     dac:	ef 91       	pop	r30
     dae:	bf 91       	pop	r27
     db0:	af 91       	pop	r26
     db2:	9f 91       	pop	r25
     db4:	8f 91       	pop	r24
     db6:	7f 91       	pop	r23
     db8:	6f 91       	pop	r22
     dba:	5f 91       	pop	r21
     dbc:	4f 91       	pop	r20
     dbe:	3f 91       	pop	r19
     dc0:	2f 91       	pop	r18
     dc2:	0f 90       	pop	r0
     dc4:	0f be       	out	0x3f, r0	; 63
     dc6:	0f 90       	pop	r0
     dc8:	1f 90       	pop	r1
     dca:	18 95       	reti

00000dcc <auto_read>:
void delay_ms(int ms)
{
	while (ms-- != 0)
	_delay_ms(1);
}
int auto_read(void){
     dcc:	2f 92       	push	r2
     dce:	3f 92       	push	r3
     dd0:	4f 92       	push	r4
     dd2:	5f 92       	push	r5
     dd4:	6f 92       	push	r6
     dd6:	7f 92       	push	r7
     dd8:	8f 92       	push	r8
     dda:	9f 92       	push	r9
     ddc:	af 92       	push	r10
     dde:	bf 92       	push	r11
     de0:	cf 92       	push	r12
     de2:	df 92       	push	r13
     de4:	ef 92       	push	r14
     de6:	ff 92       	push	r15
     de8:	0f 93       	push	r16
     dea:	1f 93       	push	r17
     dec:	cf 93       	push	r28
     dee:	df 93       	push	r29
float maxData = adc();
     df0:	64 de       	rcall	.-824    	; 0xaba <adc>
     df2:	d6 2e       	mov	r13, r22
     df4:	c7 2e       	mov	r12, r23
     df6:	b8 2e       	mov	r11, r24
     df8:	a9 2e       	mov	r10, r25
float minData = maxData;
int current_data=0;
while(1){
	DDRB = 0xBF;
     dfa:	8f eb       	ldi	r24, 0xBF	; 191
     dfc:	87 bb       	out	0x17, r24	; 23
     dfe:	c8 ee       	ldi	r28, 0xE8	; 232
	for(int n=0; n<1000; n++){
		sensor_Value =adc();
     e00:	d3 e0       	ldi	r29, 0x03	; 3
     e02:	5b de       	rcall	.-842    	; 0xaba <adc>
     e04:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <sensor_Value>
     e08:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <sensor_Value+0x1>
     e0c:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <sensor_Value+0x2>
     e10:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <sensor_Value+0x3>
		sum +=sensor_Value;
     e14:	20 91 7d 01 	lds	r18, 0x017D	; 0x80017d <sum>
     e18:	30 91 7e 01 	lds	r19, 0x017E	; 0x80017e <sum+0x1>
     e1c:	40 91 7f 01 	lds	r20, 0x017F	; 0x80017f <sum+0x2>
     e20:	50 91 80 01 	lds	r21, 0x0180	; 0x800180 <sum+0x3>
     e24:	38 d6       	rcall	.+3184   	; 0x1a96 <__addsf3>
     e26:	60 93 7d 01 	sts	0x017D, r22	; 0x80017d <sum>
     e2a:	70 93 7e 01 	sts	0x017E, r23	; 0x80017e <sum+0x1>
     e2e:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <sum+0x2>
     e32:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <sum+0x3>
     e36:	21 97       	sbiw	r28, 0x01	; 1
float maxData = adc();
float minData = maxData;
int current_data=0;
while(1){
	DDRB = 0xBF;
	for(int n=0; n<1000; n++){
     e38:	21 f7       	brne	.-56     	; 0xe02 <auto_read+0x36>
		sensor_Value =adc();
		sum +=sensor_Value;
	}
	average = (float)sum/1000;
     e3a:	20 e0       	ldi	r18, 0x00	; 0
     e3c:	30 e0       	ldi	r19, 0x00	; 0
     e3e:	4a e7       	ldi	r20, 0x7A	; 122
     e40:	54 e4       	ldi	r21, 0x44	; 68
     e42:	91 d6       	rcall	.+3362   	; 0x1b66 <__divsf3>
     e44:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <average>
     e48:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <average+0x1>
     e4c:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <average+0x2>
     e50:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <average+0x3>
	sum =0;
     e54:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <sum>
     e58:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <sum+0x1>
     e5c:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <sum+0x2>
     e60:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <sum+0x3>
	while (ms-- != 0)
	_delay_ms(1);
}
int auto_read(void){
float maxData = adc();
float minData = maxData;
     e64:	9d 2c       	mov	r9, r13
     e66:	8c 2c       	mov	r8, r12
     e68:	7b 2c       	mov	r7, r11
	for(int n=0; n<1000; n++){
		sensor_Value =adc();
		sum +=sensor_Value;
	}
	average = (float)sum/1000;
	sum =0;
     e6a:	6a 2c       	mov	r6, r10
     e6c:	c8 ee       	ldi	r28, 0xE8	; 232
	for(int j=0; j<1000; j++){
		current_data =adc();
     e6e:	d3 e0       	ldi	r29, 0x03	; 3
     e70:	24 de       	rcall	.-952    	; 0xaba <adc>
		if (current_data > maxData) maxData = current_data;
     e72:	e1 d6       	rcall	.+3522   	; 0x1c36 <__fixsfsi>
     e74:	07 2e       	mov	r0, r23
     e76:	00 0c       	add	r0, r0
     e78:	88 0b       	sbc	r24, r24
     e7a:	99 0b       	sbc	r25, r25
     e7c:	0f d7       	rcall	.+3614   	; 0x1c9c <__floatsisf>
     e7e:	e6 2e       	mov	r14, r22
     e80:	f7 2e       	mov	r15, r23
     e82:	08 2f       	mov	r16, r24
     e84:	19 2f       	mov	r17, r25
     e86:	2d 2d       	mov	r18, r13
     e88:	3c 2d       	mov	r19, r12
     e8a:	4b 2d       	mov	r20, r11
     e8c:	5a 2d       	mov	r21, r10
     e8e:	b6 d7       	rcall	.+3948   	; 0x1dfc <__gesf2>
     e90:	18 16       	cp	r1, r24
     e92:	24 f4       	brge	.+8      	; 0xe9c <auto_read+0xd0>
     e94:	de 2c       	mov	r13, r14
     e96:	cf 2c       	mov	r12, r15
     e98:	b0 2e       	mov	r11, r16
     e9a:	a1 2e       	mov	r10, r17
     e9c:	29 2d       	mov	r18, r9
		if (current_data < minData) minData = current_data;
     e9e:	38 2d       	mov	r19, r8
     ea0:	47 2d       	mov	r20, r7
     ea2:	56 2d       	mov	r21, r6
     ea4:	6e 2d       	mov	r22, r14
     ea6:	7f 2d       	mov	r23, r15
     ea8:	80 2f       	mov	r24, r16
     eaa:	91 2f       	mov	r25, r17
     eac:	58 d6       	rcall	.+3248   	; 0x1b5e <__cmpsf2>
     eae:	88 23       	and	r24, r24
     eb0:	24 f4       	brge	.+8      	; 0xeba <auto_read+0xee>
     eb2:	9e 2c       	mov	r9, r14
     eb4:	8f 2c       	mov	r8, r15
     eb6:	70 2e       	mov	r7, r16
     eb8:	61 2e       	mov	r6, r17
     eba:	20 91 4a 01 	lds	r18, 0x014A	; 0x80014a <average>
		sum_rms +=(current_data - average);
     ebe:	30 91 4b 01 	lds	r19, 0x014B	; 0x80014b <average+0x1>
     ec2:	40 91 4c 01 	lds	r20, 0x014C	; 0x80014c <average+0x2>
     ec6:	50 91 4d 01 	lds	r21, 0x014D	; 0x80014d <average+0x3>
     eca:	6e 2d       	mov	r22, r14
     ecc:	7f 2d       	mov	r23, r15
     ece:	80 2f       	mov	r24, r16
     ed0:	91 2f       	mov	r25, r17
     ed2:	e0 d5       	rcall	.+3008   	; 0x1a94 <__subsf3>
     ed4:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <sum_rms>
     ed8:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <sum_rms+0x1>
     edc:	40 91 48 01 	lds	r20, 0x0148	; 0x800148 <sum_rms+0x2>
     ee0:	50 91 49 01 	lds	r21, 0x0149	; 0x800149 <sum_rms+0x3>
     ee4:	d8 d5       	rcall	.+2992   	; 0x1a96 <__addsf3>
     ee6:	60 93 46 01 	sts	0x0146, r22	; 0x800146 <sum_rms>
     eea:	70 93 47 01 	sts	0x0147, r23	; 0x800147 <sum_rms+0x1>
     eee:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <sum_rms+0x2>
     ef2:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <sum_rms+0x3>
     ef6:	21 97       	sbiw	r28, 0x01	; 1
		sensor_Value =adc();
		sum +=sensor_Value;
	}
	average = (float)sum/1000;
	sum =0;
	for(int j=0; j<1000; j++){
     ef8:	09 f0       	breq	.+2      	; 0xefc <auto_read+0x130>
		current_data =adc();
		if (current_data > maxData) maxData = current_data;
		if (current_data < minData) minData = current_data;
		sum_rms +=(current_data - average);
	}
	voltage_rms = (sum_rms/1000)/150;
     efa:	ba cf       	rjmp	.-140    	; 0xe70 <auto_read+0xa4>
     efc:	20 e0       	ldi	r18, 0x00	; 0
     efe:	30 e0       	ldi	r19, 0x00	; 0
     f00:	4a e7       	ldi	r20, 0x7A	; 122
     f02:	54 e4       	ldi	r21, 0x44	; 68
     f04:	30 d6       	rcall	.+3168   	; 0x1b66 <__divsf3>
     f06:	20 e0       	ldi	r18, 0x00	; 0
     f08:	30 e0       	ldi	r19, 0x00	; 0
     f0a:	46 e1       	ldi	r20, 0x16	; 22
     f0c:	53 e4       	ldi	r21, 0x43	; 67
     f0e:	2b d6       	rcall	.+3158   	; 0x1b66 <__divsf3>
     f10:	1b 01       	movw	r2, r22
     f12:	2c 01       	movw	r4, r24
     f14:	60 93 42 01 	sts	0x0142, r22	; 0x800142 <voltage_rms>
     f18:	70 93 43 01 	sts	0x0143, r23	; 0x800143 <voltage_rms+0x1>
     f1c:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <voltage_rms+0x2>
     f20:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <voltage_rms+0x3>
     f24:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <sum_rms>
	sum_rms=0;
     f28:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <sum_rms+0x1>
     f2c:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <sum_rms+0x2>
     f30:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <sum_rms+0x3>
	voltagePP = ((maxData - minData)/60);
     f34:	29 2d       	mov	r18, r9
     f36:	38 2d       	mov	r19, r8
     f38:	47 2d       	mov	r20, r7
     f3a:	56 2d       	mov	r21, r6
     f3c:	6d 2d       	mov	r22, r13
     f3e:	7c 2d       	mov	r23, r12
     f40:	8b 2d       	mov	r24, r11
     f42:	9a 2d       	mov	r25, r10
     f44:	a7 d5       	rcall	.+2894   	; 0x1a94 <__subsf3>
     f46:	20 e0       	ldi	r18, 0x00	; 0
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	40 e7       	ldi	r20, 0x70	; 112
     f4c:	52 e4       	ldi	r21, 0x42	; 66
     f4e:	0b d6       	rcall	.+3094   	; 0x1b66 <__divsf3>
     f50:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <__data_end>
     f54:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <__data_end+0x1>
     f58:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__data_end+0x2>
     f5c:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <__data_end+0x3>
	maxData =0;
	minData=0;
	bun_value = voltagePP - voltage_rms;
     f60:	a2 01       	movw	r20, r4
     f62:	91 01       	movw	r18, r2
     f64:	97 d5       	rcall	.+2862   	; 0x1a94 <__subsf3>
     f66:	60 93 4e 01 	sts	0x014E, r22	; 0x80014e <bun_value>
     f6a:	70 93 4f 01 	sts	0x014F, r23	; 0x80014f <bun_value+0x1>
     f6e:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <bun_value+0x2>
     f72:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <bun_value+0x3>
	inte_2_value = ((int)bun_value);
     f76:	5f d6       	rcall	.+3262   	; 0x1c36 <__fixsfsi>
     f78:	70 93 69 01 	sts	0x0169, r23	; 0x800169 <inte_2_value+0x1>
     f7c:	60 93 68 01 	sts	0x0168, r22	; 0x800168 <inte_2_value>
     f80:	20 91 72 01 	lds	r18, 0x0172	; 0x800172 <fir_flag>
	if(fir_flag==0 && inte_2_value>0){
     f84:	30 91 73 01 	lds	r19, 0x0173	; 0x800173 <fir_flag+0x1>
     f88:	23 2b       	or	r18, r19
     f8a:	79 f4       	brne	.+30     	; 0xfaa <auto_read+0x1de>
     f8c:	16 16       	cp	r1, r22
     f8e:	17 06       	cpc	r1, r23
     f90:	64 f4       	brge	.+24     	; 0xfaa <auto_read+0x1de>
     f92:	62 5e       	subi	r22, 0xE2	; 226
		fi_save_value = inte_2_value+30;
     f94:	7f 4f       	sbci	r23, 0xFF	; 255
     f96:	70 93 71 01 	sts	0x0171, r23	; 0x800171 <fi_save_value+0x1>
     f9a:	60 93 70 01 	sts	0x0170, r22	; 0x800170 <fi_save_value>
     f9e:	81 e0       	ldi	r24, 0x01	; 1
		fir_flag=1;
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <fir_flag+0x1>
     fa6:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <fir_flag>
     faa:	df 91       	pop	r29
	}
	break;
  }
}
     fac:	cf 91       	pop	r28
     fae:	1f 91       	pop	r17
     fb0:	0f 91       	pop	r16
     fb2:	ff 90       	pop	r15
     fb4:	ef 90       	pop	r14
     fb6:	df 90       	pop	r13
     fb8:	cf 90       	pop	r12
     fba:	bf 90       	pop	r11
     fbc:	af 90       	pop	r10
     fbe:	9f 90       	pop	r9
     fc0:	8f 90       	pop	r8
     fc2:	7f 90       	pop	r7
     fc4:	6f 90       	pop	r6
     fc6:	5f 90       	pop	r5
     fc8:	4f 90       	pop	r4
     fca:	3f 90       	pop	r3
     fcc:	2f 90       	pop	r2
     fce:	08 95       	ret

00000fd0 <isr_init>:
     fd0:	f8 94       	cli
	first_page();
	spot_action();
}
void isr_init(void){
	cli();
	GICR  = 0x40;
     fd2:	80 e4       	ldi	r24, 0x40	; 64
     fd4:	8b bf       	out	0x3b, r24	; 59
	MCUCR |= 1<<ISC01 | 1<<ISC00;
     fd6:	85 b7       	in	r24, 0x35	; 53
     fd8:	83 60       	ori	r24, 0x03	; 3
     fda:	85 bf       	out	0x35, r24	; 53
	sei();
     fdc:	78 94       	sei
     fde:	08 95       	ret

00000fe0 <spottime_value>:
	LCD_string(0x81,firstmsg_1);
	LCD_string(0xc0,"");
  }
    _delay_ms(3000);
}
void spottime_value(void){
     fe0:	6f 92       	push	r6
     fe2:	7f 92       	push	r7
     fe4:	8f 92       	push	r8
     fe6:	9f 92       	push	r9
     fe8:	af 92       	push	r10
     fea:	bf 92       	push	r11
     fec:	cf 92       	push	r12
     fee:	df 92       	push	r13
     ff0:	ef 92       	push	r14
     ff2:	ff 92       	push	r15
     ff4:	0f 93       	push	r16
     ff6:	1f 93       	push	r17
     ff8:	cf 93       	push	r28
     ffa:	df 93       	push	r29
     ffc:	2f ef       	ldi	r18, 0xFF	; 255
     ffe:	35 ea       	ldi	r19, 0xA5	; 165
    1000:	8e e0       	ldi	r24, 0x0E	; 14
    1002:	21 50       	subi	r18, 0x01	; 1
    1004:	30 40       	sbci	r19, 0x00	; 0
    1006:	80 40       	sbci	r24, 0x00	; 0
    1008:	e1 f7       	brne	.-8      	; 0x1002 <spottime_value+0x22>
    100a:	00 c0       	rjmp	.+0      	; 0x100c <spottime_value+0x2c>
    100c:	00 00       	nop
_delay_ms(300);
LCD_initialize();
    100e:	34 d9       	rcall	.-3480   	; 0x278 <LCD_initialize>
    1010:	8c e0       	ldi	r24, 0x0C	; 12
    1012:	ff d8       	rcall	.-3586   	; 0x212 <dis_cmd>
lcd_on_off(1,0,0);
LCD_string(0xce,"LK");
    1014:	61 e0       	ldi	r22, 0x01	; 1
    1016:	71 e0       	ldi	r23, 0x01	; 1
    1018:	8e ec       	ldi	r24, 0xCE	; 206
isr_init();
    101a:	5b d9       	rcall	.-3402   	; 0x2d2 <LCD_string>
    101c:	d9 df       	rcall	.-78     	; 0xfd0 <isr_init>
en_sw_counter=1;
    101e:	81 e0       	ldi	r24, 0x01	; 1
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <en_sw_counter+0x1>
    1026:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <en_sw_counter>
en_sw_value;
en_flag=1;
    102a:	90 93 c7 00 	sts	0x00C7, r25	; 0x8000c7 <en_flag+0x1>
    102e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <en_flag>
en_flag_n = 0;
    1032:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <en_flag_n+0x1>
    1036:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <en_flag_n>
while(1){
	vbl = eeprom_read_byte(0);
	sprintf(msg,"time=%2d",vbl);
    103a:	0f 2e       	mov	r0, r31
    103c:	f4 e0       	ldi	r31, 0x04	; 4
    103e:	cf 2e       	mov	r12, r31
    1040:	f1 e0       	ldi	r31, 0x01	; 1
    1042:	df 2e       	mov	r13, r31
    1044:	f0 2d       	mov	r31, r0
    1046:	c1 e8       	ldi	r28, 0x81	; 129
    1048:	d1 e0       	ldi	r29, 0x01	; 1
	LCD_string(0x80,msg);
	bbl = eeprom_read_byte(1);
	sprintf(msg,"mult=%2d",bbl);
    104a:	0f 2e       	mov	r0, r31
    104c:	fd e0       	ldi	r31, 0x0D	; 13
    104e:	ef 2e       	mov	r14, r31
    1050:	f1 e0       	ldi	r31, 0x01	; 1
    1052:	ff 2e       	mov	r15, r31
    1054:	f0 2d       	mov	r31, r0
	LCD_string(0x88,msg);
	nbl = eeprom_read_byte(2);
	sprintf(msg,"rest=%2d",nbl);
    1056:	06 e1       	ldi	r16, 0x16	; 22
    1058:	11 e0       	ldi	r17, 0x01	; 1
	LCD_string(0xc0,msg);
	autospot_sw = eeprom_read_byte(3);
	if(autospot_sw == 1){
		PORTC = 0x40;
    105a:	68 94       	set
    105c:	66 24       	eor	r6, r6
    105e:	66 f8       	bld	r6, 6
		          spotmult();
				  break;
				  
		case 67 : _delay_us(80);
		          LCD_string(0xc0,"REST");
		          en_sw_counter = 4;
    1060:	68 94       	set
    1062:	aa 24       	eor	r10, r10
    1064:	a2 f8       	bld	r10, 2
    1066:	b1 2c       	mov	r11, r1
		          spotrest();
				  break;
				  
		case 68 :en_sw_counter =5;
    1068:	0f 2e       	mov	r0, r31
    106a:	f5 e0       	ldi	r31, 0x05	; 5
    106c:	8f 2e       	mov	r8, r31
    106e:	91 2c       	mov	r9, r1
    1070:	f0 2d       	mov	r31, r0
					break;
			  	}
		  	}
		  	if(~en_flag_cw){
			  	en_flag=1;
			  	DDRB = 0x0f;
    1072:	0f 2e       	mov	r0, r31
    1074:	ff e0       	ldi	r31, 0x0F	; 15
    1076:	7f 2e       	mov	r7, r31
    1078:	f0 2d       	mov	r31, r0
en_sw_counter=1;
en_sw_value;
en_flag=1;
en_flag_n = 0;
while(1){
	vbl = eeprom_read_byte(0);
    107a:	80 e0       	ldi	r24, 0x00	; 0
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
    1082:	28 2f       	mov	r18, r24
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	30 93 7b 01 	sts	0x017B, r19	; 0x80017b <vbl+0x1>
    108a:	20 93 7a 01 	sts	0x017A, r18	; 0x80017a <vbl>
	sprintf(msg,"time=%2d",vbl);
    108e:	1f 92       	push	r1
    1090:	8f 93       	push	r24
    1092:	df 92       	push	r13
    1094:	cf 92       	push	r12
    1096:	df 93       	push	r29
    1098:	cf 93       	push	r28
    109a:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
	LCD_string(0x80,msg);
    109e:	be 01       	movw	r22, r28
    10a0:	80 e8       	ldi	r24, 0x80	; 128
    10a2:	17 d9       	rcall	.-3538   	; 0x2d2 <LCD_string>
	bbl = eeprom_read_byte(1);
    10a4:	81 e0       	ldi	r24, 0x01	; 1
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
    10ac:	28 2f       	mov	r18, r24
    10ae:	30 e0       	ldi	r19, 0x00	; 0
    10b0:	30 93 98 01 	sts	0x0198, r19	; 0x800198 <bbl+0x1>
    10b4:	20 93 97 01 	sts	0x0197, r18	; 0x800197 <bbl>
	sprintf(msg,"mult=%2d",bbl);
    10b8:	1f 92       	push	r1
    10ba:	8f 93       	push	r24
    10bc:	ff 92       	push	r15
    10be:	ef 92       	push	r14
    10c0:	df 93       	push	r29
    10c2:	cf 93       	push	r28
    10c4:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
	LCD_string(0x88,msg);
    10c8:	be 01       	movw	r22, r28
    10ca:	88 e8       	ldi	r24, 0x88	; 136
    10cc:	02 d9       	rcall	.-3580   	; 0x2d2 <LCD_string>
	nbl = eeprom_read_byte(2);
    10ce:	82 e0       	ldi	r24, 0x02	; 2
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
    10d6:	28 2f       	mov	r18, r24
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	30 93 79 01 	sts	0x0179, r19	; 0x800179 <nbl+0x1>
    10de:	20 93 78 01 	sts	0x0178, r18	; 0x800178 <nbl>
	sprintf(msg,"rest=%2d",nbl);
    10e2:	1f 92       	push	r1
    10e4:	8f 93       	push	r24
    10e6:	1f 93       	push	r17
    10e8:	0f 93       	push	r16
    10ea:	df 93       	push	r29
    10ec:	cf 93       	push	r28
    10ee:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
	LCD_string(0xc0,msg);
    10f2:	be 01       	movw	r22, r28
    10f4:	80 ec       	ldi	r24, 0xC0	; 192
    10f6:	ed d8       	rcall	.-3622   	; 0x2d2 <LCD_string>
	autospot_sw = eeprom_read_byte(3);
    10f8:	83 e0       	ldi	r24, 0x03	; 3
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <autospot_sw+0x1>
    1106:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <autospot_sw>
	if(autospot_sw == 1){
    110a:	2d b7       	in	r18, 0x3d	; 61
    110c:	3e b7       	in	r19, 0x3e	; 62
    110e:	2e 5e       	subi	r18, 0xEE	; 238
    1110:	3f 4f       	sbci	r19, 0xFF	; 255
    1112:	0f b6       	in	r0, 0x3f	; 63
    1114:	f8 94       	cli
    1116:	3e bf       	out	0x3e, r19	; 62
    1118:	0f be       	out	0x3f, r0	; 63
    111a:	2d bf       	out	0x3d, r18	; 61
    111c:	01 97       	sbiw	r24, 0x01	; 1
		PORTC = 0x40;
    111e:	29 f4       	brne	.+10     	; 0x112a <spottime_value+0x14a>
		LCD_string(0xc9,"auto");
    1120:	65 ba       	out	0x15, r6	; 21
    1122:	6f e1       	ldi	r22, 0x1F	; 31
    1124:	71 e0       	ldi	r23, 0x01	; 1
    1126:	89 ec       	ldi	r24, 0xC9	; 201
    1128:	d4 d8       	rcall	.-3672   	; 0x2d2 <LCD_string>
	}
	if(autospot_sw == 0){
    112a:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    112e:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    1132:	89 2b       	or	r24, r25
		PORTC =0x00;
    1134:	29 f4       	brne	.+10     	; 0x1140 <spottime_value+0x160>
		LCD_string(0xc9,"sw  ");
    1136:	15 ba       	out	0x15, r1	; 21
    1138:	64 e2       	ldi	r22, 0x24	; 36
    113a:	71 e0       	ldi	r23, 0x01	; 1
    113c:	89 ec       	ldi	r24, 0xC9	; 201
    113e:	c9 d8       	rcall	.-3694   	; 0x2d2 <LCD_string>
	}

en_sw_value = en_sw_counter | en_flag_sw;			   
    1140:	26 b3       	in	r18, 0x16	; 22
    1142:	20 74       	andi	r18, 0x40	; 64
    1144:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <en_sw_counter>
    1148:	90 91 c5 00 	lds	r25, 0x00C5	; 0x8000c5 <en_sw_counter+0x1>
    114c:	82 2b       	or	r24, r18
    114e:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <en_sw_value+0x1>
    1152:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <en_sw_value>
	switch(en_sw_value){
    1156:	83 34       	cpi	r24, 0x43	; 67
    1158:	91 05       	cpc	r25, r1
    115a:	a9 f1       	breq	.+106    	; 0x11c6 <spottime_value+0x1e6>
    115c:	3c f4       	brge	.+14     	; 0x116c <spottime_value+0x18c>
    115e:	81 34       	cpi	r24, 0x41	; 65
    1160:	91 05       	cpc	r25, r1
    1162:	69 f0       	breq	.+26     	; 0x117e <spottime_value+0x19e>
    1164:	82 34       	cpi	r24, 0x42	; 66
    1166:	91 05       	cpc	r25, r1
    1168:	e1 f0       	breq	.+56     	; 0x11a2 <spottime_value+0x1c2>
    116a:	52 c0       	rjmp	.+164    	; 0x1210 <spottime_value+0x230>
    116c:	84 34       	cpi	r24, 0x44	; 68
    116e:	91 05       	cpc	r25, r1
    1170:	09 f4       	brne	.+2      	; 0x1174 <spottime_value+0x194>
    1172:	39 c0       	rjmp	.+114    	; 0x11e6 <spottime_value+0x206>
    1174:	85 34       	cpi	r24, 0x45	; 69
    1176:	91 05       	cpc	r25, r1
    1178:	09 f4       	brne	.+2      	; 0x117c <spottime_value+0x19c>
    117a:	3b c0       	rjmp	.+118    	; 0x11f2 <spottime_value+0x212>
    117c:	49 c0       	rjmp	.+146    	; 0x1210 <spottime_value+0x230>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    117e:	8f e3       	ldi	r24, 0x3F	; 63
    1180:	91 e0       	ldi	r25, 0x01	; 1
    1182:	01 97       	sbiw	r24, 0x01	; 1
    1184:	f1 f7       	brne	.-4      	; 0x1182 <spottime_value+0x1a2>
    1186:	00 c0       	rjmp	.+0      	; 0x1188 <spottime_value+0x1a8>
		case 65 : _delay_us(80);
		          LCD_string(0x80,"TIME");
    1188:	00 00       	nop
    118a:	69 e2       	ldi	r22, 0x29	; 41
    118c:	71 e0       	ldi	r23, 0x01	; 1
    118e:	80 e8       	ldi	r24, 0x80	; 128
		          en_sw_counter =2;
    1190:	a0 d8       	rcall	.-3776   	; 0x2d2 <LCD_string>
    1192:	82 e0       	ldi	r24, 0x02	; 2
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <en_sw_counter+0x1>
    119a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <en_sw_counter>
		          spottimeset();
				  break;
    119e:	be d8       	rcall	.-3716   	; 0x31c <spottimeset>
    11a0:	37 c0       	rjmp	.+110    	; 0x1210 <spottime_value+0x230>
    11a2:	8f e3       	ldi	r24, 0x3F	; 63
    11a4:	91 e0       	ldi	r25, 0x01	; 1
    11a6:	01 97       	sbiw	r24, 0x01	; 1
    11a8:	f1 f7       	brne	.-4      	; 0x11a6 <spottime_value+0x1c6>
				  
		case 66 : _delay_us(80);
		          LCD_string(0x88,"MULT");
    11aa:	00 c0       	rjmp	.+0      	; 0x11ac <spottime_value+0x1cc>
    11ac:	00 00       	nop
    11ae:	6e e2       	ldi	r22, 0x2E	; 46
    11b0:	71 e0       	ldi	r23, 0x01	; 1
    11b2:	88 e8       	ldi	r24, 0x88	; 136
		          en_sw_counter =3;
    11b4:	8e d8       	rcall	.-3812   	; 0x2d2 <LCD_string>
    11b6:	83 e0       	ldi	r24, 0x03	; 3
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <en_sw_counter+0x1>
		          spotmult();
    11be:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <en_sw_counter>
				  break;
    11c2:	3a da       	rcall	.-2956   	; 0x638 <spotmult>
    11c4:	25 c0       	rjmp	.+74     	; 0x1210 <spottime_value+0x230>
    11c6:	8f e3       	ldi	r24, 0x3F	; 63
    11c8:	91 e0       	ldi	r25, 0x01	; 1
    11ca:	01 97       	sbiw	r24, 0x01	; 1
    11cc:	f1 f7       	brne	.-4      	; 0x11ca <spottime_value+0x1ea>
				  
		case 67 : _delay_us(80);
		          LCD_string(0xc0,"REST");
    11ce:	00 c0       	rjmp	.+0      	; 0x11d0 <spottime_value+0x1f0>
    11d0:	00 00       	nop
    11d2:	63 e3       	ldi	r22, 0x33	; 51
    11d4:	71 e0       	ldi	r23, 0x01	; 1
		          en_sw_counter = 4;
    11d6:	80 ec       	ldi	r24, 0xC0	; 192
    11d8:	7c d8       	rcall	.-3848   	; 0x2d2 <LCD_string>
    11da:	b0 92 c5 00 	sts	0x00C5, r11	; 0x8000c5 <en_sw_counter+0x1>
		          spotrest();
    11de:	a0 92 c4 00 	sts	0x00C4, r10	; 0x8000c4 <en_sw_counter>
				  break;
    11e2:	43 db       	rcall	.-2426   	; 0x86a <spotrest>
				  
		case 68 :en_sw_counter =5;
    11e4:	15 c0       	rjmp	.+42     	; 0x1210 <spottime_value+0x230>
    11e6:	90 92 c5 00 	sts	0x00C5, r9	; 0x8000c5 <en_sw_counter+0x1>
    11ea:	80 92 c4 00 	sts	0x00C4, r8	; 0x8000c4 <en_sw_counter>
		         auto_spot();
    11ee:	7e dc       	rcall	.-1796   	; 0xaec <auto_spot>
		         break;
    11f0:	0f c0       	rjmp	.+30     	; 0x1210 <spottime_value+0x230>
				 
		case 69 :en_sw_counter =1;
    11f2:	81 e0       	ldi	r24, 0x01	; 1
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <en_sw_counter+0x1>
    11fa:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <en_sw_counter>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    11fe:	9f ef       	ldi	r25, 0xFF	; 255
    1200:	27 e8       	ldi	r18, 0x87	; 135
    1202:	33 e1       	ldi	r19, 0x13	; 19
    1204:	91 50       	subi	r25, 0x01	; 1
    1206:	20 40       	sbci	r18, 0x00	; 0
    1208:	30 40       	sbci	r19, 0x00	; 0
    120a:	e1 f7       	brne	.-8      	; 0x1204 <spottime_value+0x224>
    120c:	00 c0       	rjmp	.+0      	; 0x120e <spottime_value+0x22e>
    120e:	00 00       	nop
		         _delay_ms(400);
		         break;
				 
		  }
		  
		  	if(en_flag_cw && en_flag ==1 ){
    1210:	b4 9b       	sbis	0x16, 4	; 22
    1212:	54 c0       	rjmp	.+168    	; 0x12bc <spottime_value+0x2dc>
    1214:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <en_flag>
    1218:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <en_flag+0x1>
    121c:	01 97       	sbiw	r24, 0x01	; 1
    121e:	09 f0       	breq	.+2      	; 0x1222 <spottime_value+0x242>
    1220:	4d c0       	rjmp	.+154    	; 0x12bc <spottime_value+0x2dc>
			  	if(en_flag_ccw) en_flag_n =1;
    1222:	b5 9b       	sbis	0x16, 5	; 22
    1224:	07 c0       	rjmp	.+14     	; 0x1234 <spottime_value+0x254>
    1226:	81 e0       	ldi	r24, 0x01	; 1
    1228:	90 e0       	ldi	r25, 0x00	; 0
    122a:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <en_flag_n+0x1>
    122e:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <en_flag_n>
    1232:	06 c0       	rjmp	.+12     	; 0x1240 <spottime_value+0x260>
			  	else en_flag_n =2;
    1234:	82 e0       	ldi	r24, 0x02	; 2
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <en_flag_n+0x1>
    123c:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <en_flag_n>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1240:	85 e3       	ldi	r24, 0x35	; 53
    1242:	8a 95       	dec	r24
    1244:	f1 f7       	brne	.-4      	; 0x1242 <spottime_value+0x262>
    1246:	00 00       	nop
			  	_delay_us(10);
			  	if(~en_flag_ccw && en_flag_n == 2){
    1248:	b5 99       	sbic	0x16, 5	; 22
    124a:	0c c0       	rjmp	.+24     	; 0x1264 <spottime_value+0x284>
    124c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <en_flag_n>
    1250:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <en_flag_n+0x1>
    1254:	02 97       	sbiw	r24, 0x02	; 2
    1256:	31 f4       	brne	.+12     	; 0x1264 <spottime_value+0x284>
				   en_flag=0;
    1258:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <en_flag+0x1>
    125c:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <en_flag>
			  	}
			  	if(en_flag_ccw && en_flag_n == 1){
    1260:	86 b3       	in	r24, 0x16	; 22
    1262:	2c c0       	rjmp	.+88     	; 0x12bc <spottime_value+0x2dc>
    1264:	b5 9b       	sbis	0x16, 5	; 22
    1266:	2a c0       	rjmp	.+84     	; 0x12bc <spottime_value+0x2dc>
    1268:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <en_flag_n>
    126c:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <en_flag_n+0x1>
    1270:	01 97       	sbiw	r24, 0x01	; 1
    1272:	21 f5       	brne	.+72     	; 0x12bc <spottime_value+0x2dc>
					if(autospot_sw == 1) lock_value = 250;
    1274:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    1278:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    127c:	01 97       	sbiw	r24, 0x01	; 1
    127e:	39 f4       	brne	.+14     	; 0x128e <spottime_value+0x2ae>
    1280:	8a ef       	ldi	r24, 0xFA	; 250
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <lock_value+0x1>
    1288:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <lock_value>
    128c:	06 c0       	rjmp	.+12     	; 0x129a <spottime_value+0x2ba>
					else lock_value = 32000;
    128e:	80 e0       	ldi	r24, 0x00	; 0
    1290:	9d e7       	ldi	r25, 0x7D	; 125
    1292:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <lock_value+0x1>
    1296:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <lock_value>
				  	en_flag=0;
    129a:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <en_flag+0x1>
    129e:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <en_flag>
				  	DDRB = 0XFF;
    12a2:	8f ef       	ldi	r24, 0xFF	; 255
    12a4:	87 bb       	out	0x17, r24	; 23
					spotac_tacle=1;
    12a6:	81 e0       	ldi	r24, 0x01	; 1
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <spotac_tacle+0x1>
    12ae:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <spotac_tacle>
					flag_lock=0; 
    12b2:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <flag_lock+0x1>
    12b6:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <flag_lock>
					break;
    12ba:	33 c0       	rjmp	.+102    	; 0x1322 <spottime_value+0x342>
			  	}
		  	}
		  	if(~en_flag_cw){
    12bc:	b4 99       	sbic	0x16, 4	; 22
    12be:	07 c0       	rjmp	.+14     	; 0x12ce <spottime_value+0x2ee>
			  	en_flag=1;
    12c0:	81 e0       	ldi	r24, 0x01	; 1
    12c2:	90 e0       	ldi	r25, 0x00	; 0
    12c4:	90 93 c7 00 	sts	0x00C7, r25	; 0x8000c7 <en_flag+0x1>
    12c8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <en_flag>
			  	DDRB = 0x0f;
    12cc:	77 ba       	out	0x17, r7	; 23
		  	}
			  
			if(S4){
    12ce:	b7 9b       	sbis	0x16, 7	; 22
    12d0:	d4 ce       	rjmp	.-600    	; 0x107a <spottime_value+0x9a>
				if(autospot_sw == 1) lock_value = 250;
    12d2:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    12d6:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    12da:	01 97       	sbiw	r24, 0x01	; 1
    12dc:	39 f4       	brne	.+14     	; 0x12ec <spottime_value+0x30c>
    12de:	8a ef       	ldi	r24, 0xFA	; 250
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <lock_value+0x1>
    12e6:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <lock_value>
    12ea:	06 c0       	rjmp	.+12     	; 0x12f8 <spottime_value+0x318>
				else lock_value = 32000;
    12ec:	80 e0       	ldi	r24, 0x00	; 0
    12ee:	9d e7       	ldi	r25, 0x7D	; 125
    12f0:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <lock_value+0x1>
    12f4:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <lock_value>
				DDRB = 0XFF;
    12f8:	8f ef       	ldi	r24, 0xFF	; 255
    12fa:	87 bb       	out	0x17, r24	; 23
				spotac_tacle=1;
    12fc:	81 e0       	ldi	r24, 0x01	; 1
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <spotac_tacle+0x1>
    1304:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <spotac_tacle>
				flag_lock=0;
    1308:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <flag_lock+0x1>
    130c:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <flag_lock>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1310:	9f ef       	ldi	r25, 0xFF	; 255
    1312:	21 ee       	ldi	r18, 0xE1	; 225
    1314:	34 e0       	ldi	r19, 0x04	; 4
    1316:	91 50       	subi	r25, 0x01	; 1
    1318:	20 40       	sbci	r18, 0x00	; 0
    131a:	30 40       	sbci	r19, 0x00	; 0
    131c:	e1 f7       	brne	.-8      	; 0x1316 <spottime_value+0x336>
    131e:	00 c0       	rjmp	.+0      	; 0x1320 <spottime_value+0x340>
    1320:	00 00       	nop
				_delay_ms(100);
				break;
			}
       }
 }
    1322:	df 91       	pop	r29
    1324:	cf 91       	pop	r28
    1326:	1f 91       	pop	r17
    1328:	0f 91       	pop	r16
    132a:	ff 90       	pop	r15
    132c:	ef 90       	pop	r14
    132e:	df 90       	pop	r13
    1330:	cf 90       	pop	r12
    1332:	bf 90       	pop	r11
    1334:	af 90       	pop	r10
    1336:	9f 90       	pop	r9
    1338:	8f 90       	pop	r8
    133a:	7f 90       	pop	r7
    133c:	6f 90       	pop	r6
    133e:	08 95       	ret

00001340 <spot_action>:
		fir_flag=1;
	}
	break;
  }
}
void spot_action(void) {
    1340:	4f 92       	push	r4
    1342:	5f 92       	push	r5
    1344:	6f 92       	push	r6
    1346:	7f 92       	push	r7
    1348:	bf 92       	push	r11
    134a:	cf 92       	push	r12
    134c:	df 92       	push	r13
    134e:	ef 92       	push	r14
    1350:	ff 92       	push	r15
    1352:	0f 93       	push	r16
    1354:	1f 93       	push	r17
    1356:	cf 93       	push	r28
    1358:	df 93       	push	r29
LCD_initialize();
    135a:	0e 94 3c 01 	call	0x278	; 0x278 <LCD_initialize>
    135e:	8c e0       	ldi	r24, 0x0C	; 12
    1360:	0e 94 09 01 	call	0x212	; 0x212 <dis_cmd>
lcd_on_off(1,0,0);
isr_init();
    1364:	35 de       	rcall	.-918    	; 0xfd0 <isr_init>
	vbl = eeprom_read_byte(0);
    1366:	80 e0       	ldi	r24, 0x00	; 0
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
    136e:	28 2f       	mov	r18, r24
    1370:	30 e0       	ldi	r19, 0x00	; 0
    1372:	30 93 7b 01 	sts	0x017B, r19	; 0x80017b <vbl+0x1>
    1376:	20 93 7a 01 	sts	0x017A, r18	; 0x80017a <vbl>
	sprintf(msg,"time=%2d",vbl);
    137a:	1f 92       	push	r1
    137c:	8f 93       	push	r24
    137e:	84 e0       	ldi	r24, 0x04	; 4
    1380:	91 e0       	ldi	r25, 0x01	; 1
    1382:	9f 93       	push	r25
    1384:	8f 93       	push	r24
    1386:	c1 e8       	ldi	r28, 0x81	; 129
    1388:	d1 e0       	ldi	r29, 0x01	; 1
    138a:	df 93       	push	r29
    138c:	cf 93       	push	r28
    138e:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
	LCD_string(0x80,msg);
    1392:	be 01       	movw	r22, r28
    1394:	80 e8       	ldi	r24, 0x80	; 128
    1396:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_string>
	bbl = eeprom_read_byte(1);
    139a:	81 e0       	ldi	r24, 0x01	; 1
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
    13a2:	28 2f       	mov	r18, r24
    13a4:	30 e0       	ldi	r19, 0x00	; 0
    13a6:	30 93 98 01 	sts	0x0198, r19	; 0x800198 <bbl+0x1>
    13aa:	20 93 97 01 	sts	0x0197, r18	; 0x800197 <bbl>
	sprintf(msg,"mult=%2d",bbl);
    13ae:	1f 92       	push	r1
    13b0:	8f 93       	push	r24
    13b2:	8d e0       	ldi	r24, 0x0D	; 13
    13b4:	91 e0       	ldi	r25, 0x01	; 1
    13b6:	9f 93       	push	r25
    13b8:	8f 93       	push	r24
    13ba:	df 93       	push	r29
    13bc:	cf 93       	push	r28
    13be:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
	LCD_string(0x88,msg);
    13c2:	be 01       	movw	r22, r28
    13c4:	88 e8       	ldi	r24, 0x88	; 136
    13c6:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_string>
	nbl = eeprom_read_byte(2);
    13ca:	82 e0       	ldi	r24, 0x02	; 2
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
    13d2:	28 2f       	mov	r18, r24
    13d4:	30 e0       	ldi	r19, 0x00	; 0
    13d6:	30 93 79 01 	sts	0x0179, r19	; 0x800179 <nbl+0x1>
    13da:	20 93 78 01 	sts	0x0178, r18	; 0x800178 <nbl>
	sprintf(msg,"rest=%2d",nbl);
    13de:	1f 92       	push	r1
    13e0:	8f 93       	push	r24
    13e2:	86 e1       	ldi	r24, 0x16	; 22
    13e4:	91 e0       	ldi	r25, 0x01	; 1
    13e6:	9f 93       	push	r25
    13e8:	8f 93       	push	r24
    13ea:	df 93       	push	r29
    13ec:	cf 93       	push	r28
    13ee:	0e 94 4b 14 	call	0x2896	; 0x2896 <sprintf>
	LCD_string(0xc0,msg);
    13f2:	be 01       	movw	r22, r28
    13f4:	80 ec       	ldi	r24, 0xC0	; 192
    13f6:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_string>
	autospot_sw = eeprom_read_byte(3);
    13fa:	83 e0       	ldi	r24, 0x03	; 3
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <autospot_sw+0x1>
    1408:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <autospot_sw>
		if(autospot_sw == 1){
    140c:	2d b7       	in	r18, 0x3d	; 61
    140e:	3e b7       	in	r19, 0x3e	; 62
    1410:	2e 5e       	subi	r18, 0xEE	; 238
    1412:	3f 4f       	sbci	r19, 0xFF	; 255
    1414:	0f b6       	in	r0, 0x3f	; 63
    1416:	f8 94       	cli
    1418:	3e bf       	out	0x3e, r19	; 62
    141a:	0f be       	out	0x3f, r0	; 63
    141c:	2d bf       	out	0x3d, r18	; 61
    141e:	01 97       	sbiw	r24, 0x01	; 1
    1420:	39 f4       	brne	.+14     	; 0x1430 <spot_action+0xf0>
			PORTC = 0x40;
    1422:	80 e4       	ldi	r24, 0x40	; 64
    1424:	85 bb       	out	0x15, r24	; 21
			LCD_string(0xc9,"auto");
    1426:	6f e1       	ldi	r22, 0x1F	; 31
    1428:	71 e0       	ldi	r23, 0x01	; 1
    142a:	89 ec       	ldi	r24, 0xC9	; 201
    142c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_string>
		}
		if(autospot_sw == 0){
    1430:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    1434:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    1438:	89 2b       	or	r24, r25
    143a:	31 f4       	brne	.+12     	; 0x1448 <spot_action+0x108>
			PORTC =0x00;
    143c:	15 ba       	out	0x15, r1	; 21
			LCD_string(0xc9,"sw  ");
    143e:	64 e2       	ldi	r22, 0x24	; 36
    1440:	71 e0       	ldi	r23, 0x01	; 1
    1442:	89 ec       	ldi	r24, 0xC9	; 201
    1444:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_string>
		}
spotac_tacle =1;
    1448:	81 e0       	ldi	r24, 0x01	; 1
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <spotac_tacle+0x1>
    1450:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <spotac_tacle>
flag_lock =0;
    1454:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <flag_lock+0x1>
    1458:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <flag_lock>
if(autospot_sw == 1) lock_value = 250;
    145c:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    1460:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    1464:	01 97       	sbiw	r24, 0x01	; 1
    1466:	39 f4       	brne	.+14     	; 0x1476 <spot_action+0x136>
    1468:	8a ef       	ldi	r24, 0xFA	; 250
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <lock_value+0x1>
    1470:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <lock_value>
    1474:	06 c0       	rjmp	.+12     	; 0x1482 <spot_action+0x142>
else lock_value = 32000;
    1476:	80 e0       	ldi	r24, 0x00	; 0
    1478:	9d e7       	ldi	r25, 0x7D	; 125
    147a:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <lock_value+0x1>
    147e:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <lock_value>
while(1){
  DDRB = 0xBF;
    1482:	0f 2e       	mov	r0, r31
    1484:	ff eb       	ldi	r31, 0xBF	; 191
    1486:	ef 2e       	mov	r14, r31
    1488:	f0 2d       	mov	r31, r0
			  _delay_ms(220);
		  }
	  }  
	}
	else{ 
		one_cycle = 1000/static_hz;
    148a:	c8 ee       	ldi	r28, 0xE8	; 232
    148c:	d3 e0       	ldi	r29, 0x03	; 3
		  	 flag_lock=0;
		  	 auto_read();
		  	 if(autospot_sw ==1 && spotac_tacle ==1 && inte_2_value>2 && inte_2_value < fi_save_value) {
			  	 LCD_string(0xce," L");
			  	 for(int i=0; i<2; i++){
				  	 PORTC = 0x04;
    148e:	68 94       	set
    1490:	cc 24       	eor	r12, r12
    1492:	c2 f8       	bld	r12, 2
		if(en_flag_sw){
		 flag_lock = lock_value +100;
		}
		if(flag_lock>lock_value){
			 spotac_tacle =0;
			 DDRB = 0X0f;
    1494:	0f 2e       	mov	r0, r31
    1496:	ff e0       	ldi	r31, 0x0F	; 15
    1498:	df 2e       	mov	r13, r31
    149a:	f0 2d       	mov	r31, r0
				  	 PORTC = 0x00;
				  	 _delay_ms(5);
			  	 }
			  	 for(int j=0; j<bbl; j++){
				  	 sei();
				  	 isr_cn =1;
    149c:	01 e0       	ldi	r16, 0x01	; 1
    149e:	10 e0       	ldi	r17, 0x00	; 0
			 spottime_value();
			 break;
		}
  }
  while(autospot_sw ==0){
	DDRB = 0x3f;
    14a0:	0f 2e       	mov	r0, r31
    14a2:	ff e3       	ldi	r31, 0x3F	; 63
    14a4:	ff 2e       	mov	r15, r31
    14a6:	f0 2d       	mov	r31, r0
	  halfcycle = one_cycle/2;
	  spot_time_hz = (eeprom_read_byte(0) / halfcycle);
	  if(spotac_tacle == 1 && autospot_sw == 0 && S4){
		  _delay_ms(50);
		  flag_lock=0;
		  DDRB = 0XFF;
    14a8:	bb 24       	eor	r11, r11
    14aa:	ba 94       	dec	r11
spotac_tacle =1;
flag_lock =0;
if(autospot_sw == 1) lock_value = 250;
else lock_value = 32000;
while(1){
  DDRB = 0xBF;
    14ac:	e7 ba       	out	0x17, r14	; 23
  while(autospot_sw==1){
    14ae:	82 c1       	rjmp	.+772    	; 0x17b4 <spot_action+0x474>
	flag_lock++;
    14b0:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <flag_lock>
    14b4:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <flag_lock+0x1>
    14b8:	01 96       	adiw	r24, 0x01	; 1
    14ba:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <flag_lock+0x1>
    14be:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <flag_lock>
	LCD_string(0xce," U");
    14c2:	68 e3       	ldi	r22, 0x38	; 56
    14c4:	71 e0       	ldi	r23, 0x01	; 1
    14c6:	8e ec       	ldi	r24, 0xCE	; 206
    14c8:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_string>
	auto_read();
    14cc:	7f dc       	rcall	.-1794   	; 0xdcc <auto_read>
	if(vbl<8){
    14ce:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <vbl>
    14d2:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <vbl+0x1>
    14d6:	08 97       	sbiw	r24, 0x08	; 8
    14d8:	0c f0       	brlt	.+2      	; 0x14dc <spot_action+0x19c>
    14da:	8c c0       	rjmp	.+280    	; 0x15f4 <spot_action+0x2b4>
	  if(autospot_sw ==1 && spotac_tacle ==1 && inte_2_value>2 && inte_2_value < fi_save_value){
    14dc:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    14e0:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    14e4:	01 97       	sbiw	r24, 0x01	; 1
    14e6:	09 f0       	breq	.+2      	; 0x14ea <spot_action+0x1aa>
    14e8:	46 c1       	rjmp	.+652    	; 0x1776 <spot_action+0x436>
    14ea:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <spotac_tacle>
    14ee:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <spotac_tacle+0x1>
    14f2:	01 97       	sbiw	r24, 0x01	; 1
    14f4:	09 f0       	breq	.+2      	; 0x14f8 <spot_action+0x1b8>
    14f6:	3f c1       	rjmp	.+638    	; 0x1776 <spot_action+0x436>
    14f8:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <inte_2_value>
    14fc:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <inte_2_value+0x1>
    1500:	83 30       	cpi	r24, 0x03	; 3
    1502:	91 05       	cpc	r25, r1
    1504:	0c f4       	brge	.+2      	; 0x1508 <spot_action+0x1c8>
    1506:	37 c1       	rjmp	.+622    	; 0x1776 <spot_action+0x436>
    1508:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <fi_save_value>
    150c:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <fi_save_value+0x1>
    1510:	82 17       	cp	r24, r18
    1512:	93 07       	cpc	r25, r19
    1514:	0c f0       	brlt	.+2      	; 0x1518 <spot_action+0x1d8>
    1516:	2f c1       	rjmp	.+606    	; 0x1776 <spot_action+0x436>
		  flag_lock=0;
    1518:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <flag_lock+0x1>
    151c:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <flag_lock>
		  auto_read();
    1520:	55 dc       	rcall	.-1878   	; 0xdcc <auto_read>
		  if(autospot_sw ==1 && spotac_tacle ==1 &&  inte_2_value>2 && inte_2_value < fi_save_value) {
    1522:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    1526:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    152a:	01 97       	sbiw	r24, 0x01	; 1
    152c:	09 f0       	breq	.+2      	; 0x1530 <spot_action+0x1f0>
    152e:	23 c1       	rjmp	.+582    	; 0x1776 <spot_action+0x436>
    1530:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <spotac_tacle>
    1534:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <spotac_tacle+0x1>
    1538:	01 97       	sbiw	r24, 0x01	; 1
    153a:	09 f0       	breq	.+2      	; 0x153e <spot_action+0x1fe>
    153c:	1c c1       	rjmp	.+568    	; 0x1776 <spot_action+0x436>
    153e:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <inte_2_value>
    1542:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <inte_2_value+0x1>
    1546:	83 30       	cpi	r24, 0x03	; 3
    1548:	91 05       	cpc	r25, r1
    154a:	0c f4       	brge	.+2      	; 0x154e <spot_action+0x20e>
    154c:	14 c1       	rjmp	.+552    	; 0x1776 <spot_action+0x436>
    154e:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <fi_save_value>
    1552:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <fi_save_value+0x1>
    1556:	82 17       	cp	r24, r18
    1558:	93 07       	cpc	r25, r19
    155a:	0c f0       	brlt	.+2      	; 0x155e <spot_action+0x21e>
    155c:	0c c1       	rjmp	.+536    	; 0x1776 <spot_action+0x436>
			  LCD_string(0xce," L");
    155e:	6b e3       	ldi	r22, 0x3B	; 59
    1560:	71 e0       	ldi	r23, 0x01	; 1
    1562:	8e ec       	ldi	r24, 0xCE	; 206
    1564:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_string>
			  for(int i=0; i<2; i++){
				  PORTC = 0x04;
    1568:	c5 ba       	out	0x15, r12	; 21
    156a:	8f e1       	ldi	r24, 0x1F	; 31
    156c:	9e e4       	ldi	r25, 0x4E	; 78
    156e:	01 97       	sbiw	r24, 0x01	; 1
    1570:	f1 f7       	brne	.-4      	; 0x156e <spot_action+0x22e>
    1572:	00 c0       	rjmp	.+0      	; 0x1574 <spot_action+0x234>
    1574:	00 00       	nop
				  _delay_ms(5);
				  PORTC = 0x00;
    1576:	15 ba       	out	0x15, r1	; 21
    1578:	8f e1       	ldi	r24, 0x1F	; 31
    157a:	9e e4       	ldi	r25, 0x4E	; 78
    157c:	01 97       	sbiw	r24, 0x01	; 1
    157e:	f1 f7       	brne	.-4      	; 0x157c <spot_action+0x23c>
    1580:	00 c0       	rjmp	.+0      	; 0x1582 <spot_action+0x242>
    1582:	00 00       	nop
		  flag_lock=0;
		  auto_read();
		  if(autospot_sw ==1 && spotac_tacle ==1 &&  inte_2_value>2 && inte_2_value < fi_save_value) {
			  LCD_string(0xce," L");
			  for(int i=0; i<2; i++){
				  PORTC = 0x04;
    1584:	c5 ba       	out	0x15, r12	; 21
    1586:	8f e1       	ldi	r24, 0x1F	; 31
    1588:	9e e4       	ldi	r25, 0x4E	; 78
    158a:	01 97       	sbiw	r24, 0x01	; 1
    158c:	f1 f7       	brne	.-4      	; 0x158a <spot_action+0x24a>
    158e:	00 c0       	rjmp	.+0      	; 0x1590 <spot_action+0x250>
    1590:	00 00       	nop
				  _delay_ms(5);
				  PORTC = 0x00;
    1592:	15 ba       	out	0x15, r1	; 21
    1594:	8f e1       	ldi	r24, 0x1F	; 31
    1596:	9e e4       	ldi	r25, 0x4E	; 78
    1598:	01 97       	sbiw	r24, 0x01	; 1
    159a:	f1 f7       	brne	.-4      	; 0x1598 <spot_action+0x258>
    159c:	00 c0       	rjmp	.+0      	; 0x159e <spot_action+0x25e>
    159e:	00 00       	nop
				  _delay_ms(5);
			  }
			  for(int j=0; j<bbl; j++){
    15a0:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <bbl>
    15a4:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <bbl+0x1>
    15a8:	18 16       	cp	r1, r24
    15aa:	19 06       	cpc	r1, r25
    15ac:	c4 f4       	brge	.+48     	; 0x15de <spot_action+0x29e>
    15ae:	80 e0       	ldi	r24, 0x00	; 0
    15b0:	90 e0       	ldi	r25, 0x00	; 0
				  sei();
    15b2:	78 94       	sei
				  isr_cn =1;
    15b4:	10 93 6d 01 	sts	0x016D, r17	; 0x80016d <isr_cn+0x1>
    15b8:	00 93 6c 01 	sts	0x016C, r16	; 0x80016c <isr_cn>
    15bc:	2f ef       	ldi	r18, 0xFF	; 255
    15be:	31 ee       	ldi	r19, 0xE1	; 225
    15c0:	44 e0       	ldi	r20, 0x04	; 4
    15c2:	21 50       	subi	r18, 0x01	; 1
    15c4:	30 40       	sbci	r19, 0x00	; 0
    15c6:	40 40       	sbci	r20, 0x00	; 0
    15c8:	e1 f7       	brne	.-8      	; 0x15c2 <spot_action+0x282>
    15ca:	00 c0       	rjmp	.+0      	; 0x15cc <spot_action+0x28c>
    15cc:	00 00       	nop
				  PORTC = 0x04;
				  _delay_ms(5);
				  PORTC = 0x00;
				  _delay_ms(5);
			  }
			  for(int j=0; j<bbl; j++){
    15ce:	01 96       	adiw	r24, 0x01	; 1
    15d0:	20 91 97 01 	lds	r18, 0x0197	; 0x800197 <bbl>
    15d4:	30 91 98 01 	lds	r19, 0x0198	; 0x800198 <bbl+0x1>
    15d8:	82 17       	cp	r24, r18
    15da:	93 07       	cpc	r25, r19
    15dc:	54 f3       	brlt	.-44     	; 0x15b2 <spot_action+0x272>
				  sei();
				  isr_cn =1;
				  _delay_ms(100);
			  }
			  cli();
    15de:	f8 94       	cli
    15e0:	8f ef       	ldi	r24, 0xFF	; 255
    15e2:	9d eb       	ldi	r25, 0xBD	; 189
    15e4:	2a e0       	ldi	r18, 0x0A	; 10
    15e6:	81 50       	subi	r24, 0x01	; 1
    15e8:	90 40       	sbci	r25, 0x00	; 0
    15ea:	20 40       	sbci	r18, 0x00	; 0
    15ec:	e1 f7       	brne	.-8      	; 0x15e6 <spot_action+0x2a6>
    15ee:	00 c0       	rjmp	.+0      	; 0x15f0 <spot_action+0x2b0>
    15f0:	00 00       	nop
    15f2:	c1 c0       	rjmp	.+386    	; 0x1776 <spot_action+0x436>
			  _delay_ms(220);
		  }
	  }  
	}
	else{ 
		one_cycle = 1000/static_hz;
    15f4:	60 91 c8 00 	lds	r22, 0x00C8	; 0x8000c8 <static_hz>
    15f8:	70 91 c9 00 	lds	r23, 0x00C9	; 0x8000c9 <static_hz+0x1>
    15fc:	ce 01       	movw	r24, r28
    15fe:	c3 d7       	rcall	.+3974   	; 0x2586 <__divmodhi4>
    1600:	07 2e       	mov	r0, r23
    1602:	00 0c       	add	r0, r0
    1604:	88 0b       	sbc	r24, r24
    1606:	99 0b       	sbc	r25, r25
    1608:	49 d3       	rcall	.+1682   	; 0x1c9c <__floatsisf>
    160a:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <one_cycle>
    160e:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <one_cycle+0x1>
    1612:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <one_cycle+0x2>
    1616:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <one_cycle+0x3>
		halfcycle = one_cycle/2;
    161a:	20 e0       	ldi	r18, 0x00	; 0
    161c:	30 e0       	ldi	r19, 0x00	; 0
    161e:	40 e0       	ldi	r20, 0x00	; 0
    1620:	5f e3       	ldi	r21, 0x3F	; 63
    1622:	f0 d3       	rcall	.+2016   	; 0x1e04 <__mulsf3>
    1624:	2b 01       	movw	r4, r22
    1626:	3c 01       	movw	r6, r24
    1628:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <halfcycle>
    162c:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <halfcycle+0x1>
    1630:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <halfcycle+0x2>
    1634:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <halfcycle+0x3>
		spot_time_hz = (eeprom_read_byte(0) / halfcycle);
    1638:	80 e0       	ldi	r24, 0x00	; 0
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
    1640:	68 2f       	mov	r22, r24
    1642:	70 e0       	ldi	r23, 0x00	; 0
    1644:	80 e0       	ldi	r24, 0x00	; 0
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	29 d3       	rcall	.+1618   	; 0x1c9c <__floatsisf>
    164a:	a3 01       	movw	r20, r6
    164c:	92 01       	movw	r18, r4
    164e:	8b d2       	rcall	.+1302   	; 0x1b66 <__divsf3>
    1650:	60 93 5e 01 	sts	0x015E, r22	; 0x80015e <spot_time_hz>
    1654:	70 93 5f 01 	sts	0x015F, r23	; 0x80015f <spot_time_hz+0x1>
    1658:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <spot_time_hz+0x2>
    165c:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <spot_time_hz+0x3>
	  	 if(autospot_sw ==1 && spotac_tacle ==1 &&  inte_2_value>2 && inte_2_value < fi_save_value ) {
    1660:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    1664:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    1668:	01 97       	sbiw	r24, 0x01	; 1
    166a:	09 f0       	breq	.+2      	; 0x166e <spot_action+0x32e>
    166c:	84 c0       	rjmp	.+264    	; 0x1776 <spot_action+0x436>
    166e:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <spotac_tacle>
    1672:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <spotac_tacle+0x1>
    1676:	01 97       	sbiw	r24, 0x01	; 1
    1678:	09 f0       	breq	.+2      	; 0x167c <spot_action+0x33c>
    167a:	7d c0       	rjmp	.+250    	; 0x1776 <spot_action+0x436>
    167c:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <inte_2_value>
    1680:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <inte_2_value+0x1>
    1684:	83 30       	cpi	r24, 0x03	; 3
    1686:	91 05       	cpc	r25, r1
    1688:	0c f4       	brge	.+2      	; 0x168c <spot_action+0x34c>
    168a:	75 c0       	rjmp	.+234    	; 0x1776 <spot_action+0x436>
    168c:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <fi_save_value>
    1690:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <fi_save_value+0x1>
    1694:	82 17       	cp	r24, r18
    1696:	93 07       	cpc	r25, r19
    1698:	0c f0       	brlt	.+2      	; 0x169c <spot_action+0x35c>
		  	 flag_lock=0;
    169a:	6d c0       	rjmp	.+218    	; 0x1776 <spot_action+0x436>
    169c:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <flag_lock+0x1>
    16a0:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <flag_lock>
		  	 auto_read();
    16a4:	93 db       	rcall	.-2266   	; 0xdcc <auto_read>
		  	 if(autospot_sw ==1 && spotac_tacle ==1 && inte_2_value>2 && inte_2_value < fi_save_value) {
    16a6:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    16aa:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    16ae:	01 97       	sbiw	r24, 0x01	; 1
    16b0:	09 f0       	breq	.+2      	; 0x16b4 <spot_action+0x374>
    16b2:	61 c0       	rjmp	.+194    	; 0x1776 <spot_action+0x436>
    16b4:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <spotac_tacle>
    16b8:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <spotac_tacle+0x1>
    16bc:	01 97       	sbiw	r24, 0x01	; 1
    16be:	09 f0       	breq	.+2      	; 0x16c2 <spot_action+0x382>
    16c0:	5a c0       	rjmp	.+180    	; 0x1776 <spot_action+0x436>
    16c2:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <inte_2_value>
    16c6:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <inte_2_value+0x1>
    16ca:	83 30       	cpi	r24, 0x03	; 3
    16cc:	91 05       	cpc	r25, r1
    16ce:	0c f4       	brge	.+2      	; 0x16d2 <spot_action+0x392>
    16d0:	52 c0       	rjmp	.+164    	; 0x1776 <spot_action+0x436>
    16d2:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <fi_save_value>
    16d6:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <fi_save_value+0x1>
    16da:	82 17       	cp	r24, r18
    16dc:	93 07       	cpc	r25, r19
    16de:	0c f0       	brlt	.+2      	; 0x16e2 <spot_action+0x3a2>
    16e0:	4a c0       	rjmp	.+148    	; 0x1776 <spot_action+0x436>
			  	 LCD_string(0xce," L");
    16e2:	6b e3       	ldi	r22, 0x3B	; 59
    16e4:	71 e0       	ldi	r23, 0x01	; 1
    16e6:	8e ec       	ldi	r24, 0xCE	; 206
    16e8:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_string>
			  	 for(int i=0; i<2; i++){
				  	 PORTC = 0x04;
    16ec:	c5 ba       	out	0x15, r12	; 21
    16ee:	8f e1       	ldi	r24, 0x1F	; 31
    16f0:	9e e4       	ldi	r25, 0x4E	; 78
    16f2:	01 97       	sbiw	r24, 0x01	; 1
    16f4:	f1 f7       	brne	.-4      	; 0x16f2 <spot_action+0x3b2>
    16f6:	00 c0       	rjmp	.+0      	; 0x16f8 <spot_action+0x3b8>
    16f8:	00 00       	nop
				  	 _delay_ms(5);
				  	 PORTC = 0x00;
    16fa:	15 ba       	out	0x15, r1	; 21
    16fc:	8f e1       	ldi	r24, 0x1F	; 31
    16fe:	9e e4       	ldi	r25, 0x4E	; 78
    1700:	01 97       	sbiw	r24, 0x01	; 1
    1702:	f1 f7       	brne	.-4      	; 0x1700 <spot_action+0x3c0>
    1704:	00 c0       	rjmp	.+0      	; 0x1706 <spot_action+0x3c6>
    1706:	00 00       	nop
		  	 flag_lock=0;
		  	 auto_read();
		  	 if(autospot_sw ==1 && spotac_tacle ==1 && inte_2_value>2 && inte_2_value < fi_save_value) {
			  	 LCD_string(0xce," L");
			  	 for(int i=0; i<2; i++){
				  	 PORTC = 0x04;
    1708:	c5 ba       	out	0x15, r12	; 21
    170a:	8f e1       	ldi	r24, 0x1F	; 31
    170c:	9e e4       	ldi	r25, 0x4E	; 78
    170e:	01 97       	sbiw	r24, 0x01	; 1
    1710:	f1 f7       	brne	.-4      	; 0x170e <spot_action+0x3ce>
    1712:	00 c0       	rjmp	.+0      	; 0x1714 <spot_action+0x3d4>
    1714:	00 00       	nop
				  	 _delay_ms(5);
				  	 PORTC = 0x00;
    1716:	15 ba       	out	0x15, r1	; 21
    1718:	8f e1       	ldi	r24, 0x1F	; 31
    171a:	9e e4       	ldi	r25, 0x4E	; 78
    171c:	01 97       	sbiw	r24, 0x01	; 1
    171e:	f1 f7       	brne	.-4      	; 0x171c <spot_action+0x3dc>
    1720:	00 c0       	rjmp	.+0      	; 0x1722 <spot_action+0x3e2>
    1722:	00 00       	nop
				  	 _delay_ms(5);
			  	 }
			  	 for(int j=0; j<bbl; j++){
    1724:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <bbl>
    1728:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <bbl+0x1>
    172c:	18 16       	cp	r1, r24
    172e:	19 06       	cpc	r1, r25
    1730:	c4 f4       	brge	.+48     	; 0x1762 <spot_action+0x422>
    1732:	80 e0       	ldi	r24, 0x00	; 0
    1734:	90 e0       	ldi	r25, 0x00	; 0
				  	 sei();
    1736:	78 94       	sei
				  	 isr_cn =1;
    1738:	10 93 6d 01 	sts	0x016D, r17	; 0x80016d <isr_cn+0x1>
    173c:	00 93 6c 01 	sts	0x016C, r16	; 0x80016c <isr_cn>
    1740:	2f ef       	ldi	r18, 0xFF	; 255
    1742:	31 ee       	ldi	r19, 0xE1	; 225
    1744:	44 e0       	ldi	r20, 0x04	; 4
    1746:	21 50       	subi	r18, 0x01	; 1
    1748:	30 40       	sbci	r19, 0x00	; 0
    174a:	40 40       	sbci	r20, 0x00	; 0
    174c:	e1 f7       	brne	.-8      	; 0x1746 <spot_action+0x406>
    174e:	00 c0       	rjmp	.+0      	; 0x1750 <spot_action+0x410>
    1750:	00 00       	nop
				  	 PORTC = 0x04;
				  	 _delay_ms(5);
				  	 PORTC = 0x00;
				  	 _delay_ms(5);
			  	 }
			  	 for(int j=0; j<bbl; j++){
    1752:	01 96       	adiw	r24, 0x01	; 1
    1754:	20 91 97 01 	lds	r18, 0x0197	; 0x800197 <bbl>
    1758:	30 91 98 01 	lds	r19, 0x0198	; 0x800198 <bbl+0x1>
    175c:	82 17       	cp	r24, r18
    175e:	93 07       	cpc	r25, r19
    1760:	54 f3       	brlt	.-44     	; 0x1736 <spot_action+0x3f6>
				  	 sei();
				  	 isr_cn =1;
				  	 _delay_ms(100);
			  	 }
			  	 cli();
    1762:	f8 94       	cli
    1764:	8f ef       	ldi	r24, 0xFF	; 255
    1766:	9d eb       	ldi	r25, 0xBD	; 189
    1768:	2a e0       	ldi	r18, 0x0A	; 10
    176a:	81 50       	subi	r24, 0x01	; 1
    176c:	90 40       	sbci	r25, 0x00	; 0
    176e:	20 40       	sbci	r18, 0x00	; 0
    1770:	e1 f7       	brne	.-8      	; 0x176a <spot_action+0x42a>
    1772:	00 c0       	rjmp	.+0      	; 0x1774 <spot_action+0x434>
    1774:	00 00       	nop
			  	 _delay_ms(220);
		  	  }
	  	   }
	    }
		if(en_flag_sw){
    1776:	b6 9b       	sbis	0x16, 6	; 22
    1778:	0a c0       	rjmp	.+20     	; 0x178e <spot_action+0x44e>
		 flag_lock = lock_value +100;
    177a:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <lock_value>
    177e:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <lock_value+0x1>
    1782:	8c 59       	subi	r24, 0x9C	; 156
    1784:	9f 4f       	sbci	r25, 0xFF	; 255
    1786:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <flag_lock+0x1>
    178a:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <flag_lock>
		}
		if(flag_lock>lock_value){
    178e:	20 91 64 01 	lds	r18, 0x0164	; 0x800164 <flag_lock>
    1792:	30 91 65 01 	lds	r19, 0x0165	; 0x800165 <flag_lock+0x1>
    1796:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <lock_value>
    179a:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <lock_value+0x1>
    179e:	82 17       	cp	r24, r18
    17a0:	93 07       	cpc	r25, r19
			 spotac_tacle =0;
    17a2:	44 f4       	brge	.+16     	; 0x17b4 <spot_action+0x474>
    17a4:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <spotac_tacle+0x1>
    17a8:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <spotac_tacle>
			 DDRB = 0X0f;
			 PORTC = 0x00;
    17ac:	d7 ba       	out	0x17, r13	; 23
			 spottime_value();
    17ae:	15 ba       	out	0x15, r1	; 21
    17b0:	17 dc       	rcall	.-2002   	; 0xfe0 <spottime_value>
			 break;
    17b2:	44 c1       	rjmp	.+648    	; 0x1a3c <spot_action+0x6fc>
flag_lock =0;
if(autospot_sw == 1) lock_value = 250;
else lock_value = 32000;
while(1){
  DDRB = 0xBF;
  while(autospot_sw==1){
    17b4:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    17b8:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    17bc:	01 97       	sbiw	r24, 0x01	; 1
    17be:	09 f4       	brne	.+2      	; 0x17c2 <spot_action+0x482>
    17c0:	77 ce       	rjmp	.-786    	; 0x14b0 <spot_action+0x170>
    17c2:	3c c1       	rjmp	.+632    	; 0x1a3c <spot_action+0x6fc>
			 spottime_value();
			 break;
		}
  }
  while(autospot_sw ==0){
	DDRB = 0x3f;
    17c4:	f7 ba       	out	0x17, r15	; 23
	flag_lock++;
    17c6:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <flag_lock>
    17ca:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <flag_lock+0x1>
    17ce:	01 96       	adiw	r24, 0x01	; 1
    17d0:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <flag_lock+0x1>
    17d4:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <flag_lock>
	LCD_string(0xce," U");
    17d8:	68 e3       	ldi	r22, 0x38	; 56
    17da:	71 e0       	ldi	r23, 0x01	; 1
    17dc:	8e ec       	ldi	r24, 0xCE	; 206
    17de:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_string>
	if(vbl<8){
    17e2:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <vbl>
    17e6:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <vbl+0x1>
    17ea:	08 97       	sbiw	r24, 0x08	; 8
    17ec:	0c f0       	brlt	.+2      	; 0x17f0 <spot_action+0x4b0>
    17ee:	69 c0       	rjmp	.+210    	; 0x18c2 <spot_action+0x582>
	 if(spotac_tacle == 1 && autospot_sw == 0 && S4){
    17f0:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <spotac_tacle>
    17f4:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <spotac_tacle+0x1>
    17f8:	01 97       	sbiw	r24, 0x01	; 1
    17fa:	09 f0       	breq	.+2      	; 0x17fe <spot_action+0x4be>
    17fc:	00 c1       	rjmp	.+512    	; 0x19fe <spot_action+0x6be>
    17fe:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    1802:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    1806:	89 2b       	or	r24, r25
    1808:	09 f0       	breq	.+2      	; 0x180c <spot_action+0x4cc>
    180a:	f9 c0       	rjmp	.+498    	; 0x19fe <spot_action+0x6be>
    180c:	b7 9b       	sbis	0x16, 7	; 22
    180e:	f7 c0       	rjmp	.+494    	; 0x19fe <spot_action+0x6be>
    1810:	3f ef       	ldi	r19, 0xFF	; 255
    1812:	40 e7       	ldi	r20, 0x70	; 112
    1814:	82 e0       	ldi	r24, 0x02	; 2
    1816:	31 50       	subi	r19, 0x01	; 1
    1818:	40 40       	sbci	r20, 0x00	; 0
    181a:	80 40       	sbci	r24, 0x00	; 0
    181c:	e1 f7       	brne	.-8      	; 0x1816 <spot_action+0x4d6>
    181e:	00 c0       	rjmp	.+0      	; 0x1820 <spot_action+0x4e0>
    1820:	00 00       	nop
		 _delay_ms(50);
		 flag_lock=0;
    1822:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <flag_lock+0x1>
    1826:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <flag_lock>
		 DDRB = 0XFF;
    182a:	b7 ba       	out	0x17, r11	; 23
		 LCD_string(0xce," L");
    182c:	6b e3       	ldi	r22, 0x3B	; 59
    182e:	71 e0       	ldi	r23, 0x01	; 1
    1830:	8e ec       	ldi	r24, 0xCE	; 206
    1832:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_string>
		 for(int i=0; i<2; i++){
			 PORTC = 0x04;
    1836:	c5 ba       	out	0x15, r12	; 21
    1838:	8f e3       	ldi	r24, 0x3F	; 63
    183a:	9c e9       	ldi	r25, 0x9C	; 156
    183c:	01 97       	sbiw	r24, 0x01	; 1
    183e:	f1 f7       	brne	.-4      	; 0x183c <spot_action+0x4fc>
    1840:	00 c0       	rjmp	.+0      	; 0x1842 <spot_action+0x502>
    1842:	00 00       	nop
			 _delay_ms(10);
			 PORTC = 0x00;
    1844:	15 ba       	out	0x15, r1	; 21
    1846:	8f e3       	ldi	r24, 0x3F	; 63
    1848:	9c e9       	ldi	r25, 0x9C	; 156
    184a:	01 97       	sbiw	r24, 0x01	; 1
    184c:	f1 f7       	brne	.-4      	; 0x184a <spot_action+0x50a>
    184e:	00 c0       	rjmp	.+0      	; 0x1850 <spot_action+0x510>
    1850:	00 00       	nop
		 _delay_ms(50);
		 flag_lock=0;
		 DDRB = 0XFF;
		 LCD_string(0xce," L");
		 for(int i=0; i<2; i++){
			 PORTC = 0x04;
    1852:	c5 ba       	out	0x15, r12	; 21
    1854:	8f e3       	ldi	r24, 0x3F	; 63
    1856:	9c e9       	ldi	r25, 0x9C	; 156
    1858:	01 97       	sbiw	r24, 0x01	; 1
    185a:	f1 f7       	brne	.-4      	; 0x1858 <spot_action+0x518>
    185c:	00 c0       	rjmp	.+0      	; 0x185e <spot_action+0x51e>
    185e:	00 00       	nop
			 _delay_ms(10);
			 PORTC = 0x00;
    1860:	15 ba       	out	0x15, r1	; 21
    1862:	8f e3       	ldi	r24, 0x3F	; 63
    1864:	9c e9       	ldi	r25, 0x9C	; 156
    1866:	01 97       	sbiw	r24, 0x01	; 1
    1868:	f1 f7       	brne	.-4      	; 0x1866 <spot_action+0x526>
    186a:	00 c0       	rjmp	.+0      	; 0x186c <spot_action+0x52c>
    186c:	00 00       	nop
			 _delay_ms(10);
		 }
		 for(int j=0; j<bbl; j++){
    186e:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <bbl>
    1872:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <bbl+0x1>
    1876:	18 16       	cp	r1, r24
    1878:	19 06       	cpc	r1, r25
    187a:	c4 f4       	brge	.+48     	; 0x18ac <spot_action+0x56c>
    187c:	80 e0       	ldi	r24, 0x00	; 0
    187e:	90 e0       	ldi	r25, 0x00	; 0
			 sei();
    1880:	78 94       	sei
			 isr_cn =1;
    1882:	10 93 6d 01 	sts	0x016D, r17	; 0x80016d <isr_cn+0x1>
    1886:	00 93 6c 01 	sts	0x016C, r16	; 0x80016c <isr_cn>
    188a:	2f ef       	ldi	r18, 0xFF	; 255
    188c:	31 ee       	ldi	r19, 0xE1	; 225
    188e:	44 e0       	ldi	r20, 0x04	; 4
    1890:	21 50       	subi	r18, 0x01	; 1
    1892:	30 40       	sbci	r19, 0x00	; 0
    1894:	40 40       	sbci	r20, 0x00	; 0
    1896:	e1 f7       	brne	.-8      	; 0x1890 <spot_action+0x550>
    1898:	00 c0       	rjmp	.+0      	; 0x189a <spot_action+0x55a>
    189a:	00 00       	nop
			 PORTC = 0x04;
			 _delay_ms(10);
			 PORTC = 0x00;
			 _delay_ms(10);
		 }
		 for(int j=0; j<bbl; j++){
    189c:	01 96       	adiw	r24, 0x01	; 1
    189e:	20 91 97 01 	lds	r18, 0x0197	; 0x800197 <bbl>
    18a2:	30 91 98 01 	lds	r19, 0x0198	; 0x800198 <bbl+0x1>
    18a6:	82 17       	cp	r24, r18
    18a8:	93 07       	cpc	r25, r19
    18aa:	54 f3       	brlt	.-44     	; 0x1880 <spot_action+0x540>
			 sei();
			 isr_cn =1;
			 _delay_ms(100);
		 }
		 cli();
    18ac:	f8 94       	cli
    18ae:	8f ef       	ldi	r24, 0xFF	; 255
    18b0:	90 e7       	ldi	r25, 0x70	; 112
    18b2:	22 e0       	ldi	r18, 0x02	; 2
    18b4:	81 50       	subi	r24, 0x01	; 1
    18b6:	90 40       	sbci	r25, 0x00	; 0
    18b8:	20 40       	sbci	r18, 0x00	; 0
    18ba:	e1 f7       	brne	.-8      	; 0x18b4 <spot_action+0x574>
    18bc:	00 c0       	rjmp	.+0      	; 0x18be <spot_action+0x57e>
    18be:	00 00       	nop
		 _delay_ms(50);
	 }
	}
	else{
	  one_cycle = 1000/static_hz;
    18c0:	9e c0       	rjmp	.+316    	; 0x19fe <spot_action+0x6be>
    18c2:	60 91 c8 00 	lds	r22, 0x00C8	; 0x8000c8 <static_hz>
    18c6:	70 91 c9 00 	lds	r23, 0x00C9	; 0x8000c9 <static_hz+0x1>
    18ca:	ce 01       	movw	r24, r28
    18cc:	5c d6       	rcall	.+3256   	; 0x2586 <__divmodhi4>
    18ce:	07 2e       	mov	r0, r23
    18d0:	00 0c       	add	r0, r0
    18d2:	88 0b       	sbc	r24, r24
    18d4:	99 0b       	sbc	r25, r25
    18d6:	e2 d1       	rcall	.+964    	; 0x1c9c <__floatsisf>
    18d8:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <one_cycle>
    18dc:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <one_cycle+0x1>
    18e0:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <one_cycle+0x2>
    18e4:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <one_cycle+0x3>
	  halfcycle = one_cycle/2;
    18e8:	20 e0       	ldi	r18, 0x00	; 0
    18ea:	30 e0       	ldi	r19, 0x00	; 0
    18ec:	40 e0       	ldi	r20, 0x00	; 0
    18ee:	5f e3       	ldi	r21, 0x3F	; 63
    18f0:	89 d2       	rcall	.+1298   	; 0x1e04 <__mulsf3>
    18f2:	2b 01       	movw	r4, r22
    18f4:	3c 01       	movw	r6, r24
    18f6:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <halfcycle>
    18fa:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <halfcycle+0x1>
    18fe:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <halfcycle+0x2>
    1902:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <halfcycle+0x3>
	  spot_time_hz = (eeprom_read_byte(0) / halfcycle);
    1906:	80 e0       	ldi	r24, 0x00	; 0
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	0e 94 c8 14 	call	0x2990	; 0x2990 <eeprom_read_byte>
    190e:	68 2f       	mov	r22, r24
    1910:	70 e0       	ldi	r23, 0x00	; 0
    1912:	80 e0       	ldi	r24, 0x00	; 0
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	c2 d1       	rcall	.+900    	; 0x1c9c <__floatsisf>
    1918:	a3 01       	movw	r20, r6
    191a:	92 01       	movw	r18, r4
    191c:	24 d1       	rcall	.+584    	; 0x1b66 <__divsf3>
    191e:	60 93 5e 01 	sts	0x015E, r22	; 0x80015e <spot_time_hz>
    1922:	70 93 5f 01 	sts	0x015F, r23	; 0x80015f <spot_time_hz+0x1>
    1926:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <spot_time_hz+0x2>
    192a:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <spot_time_hz+0x3>
    192e:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <spotac_tacle>
	  if(spotac_tacle == 1 && autospot_sw == 0 && S4){
    1932:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <spotac_tacle+0x1>
    1936:	01 97       	sbiw	r24, 0x01	; 1
    1938:	09 f0       	breq	.+2      	; 0x193c <spot_action+0x5fc>
    193a:	61 c0       	rjmp	.+194    	; 0x19fe <spot_action+0x6be>
    193c:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    1940:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    1944:	89 2b       	or	r24, r25
    1946:	09 f0       	breq	.+2      	; 0x194a <spot_action+0x60a>
    1948:	5a c0       	rjmp	.+180    	; 0x19fe <spot_action+0x6be>
    194a:	b7 9b       	sbis	0x16, 7	; 22
    194c:	58 c0       	rjmp	.+176    	; 0x19fe <spot_action+0x6be>
    194e:	3f ef       	ldi	r19, 0xFF	; 255
    1950:	40 e7       	ldi	r20, 0x70	; 112
    1952:	82 e0       	ldi	r24, 0x02	; 2
    1954:	31 50       	subi	r19, 0x01	; 1
    1956:	40 40       	sbci	r20, 0x00	; 0
    1958:	80 40       	sbci	r24, 0x00	; 0
    195a:	e1 f7       	brne	.-8      	; 0x1954 <spot_action+0x614>
    195c:	00 c0       	rjmp	.+0      	; 0x195e <spot_action+0x61e>
    195e:	00 00       	nop
    1960:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <flag_lock+0x1>
		  _delay_ms(50);
		  flag_lock=0;
    1964:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <flag_lock>
    1968:	b7 ba       	out	0x17, r11	; 23
		  DDRB = 0XFF;
    196a:	6b e3       	ldi	r22, 0x3B	; 59
		  LCD_string(0xce," L");
    196c:	71 e0       	ldi	r23, 0x01	; 1
    196e:	8e ec       	ldi	r24, 0xCE	; 206
    1970:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_string>
    1974:	c5 ba       	out	0x15, r12	; 21
		  for(int i=0; i<2; i++){
			  PORTC = 0x04 ; 
    1976:	8f e3       	ldi	r24, 0x3F	; 63
    1978:	9c e9       	ldi	r25, 0x9C	; 156
    197a:	01 97       	sbiw	r24, 0x01	; 1
    197c:	f1 f7       	brne	.-4      	; 0x197a <spot_action+0x63a>
    197e:	00 c0       	rjmp	.+0      	; 0x1980 <spot_action+0x640>
    1980:	00 00       	nop
    1982:	15 ba       	out	0x15, r1	; 21
			  _delay_ms(10);
			  PORTC = 0x00;
    1984:	8f e3       	ldi	r24, 0x3F	; 63
    1986:	9c e9       	ldi	r25, 0x9C	; 156
    1988:	01 97       	sbiw	r24, 0x01	; 1
    198a:	f1 f7       	brne	.-4      	; 0x1988 <spot_action+0x648>
    198c:	00 c0       	rjmp	.+0      	; 0x198e <spot_action+0x64e>
    198e:	00 00       	nop
    1990:	c5 ba       	out	0x15, r12	; 21
		  _delay_ms(50);
		  flag_lock=0;
		  DDRB = 0XFF;
		  LCD_string(0xce," L");
		  for(int i=0; i<2; i++){
			  PORTC = 0x04 ; 
    1992:	8f e3       	ldi	r24, 0x3F	; 63
    1994:	9c e9       	ldi	r25, 0x9C	; 156
    1996:	01 97       	sbiw	r24, 0x01	; 1
    1998:	f1 f7       	brne	.-4      	; 0x1996 <spot_action+0x656>
    199a:	00 c0       	rjmp	.+0      	; 0x199c <spot_action+0x65c>
    199c:	00 00       	nop
    199e:	15 ba       	out	0x15, r1	; 21
			  _delay_ms(10);
			  PORTC = 0x00;
    19a0:	8f e3       	ldi	r24, 0x3F	; 63
    19a2:	9c e9       	ldi	r25, 0x9C	; 156
    19a4:	01 97       	sbiw	r24, 0x01	; 1
    19a6:	f1 f7       	brne	.-4      	; 0x19a4 <spot_action+0x664>
    19a8:	00 c0       	rjmp	.+0      	; 0x19aa <spot_action+0x66a>
    19aa:	00 00       	nop
    19ac:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <bbl>
			  _delay_ms(10);
		  }
		  for(int j=0; j<bbl; j++){
    19b0:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <bbl+0x1>
    19b4:	18 16       	cp	r1, r24
    19b6:	19 06       	cpc	r1, r25
    19b8:	c4 f4       	brge	.+48     	; 0x19ea <spot_action+0x6aa>
    19ba:	80 e0       	ldi	r24, 0x00	; 0
    19bc:	90 e0       	ldi	r25, 0x00	; 0
    19be:	78 94       	sei
			  sei();
    19c0:	10 93 6d 01 	sts	0x016D, r17	; 0x80016d <isr_cn+0x1>
			  isr_cn =1;
    19c4:	00 93 6c 01 	sts	0x016C, r16	; 0x80016c <isr_cn>
    19c8:	2f ef       	ldi	r18, 0xFF	; 255
    19ca:	31 ee       	ldi	r19, 0xE1	; 225
    19cc:	44 e0       	ldi	r20, 0x04	; 4
    19ce:	21 50       	subi	r18, 0x01	; 1
    19d0:	30 40       	sbci	r19, 0x00	; 0
    19d2:	40 40       	sbci	r20, 0x00	; 0
    19d4:	e1 f7       	brne	.-8      	; 0x19ce <spot_action+0x68e>
    19d6:	00 c0       	rjmp	.+0      	; 0x19d8 <spot_action+0x698>
    19d8:	00 00       	nop
    19da:	01 96       	adiw	r24, 0x01	; 1
			  PORTC = 0x04 ; 
			  _delay_ms(10);
			  PORTC = 0x00;
			  _delay_ms(10);
		  }
		  for(int j=0; j<bbl; j++){
    19dc:	20 91 97 01 	lds	r18, 0x0197	; 0x800197 <bbl>
    19e0:	30 91 98 01 	lds	r19, 0x0198	; 0x800198 <bbl+0x1>
    19e4:	82 17       	cp	r24, r18
    19e6:	93 07       	cpc	r25, r19
    19e8:	54 f3       	brlt	.-44     	; 0x19be <spot_action+0x67e>
    19ea:	f8 94       	cli
			  sei();
			  isr_cn =1;
			  _delay_ms(100);
		  }
		  cli();
    19ec:	8f ef       	ldi	r24, 0xFF	; 255
    19ee:	90 e7       	ldi	r25, 0x70	; 112
    19f0:	22 e0       	ldi	r18, 0x02	; 2
    19f2:	81 50       	subi	r24, 0x01	; 1
    19f4:	90 40       	sbci	r25, 0x00	; 0
    19f6:	20 40       	sbci	r18, 0x00	; 0
    19f8:	e1 f7       	brne	.-8      	; 0x19f2 <spot_action+0x6b2>
    19fa:	00 c0       	rjmp	.+0      	; 0x19fc <spot_action+0x6bc>
    19fc:	00 00       	nop
    19fe:	b6 9b       	sbis	0x16, 6	; 22
		  _delay_ms(50);
	    }
	  }
	  if(en_flag_sw){
    1a00:	0a c0       	rjmp	.+20     	; 0x1a16 <spot_action+0x6d6>
    1a02:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <lock_value>
		  flag_lock = lock_value +100;
    1a06:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <lock_value+0x1>
    1a0a:	8c 59       	subi	r24, 0x9C	; 156
    1a0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a0e:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <flag_lock+0x1>
    1a12:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <flag_lock>
    1a16:	20 91 64 01 	lds	r18, 0x0164	; 0x800164 <flag_lock>
	  }
	  if(flag_lock>lock_value){
    1a1a:	30 91 65 01 	lds	r19, 0x0165	; 0x800165 <flag_lock+0x1>
    1a1e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <lock_value>
    1a22:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <lock_value+0x1>
    1a26:	82 17       	cp	r24, r18
    1a28:	93 07       	cpc	r25, r19
    1a2a:	44 f4       	brge	.+16     	; 0x1a3c <spot_action+0x6fc>
		  spotac_tacle =0;
    1a2c:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <spotac_tacle+0x1>
    1a30:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <spotac_tacle>
		  DDRB = 0X0f;
		  PORTC = 0x00;
    1a34:	d7 ba       	out	0x17, r13	; 23
		  spottime_value();
    1a36:	15 ba       	out	0x15, r1	; 21
    1a38:	d3 da       	rcall	.-2650   	; 0xfe0 <spottime_value>
		  break;
    1a3a:	07 c0       	rjmp	.+14     	; 0x1a4a <spot_action+0x70a>
			 PORTC = 0x00;
			 spottime_value();
			 break;
		}
  }
  while(autospot_sw ==0){
    1a3c:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <autospot_sw>
    1a40:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <autospot_sw+0x1>
    1a44:	89 2b       	or	r24, r25
    1a46:	09 f4       	brne	.+2      	; 0x1a4a <spot_action+0x70a>
    1a48:	bd ce       	rjmp	.-646    	; 0x17c4 <spot_action+0x484>
		  PORTC = 0x00;
		  spottime_value();
		  break;
	  }
    }
	if(en_flag_sw){
    1a4a:	b6 9b       	sbis	0x16, 6	; 22
    1a4c:	2f cd       	rjmp	.-1442   	; 0x14ac <spot_action+0x16c>
		spottime_value();
    1a4e:	c8 da       	rcall	.-2672   	; 0xfe0 <spottime_value>
    1a50:	df 91       	pop	r29
		break;
	}
  }
 }
    1a52:	cf 91       	pop	r28
    1a54:	1f 91       	pop	r17
    1a56:	0f 91       	pop	r16
    1a58:	ff 90       	pop	r15
    1a5a:	ef 90       	pop	r14
    1a5c:	df 90       	pop	r13
    1a5e:	cf 90       	pop	r12
    1a60:	bf 90       	pop	r11
    1a62:	7f 90       	pop	r7
    1a64:	6f 90       	pop	r6
    1a66:	5f 90       	pop	r5
    1a68:	4f 90       	pop	r4
    1a6a:	08 95       	ret

00001a6c <main_Set>:
    1a6c:	8f ef       	ldi	r24, 0xFF	; 255
void main_Set(void){
	DDRC = 0xff;
    1a6e:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
    1a70:	15 ba       	out	0x15, r1	; 21
	cli();
    1a72:	f8 94       	cli
	DDRD = 0xf0;
    1a74:	80 ef       	ldi	r24, 0xF0	; 240
    1a76:	81 bb       	out	0x11, r24	; 17
	DDRA = 0x00;
    1a78:	1a ba       	out	0x1a, r1	; 26
	fir_flag =0;
    1a7a:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <fir_flag+0x1>
    1a7e:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <fir_flag>
	fi_save_value=0;
    1a82:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <fi_save_value+0x1>
    1a86:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <fi_save_value>
	first_page();
    1a8a:	f2 d8       	rcall	.-3612   	; 0xc70 <first_page>
	spot_action();
    1a8c:	59 cc       	rjmp	.-1870   	; 0x1340 <spot_action>
    1a8e:	08 95       	ret

00001a90 <main>:
    1a90:	ed df       	rcall	.-38     	; 0x1a6c <main_Set>
	GICR  = 0x40;
	MCUCR |= 1<<ISC01 | 1<<ISC00;
	sei();
} 
int main(void){
	main_Set();
    1a92:	ff cf       	rjmp	.-2      	; 0x1a92 <main+0x2>

00001a94 <__subsf3>:
    1a94:	50 58       	subi	r21, 0x80	; 128

00001a96 <__addsf3>:
    1a96:	bb 27       	eor	r27, r27
    1a98:	aa 27       	eor	r26, r26
    1a9a:	0e d0       	rcall	.+28     	; 0x1ab8 <__addsf3x>
    1a9c:	75 c1       	rjmp	.+746    	; 0x1d88 <__fp_round>
    1a9e:	66 d1       	rcall	.+716    	; 0x1d6c <__fp_pscA>
    1aa0:	30 f0       	brcs	.+12     	; 0x1aae <__addsf3+0x18>
    1aa2:	6b d1       	rcall	.+726    	; 0x1d7a <__fp_pscB>
    1aa4:	20 f0       	brcs	.+8      	; 0x1aae <__addsf3+0x18>
    1aa6:	31 f4       	brne	.+12     	; 0x1ab4 <__addsf3+0x1e>
    1aa8:	9f 3f       	cpi	r25, 0xFF	; 255
    1aaa:	11 f4       	brne	.+4      	; 0x1ab0 <__addsf3+0x1a>
    1aac:	1e f4       	brtc	.+6      	; 0x1ab4 <__addsf3+0x1e>
    1aae:	5b c1       	rjmp	.+694    	; 0x1d66 <__fp_nan>
    1ab0:	0e f4       	brtc	.+2      	; 0x1ab4 <__addsf3+0x1e>
    1ab2:	e0 95       	com	r30
    1ab4:	e7 fb       	bst	r30, 7
    1ab6:	51 c1       	rjmp	.+674    	; 0x1d5a <__fp_inf>

00001ab8 <__addsf3x>:
    1ab8:	e9 2f       	mov	r30, r25
    1aba:	77 d1       	rcall	.+750    	; 0x1daa <__fp_split3>
    1abc:	80 f3       	brcs	.-32     	; 0x1a9e <__addsf3+0x8>
    1abe:	ba 17       	cp	r27, r26
    1ac0:	62 07       	cpc	r22, r18
    1ac2:	73 07       	cpc	r23, r19
    1ac4:	84 07       	cpc	r24, r20
    1ac6:	95 07       	cpc	r25, r21
    1ac8:	18 f0       	brcs	.+6      	; 0x1ad0 <__addsf3x+0x18>
    1aca:	71 f4       	brne	.+28     	; 0x1ae8 <__addsf3x+0x30>
    1acc:	9e f5       	brtc	.+102    	; 0x1b34 <__addsf3x+0x7c>
    1ace:	8f c1       	rjmp	.+798    	; 0x1dee <__fp_zero>
    1ad0:	0e f4       	brtc	.+2      	; 0x1ad4 <__addsf3x+0x1c>
    1ad2:	e0 95       	com	r30
    1ad4:	0b 2e       	mov	r0, r27
    1ad6:	ba 2f       	mov	r27, r26
    1ad8:	a0 2d       	mov	r26, r0
    1ada:	0b 01       	movw	r0, r22
    1adc:	b9 01       	movw	r22, r18
    1ade:	90 01       	movw	r18, r0
    1ae0:	0c 01       	movw	r0, r24
    1ae2:	ca 01       	movw	r24, r20
    1ae4:	a0 01       	movw	r20, r0
    1ae6:	11 24       	eor	r1, r1
    1ae8:	ff 27       	eor	r31, r31
    1aea:	59 1b       	sub	r21, r25
    1aec:	99 f0       	breq	.+38     	; 0x1b14 <__addsf3x+0x5c>
    1aee:	59 3f       	cpi	r21, 0xF9	; 249
    1af0:	50 f4       	brcc	.+20     	; 0x1b06 <__addsf3x+0x4e>
    1af2:	50 3e       	cpi	r21, 0xE0	; 224
    1af4:	68 f1       	brcs	.+90     	; 0x1b50 <__addsf3x+0x98>
    1af6:	1a 16       	cp	r1, r26
    1af8:	f0 40       	sbci	r31, 0x00	; 0
    1afa:	a2 2f       	mov	r26, r18
    1afc:	23 2f       	mov	r18, r19
    1afe:	34 2f       	mov	r19, r20
    1b00:	44 27       	eor	r20, r20
    1b02:	58 5f       	subi	r21, 0xF8	; 248
    1b04:	f3 cf       	rjmp	.-26     	; 0x1aec <__addsf3x+0x34>
    1b06:	46 95       	lsr	r20
    1b08:	37 95       	ror	r19
    1b0a:	27 95       	ror	r18
    1b0c:	a7 95       	ror	r26
    1b0e:	f0 40       	sbci	r31, 0x00	; 0
    1b10:	53 95       	inc	r21
    1b12:	c9 f7       	brne	.-14     	; 0x1b06 <__addsf3x+0x4e>
    1b14:	7e f4       	brtc	.+30     	; 0x1b34 <__addsf3x+0x7c>
    1b16:	1f 16       	cp	r1, r31
    1b18:	ba 0b       	sbc	r27, r26
    1b1a:	62 0b       	sbc	r22, r18
    1b1c:	73 0b       	sbc	r23, r19
    1b1e:	84 0b       	sbc	r24, r20
    1b20:	ba f0       	brmi	.+46     	; 0x1b50 <__addsf3x+0x98>
    1b22:	91 50       	subi	r25, 0x01	; 1
    1b24:	a1 f0       	breq	.+40     	; 0x1b4e <__addsf3x+0x96>
    1b26:	ff 0f       	add	r31, r31
    1b28:	bb 1f       	adc	r27, r27
    1b2a:	66 1f       	adc	r22, r22
    1b2c:	77 1f       	adc	r23, r23
    1b2e:	88 1f       	adc	r24, r24
    1b30:	c2 f7       	brpl	.-16     	; 0x1b22 <__addsf3x+0x6a>
    1b32:	0e c0       	rjmp	.+28     	; 0x1b50 <__addsf3x+0x98>
    1b34:	ba 0f       	add	r27, r26
    1b36:	62 1f       	adc	r22, r18
    1b38:	73 1f       	adc	r23, r19
    1b3a:	84 1f       	adc	r24, r20
    1b3c:	48 f4       	brcc	.+18     	; 0x1b50 <__addsf3x+0x98>
    1b3e:	87 95       	ror	r24
    1b40:	77 95       	ror	r23
    1b42:	67 95       	ror	r22
    1b44:	b7 95       	ror	r27
    1b46:	f7 95       	ror	r31
    1b48:	9e 3f       	cpi	r25, 0xFE	; 254
    1b4a:	08 f0       	brcs	.+2      	; 0x1b4e <__addsf3x+0x96>
    1b4c:	b3 cf       	rjmp	.-154    	; 0x1ab4 <__addsf3+0x1e>
    1b4e:	93 95       	inc	r25
    1b50:	88 0f       	add	r24, r24
    1b52:	08 f0       	brcs	.+2      	; 0x1b56 <__addsf3x+0x9e>
    1b54:	99 27       	eor	r25, r25
    1b56:	ee 0f       	add	r30, r30
    1b58:	97 95       	ror	r25
    1b5a:	87 95       	ror	r24
    1b5c:	08 95       	ret

00001b5e <__cmpsf2>:
    1b5e:	d9 d0       	rcall	.+434    	; 0x1d12 <__fp_cmp>
    1b60:	08 f4       	brcc	.+2      	; 0x1b64 <__cmpsf2+0x6>
    1b62:	81 e0       	ldi	r24, 0x01	; 1
    1b64:	08 95       	ret

00001b66 <__divsf3>:
    1b66:	0c d0       	rcall	.+24     	; 0x1b80 <__divsf3x>
    1b68:	0f c1       	rjmp	.+542    	; 0x1d88 <__fp_round>
    1b6a:	07 d1       	rcall	.+526    	; 0x1d7a <__fp_pscB>
    1b6c:	40 f0       	brcs	.+16     	; 0x1b7e <__divsf3+0x18>
    1b6e:	fe d0       	rcall	.+508    	; 0x1d6c <__fp_pscA>
    1b70:	30 f0       	brcs	.+12     	; 0x1b7e <__divsf3+0x18>
    1b72:	21 f4       	brne	.+8      	; 0x1b7c <__divsf3+0x16>
    1b74:	5f 3f       	cpi	r21, 0xFF	; 255
    1b76:	19 f0       	breq	.+6      	; 0x1b7e <__divsf3+0x18>
    1b78:	f0 c0       	rjmp	.+480    	; 0x1d5a <__fp_inf>
    1b7a:	51 11       	cpse	r21, r1
    1b7c:	39 c1       	rjmp	.+626    	; 0x1df0 <__fp_szero>
    1b7e:	f3 c0       	rjmp	.+486    	; 0x1d66 <__fp_nan>

00001b80 <__divsf3x>:
    1b80:	14 d1       	rcall	.+552    	; 0x1daa <__fp_split3>
    1b82:	98 f3       	brcs	.-26     	; 0x1b6a <__divsf3+0x4>

00001b84 <__divsf3_pse>:
    1b84:	99 23       	and	r25, r25
    1b86:	c9 f3       	breq	.-14     	; 0x1b7a <__divsf3+0x14>
    1b88:	55 23       	and	r21, r21
    1b8a:	b1 f3       	breq	.-20     	; 0x1b78 <__divsf3+0x12>
    1b8c:	95 1b       	sub	r25, r21
    1b8e:	55 0b       	sbc	r21, r21
    1b90:	bb 27       	eor	r27, r27
    1b92:	aa 27       	eor	r26, r26
    1b94:	62 17       	cp	r22, r18
    1b96:	73 07       	cpc	r23, r19
    1b98:	84 07       	cpc	r24, r20
    1b9a:	38 f0       	brcs	.+14     	; 0x1baa <__divsf3_pse+0x26>
    1b9c:	9f 5f       	subi	r25, 0xFF	; 255
    1b9e:	5f 4f       	sbci	r21, 0xFF	; 255
    1ba0:	22 0f       	add	r18, r18
    1ba2:	33 1f       	adc	r19, r19
    1ba4:	44 1f       	adc	r20, r20
    1ba6:	aa 1f       	adc	r26, r26
    1ba8:	a9 f3       	breq	.-22     	; 0x1b94 <__divsf3_pse+0x10>
    1baa:	33 d0       	rcall	.+102    	; 0x1c12 <__divsf3_pse+0x8e>
    1bac:	0e 2e       	mov	r0, r30
    1bae:	3a f0       	brmi	.+14     	; 0x1bbe <__divsf3_pse+0x3a>
    1bb0:	e0 e8       	ldi	r30, 0x80	; 128
    1bb2:	30 d0       	rcall	.+96     	; 0x1c14 <__divsf3_pse+0x90>
    1bb4:	91 50       	subi	r25, 0x01	; 1
    1bb6:	50 40       	sbci	r21, 0x00	; 0
    1bb8:	e6 95       	lsr	r30
    1bba:	00 1c       	adc	r0, r0
    1bbc:	ca f7       	brpl	.-14     	; 0x1bb0 <__divsf3_pse+0x2c>
    1bbe:	29 d0       	rcall	.+82     	; 0x1c12 <__divsf3_pse+0x8e>
    1bc0:	fe 2f       	mov	r31, r30
    1bc2:	27 d0       	rcall	.+78     	; 0x1c12 <__divsf3_pse+0x8e>
    1bc4:	66 0f       	add	r22, r22
    1bc6:	77 1f       	adc	r23, r23
    1bc8:	88 1f       	adc	r24, r24
    1bca:	bb 1f       	adc	r27, r27
    1bcc:	26 17       	cp	r18, r22
    1bce:	37 07       	cpc	r19, r23
    1bd0:	48 07       	cpc	r20, r24
    1bd2:	ab 07       	cpc	r26, r27
    1bd4:	b0 e8       	ldi	r27, 0x80	; 128
    1bd6:	09 f0       	breq	.+2      	; 0x1bda <__divsf3_pse+0x56>
    1bd8:	bb 0b       	sbc	r27, r27
    1bda:	80 2d       	mov	r24, r0
    1bdc:	bf 01       	movw	r22, r30
    1bde:	ff 27       	eor	r31, r31
    1be0:	93 58       	subi	r25, 0x83	; 131
    1be2:	5f 4f       	sbci	r21, 0xFF	; 255
    1be4:	2a f0       	brmi	.+10     	; 0x1bf0 <__divsf3_pse+0x6c>
    1be6:	9e 3f       	cpi	r25, 0xFE	; 254
    1be8:	51 05       	cpc	r21, r1
    1bea:	68 f0       	brcs	.+26     	; 0x1c06 <__divsf3_pse+0x82>
    1bec:	b6 c0       	rjmp	.+364    	; 0x1d5a <__fp_inf>
    1bee:	00 c1       	rjmp	.+512    	; 0x1df0 <__fp_szero>
    1bf0:	5f 3f       	cpi	r21, 0xFF	; 255
    1bf2:	ec f3       	brlt	.-6      	; 0x1bee <__divsf3_pse+0x6a>
    1bf4:	98 3e       	cpi	r25, 0xE8	; 232
    1bf6:	dc f3       	brlt	.-10     	; 0x1bee <__divsf3_pse+0x6a>
    1bf8:	86 95       	lsr	r24
    1bfa:	77 95       	ror	r23
    1bfc:	67 95       	ror	r22
    1bfe:	b7 95       	ror	r27
    1c00:	f7 95       	ror	r31
    1c02:	9f 5f       	subi	r25, 0xFF	; 255
    1c04:	c9 f7       	brne	.-14     	; 0x1bf8 <__divsf3_pse+0x74>
    1c06:	88 0f       	add	r24, r24
    1c08:	91 1d       	adc	r25, r1
    1c0a:	96 95       	lsr	r25
    1c0c:	87 95       	ror	r24
    1c0e:	97 f9       	bld	r25, 7
    1c10:	08 95       	ret
    1c12:	e1 e0       	ldi	r30, 0x01	; 1
    1c14:	66 0f       	add	r22, r22
    1c16:	77 1f       	adc	r23, r23
    1c18:	88 1f       	adc	r24, r24
    1c1a:	bb 1f       	adc	r27, r27
    1c1c:	62 17       	cp	r22, r18
    1c1e:	73 07       	cpc	r23, r19
    1c20:	84 07       	cpc	r24, r20
    1c22:	ba 07       	cpc	r27, r26
    1c24:	20 f0       	brcs	.+8      	; 0x1c2e <__divsf3_pse+0xaa>
    1c26:	62 1b       	sub	r22, r18
    1c28:	73 0b       	sbc	r23, r19
    1c2a:	84 0b       	sbc	r24, r20
    1c2c:	ba 0b       	sbc	r27, r26
    1c2e:	ee 1f       	adc	r30, r30
    1c30:	88 f7       	brcc	.-30     	; 0x1c14 <__divsf3_pse+0x90>
    1c32:	e0 95       	com	r30
    1c34:	08 95       	ret

00001c36 <__fixsfsi>:
    1c36:	04 d0       	rcall	.+8      	; 0x1c40 <__fixunssfsi>
    1c38:	68 94       	set
    1c3a:	b1 11       	cpse	r27, r1
    1c3c:	d9 c0       	rjmp	.+434    	; 0x1df0 <__fp_szero>
    1c3e:	08 95       	ret

00001c40 <__fixunssfsi>:
    1c40:	bc d0       	rcall	.+376    	; 0x1dba <__fp_splitA>
    1c42:	88 f0       	brcs	.+34     	; 0x1c66 <__fixunssfsi+0x26>
    1c44:	9f 57       	subi	r25, 0x7F	; 127
    1c46:	90 f0       	brcs	.+36     	; 0x1c6c <__fixunssfsi+0x2c>
    1c48:	b9 2f       	mov	r27, r25
    1c4a:	99 27       	eor	r25, r25
    1c4c:	b7 51       	subi	r27, 0x17	; 23
    1c4e:	a0 f0       	brcs	.+40     	; 0x1c78 <__fixunssfsi+0x38>
    1c50:	d1 f0       	breq	.+52     	; 0x1c86 <__fixunssfsi+0x46>
    1c52:	66 0f       	add	r22, r22
    1c54:	77 1f       	adc	r23, r23
    1c56:	88 1f       	adc	r24, r24
    1c58:	99 1f       	adc	r25, r25
    1c5a:	1a f0       	brmi	.+6      	; 0x1c62 <__fixunssfsi+0x22>
    1c5c:	ba 95       	dec	r27
    1c5e:	c9 f7       	brne	.-14     	; 0x1c52 <__fixunssfsi+0x12>
    1c60:	12 c0       	rjmp	.+36     	; 0x1c86 <__fixunssfsi+0x46>
    1c62:	b1 30       	cpi	r27, 0x01	; 1
    1c64:	81 f0       	breq	.+32     	; 0x1c86 <__fixunssfsi+0x46>
    1c66:	c3 d0       	rcall	.+390    	; 0x1dee <__fp_zero>
    1c68:	b1 e0       	ldi	r27, 0x01	; 1
    1c6a:	08 95       	ret
    1c6c:	c0 c0       	rjmp	.+384    	; 0x1dee <__fp_zero>
    1c6e:	67 2f       	mov	r22, r23
    1c70:	78 2f       	mov	r23, r24
    1c72:	88 27       	eor	r24, r24
    1c74:	b8 5f       	subi	r27, 0xF8	; 248
    1c76:	39 f0       	breq	.+14     	; 0x1c86 <__fixunssfsi+0x46>
    1c78:	b9 3f       	cpi	r27, 0xF9	; 249
    1c7a:	cc f3       	brlt	.-14     	; 0x1c6e <__fixunssfsi+0x2e>
    1c7c:	86 95       	lsr	r24
    1c7e:	77 95       	ror	r23
    1c80:	67 95       	ror	r22
    1c82:	b3 95       	inc	r27
    1c84:	d9 f7       	brne	.-10     	; 0x1c7c <__fixunssfsi+0x3c>
    1c86:	3e f4       	brtc	.+14     	; 0x1c96 <__fixunssfsi+0x56>
    1c88:	90 95       	com	r25
    1c8a:	80 95       	com	r24
    1c8c:	70 95       	com	r23
    1c8e:	61 95       	neg	r22
    1c90:	7f 4f       	sbci	r23, 0xFF	; 255
    1c92:	8f 4f       	sbci	r24, 0xFF	; 255
    1c94:	9f 4f       	sbci	r25, 0xFF	; 255
    1c96:	08 95       	ret

00001c98 <__floatunsisf>:
    1c98:	e8 94       	clt
    1c9a:	09 c0       	rjmp	.+18     	; 0x1cae <__floatsisf+0x12>

00001c9c <__floatsisf>:
    1c9c:	97 fb       	bst	r25, 7
    1c9e:	3e f4       	brtc	.+14     	; 0x1cae <__floatsisf+0x12>
    1ca0:	90 95       	com	r25
    1ca2:	80 95       	com	r24
    1ca4:	70 95       	com	r23
    1ca6:	61 95       	neg	r22
    1ca8:	7f 4f       	sbci	r23, 0xFF	; 255
    1caa:	8f 4f       	sbci	r24, 0xFF	; 255
    1cac:	9f 4f       	sbci	r25, 0xFF	; 255
    1cae:	99 23       	and	r25, r25
    1cb0:	a9 f0       	breq	.+42     	; 0x1cdc <__floatsisf+0x40>
    1cb2:	f9 2f       	mov	r31, r25
    1cb4:	96 e9       	ldi	r25, 0x96	; 150
    1cb6:	bb 27       	eor	r27, r27
    1cb8:	93 95       	inc	r25
    1cba:	f6 95       	lsr	r31
    1cbc:	87 95       	ror	r24
    1cbe:	77 95       	ror	r23
    1cc0:	67 95       	ror	r22
    1cc2:	b7 95       	ror	r27
    1cc4:	f1 11       	cpse	r31, r1
    1cc6:	f8 cf       	rjmp	.-16     	; 0x1cb8 <__floatsisf+0x1c>
    1cc8:	fa f4       	brpl	.+62     	; 0x1d08 <__floatsisf+0x6c>
    1cca:	bb 0f       	add	r27, r27
    1ccc:	11 f4       	brne	.+4      	; 0x1cd2 <__floatsisf+0x36>
    1cce:	60 ff       	sbrs	r22, 0
    1cd0:	1b c0       	rjmp	.+54     	; 0x1d08 <__floatsisf+0x6c>
    1cd2:	6f 5f       	subi	r22, 0xFF	; 255
    1cd4:	7f 4f       	sbci	r23, 0xFF	; 255
    1cd6:	8f 4f       	sbci	r24, 0xFF	; 255
    1cd8:	9f 4f       	sbci	r25, 0xFF	; 255
    1cda:	16 c0       	rjmp	.+44     	; 0x1d08 <__floatsisf+0x6c>
    1cdc:	88 23       	and	r24, r24
    1cde:	11 f0       	breq	.+4      	; 0x1ce4 <__floatsisf+0x48>
    1ce0:	96 e9       	ldi	r25, 0x96	; 150
    1ce2:	11 c0       	rjmp	.+34     	; 0x1d06 <__floatsisf+0x6a>
    1ce4:	77 23       	and	r23, r23
    1ce6:	21 f0       	breq	.+8      	; 0x1cf0 <__floatsisf+0x54>
    1ce8:	9e e8       	ldi	r25, 0x8E	; 142
    1cea:	87 2f       	mov	r24, r23
    1cec:	76 2f       	mov	r23, r22
    1cee:	05 c0       	rjmp	.+10     	; 0x1cfa <__floatsisf+0x5e>
    1cf0:	66 23       	and	r22, r22
    1cf2:	71 f0       	breq	.+28     	; 0x1d10 <__floatsisf+0x74>
    1cf4:	96 e8       	ldi	r25, 0x86	; 134
    1cf6:	86 2f       	mov	r24, r22
    1cf8:	70 e0       	ldi	r23, 0x00	; 0
    1cfa:	60 e0       	ldi	r22, 0x00	; 0
    1cfc:	2a f0       	brmi	.+10     	; 0x1d08 <__floatsisf+0x6c>
    1cfe:	9a 95       	dec	r25
    1d00:	66 0f       	add	r22, r22
    1d02:	77 1f       	adc	r23, r23
    1d04:	88 1f       	adc	r24, r24
    1d06:	da f7       	brpl	.-10     	; 0x1cfe <__floatsisf+0x62>
    1d08:	88 0f       	add	r24, r24
    1d0a:	96 95       	lsr	r25
    1d0c:	87 95       	ror	r24
    1d0e:	97 f9       	bld	r25, 7
    1d10:	08 95       	ret

00001d12 <__fp_cmp>:
    1d12:	99 0f       	add	r25, r25
    1d14:	00 08       	sbc	r0, r0
    1d16:	55 0f       	add	r21, r21
    1d18:	aa 0b       	sbc	r26, r26
    1d1a:	e0 e8       	ldi	r30, 0x80	; 128
    1d1c:	fe ef       	ldi	r31, 0xFE	; 254
    1d1e:	16 16       	cp	r1, r22
    1d20:	17 06       	cpc	r1, r23
    1d22:	e8 07       	cpc	r30, r24
    1d24:	f9 07       	cpc	r31, r25
    1d26:	c0 f0       	brcs	.+48     	; 0x1d58 <__fp_cmp+0x46>
    1d28:	12 16       	cp	r1, r18
    1d2a:	13 06       	cpc	r1, r19
    1d2c:	e4 07       	cpc	r30, r20
    1d2e:	f5 07       	cpc	r31, r21
    1d30:	98 f0       	brcs	.+38     	; 0x1d58 <__fp_cmp+0x46>
    1d32:	62 1b       	sub	r22, r18
    1d34:	73 0b       	sbc	r23, r19
    1d36:	84 0b       	sbc	r24, r20
    1d38:	95 0b       	sbc	r25, r21
    1d3a:	39 f4       	brne	.+14     	; 0x1d4a <__fp_cmp+0x38>
    1d3c:	0a 26       	eor	r0, r26
    1d3e:	61 f0       	breq	.+24     	; 0x1d58 <__fp_cmp+0x46>
    1d40:	23 2b       	or	r18, r19
    1d42:	24 2b       	or	r18, r20
    1d44:	25 2b       	or	r18, r21
    1d46:	21 f4       	brne	.+8      	; 0x1d50 <__fp_cmp+0x3e>
    1d48:	08 95       	ret
    1d4a:	0a 26       	eor	r0, r26
    1d4c:	09 f4       	brne	.+2      	; 0x1d50 <__fp_cmp+0x3e>
    1d4e:	a1 40       	sbci	r26, 0x01	; 1
    1d50:	a6 95       	lsr	r26
    1d52:	8f ef       	ldi	r24, 0xFF	; 255
    1d54:	81 1d       	adc	r24, r1
    1d56:	81 1d       	adc	r24, r1
    1d58:	08 95       	ret

00001d5a <__fp_inf>:
    1d5a:	97 f9       	bld	r25, 7
    1d5c:	9f 67       	ori	r25, 0x7F	; 127
    1d5e:	80 e8       	ldi	r24, 0x80	; 128
    1d60:	70 e0       	ldi	r23, 0x00	; 0
    1d62:	60 e0       	ldi	r22, 0x00	; 0
    1d64:	08 95       	ret

00001d66 <__fp_nan>:
    1d66:	9f ef       	ldi	r25, 0xFF	; 255
    1d68:	80 ec       	ldi	r24, 0xC0	; 192
    1d6a:	08 95       	ret

00001d6c <__fp_pscA>:
    1d6c:	00 24       	eor	r0, r0
    1d6e:	0a 94       	dec	r0
    1d70:	16 16       	cp	r1, r22
    1d72:	17 06       	cpc	r1, r23
    1d74:	18 06       	cpc	r1, r24
    1d76:	09 06       	cpc	r0, r25
    1d78:	08 95       	ret

00001d7a <__fp_pscB>:
    1d7a:	00 24       	eor	r0, r0
    1d7c:	0a 94       	dec	r0
    1d7e:	12 16       	cp	r1, r18
    1d80:	13 06       	cpc	r1, r19
    1d82:	14 06       	cpc	r1, r20
    1d84:	05 06       	cpc	r0, r21
    1d86:	08 95       	ret

00001d88 <__fp_round>:
    1d88:	09 2e       	mov	r0, r25
    1d8a:	03 94       	inc	r0
    1d8c:	00 0c       	add	r0, r0
    1d8e:	11 f4       	brne	.+4      	; 0x1d94 <__fp_round+0xc>
    1d90:	88 23       	and	r24, r24
    1d92:	52 f0       	brmi	.+20     	; 0x1da8 <__fp_round+0x20>
    1d94:	bb 0f       	add	r27, r27
    1d96:	40 f4       	brcc	.+16     	; 0x1da8 <__fp_round+0x20>
    1d98:	bf 2b       	or	r27, r31
    1d9a:	11 f4       	brne	.+4      	; 0x1da0 <__fp_round+0x18>
    1d9c:	60 ff       	sbrs	r22, 0
    1d9e:	04 c0       	rjmp	.+8      	; 0x1da8 <__fp_round+0x20>
    1da0:	6f 5f       	subi	r22, 0xFF	; 255
    1da2:	7f 4f       	sbci	r23, 0xFF	; 255
    1da4:	8f 4f       	sbci	r24, 0xFF	; 255
    1da6:	9f 4f       	sbci	r25, 0xFF	; 255
    1da8:	08 95       	ret

00001daa <__fp_split3>:
    1daa:	57 fd       	sbrc	r21, 7
    1dac:	90 58       	subi	r25, 0x80	; 128
    1dae:	44 0f       	add	r20, r20
    1db0:	55 1f       	adc	r21, r21
    1db2:	59 f0       	breq	.+22     	; 0x1dca <__fp_splitA+0x10>
    1db4:	5f 3f       	cpi	r21, 0xFF	; 255
    1db6:	71 f0       	breq	.+28     	; 0x1dd4 <__fp_splitA+0x1a>
    1db8:	47 95       	ror	r20

00001dba <__fp_splitA>:
    1dba:	88 0f       	add	r24, r24
    1dbc:	97 fb       	bst	r25, 7
    1dbe:	99 1f       	adc	r25, r25
    1dc0:	61 f0       	breq	.+24     	; 0x1dda <__fp_splitA+0x20>
    1dc2:	9f 3f       	cpi	r25, 0xFF	; 255
    1dc4:	79 f0       	breq	.+30     	; 0x1de4 <__fp_splitA+0x2a>
    1dc6:	87 95       	ror	r24
    1dc8:	08 95       	ret
    1dca:	12 16       	cp	r1, r18
    1dcc:	13 06       	cpc	r1, r19
    1dce:	14 06       	cpc	r1, r20
    1dd0:	55 1f       	adc	r21, r21
    1dd2:	f2 cf       	rjmp	.-28     	; 0x1db8 <__fp_split3+0xe>
    1dd4:	46 95       	lsr	r20
    1dd6:	f1 df       	rcall	.-30     	; 0x1dba <__fp_splitA>
    1dd8:	08 c0       	rjmp	.+16     	; 0x1dea <__fp_splitA+0x30>
    1dda:	16 16       	cp	r1, r22
    1ddc:	17 06       	cpc	r1, r23
    1dde:	18 06       	cpc	r1, r24
    1de0:	99 1f       	adc	r25, r25
    1de2:	f1 cf       	rjmp	.-30     	; 0x1dc6 <__fp_splitA+0xc>
    1de4:	86 95       	lsr	r24
    1de6:	71 05       	cpc	r23, r1
    1de8:	61 05       	cpc	r22, r1
    1dea:	08 94       	sec
    1dec:	08 95       	ret

00001dee <__fp_zero>:
    1dee:	e8 94       	clt

00001df0 <__fp_szero>:
    1df0:	bb 27       	eor	r27, r27
    1df2:	66 27       	eor	r22, r22
    1df4:	77 27       	eor	r23, r23
    1df6:	cb 01       	movw	r24, r22
    1df8:	97 f9       	bld	r25, 7
    1dfa:	08 95       	ret

00001dfc <__gesf2>:
    1dfc:	8a df       	rcall	.-236    	; 0x1d12 <__fp_cmp>
    1dfe:	08 f4       	brcc	.+2      	; 0x1e02 <__gesf2+0x6>
    1e00:	8f ef       	ldi	r24, 0xFF	; 255
    1e02:	08 95       	ret

00001e04 <__mulsf3>:
    1e04:	0b d0       	rcall	.+22     	; 0x1e1c <__mulsf3x>
    1e06:	c0 cf       	rjmp	.-128    	; 0x1d88 <__fp_round>
    1e08:	b1 df       	rcall	.-158    	; 0x1d6c <__fp_pscA>
    1e0a:	28 f0       	brcs	.+10     	; 0x1e16 <__mulsf3+0x12>
    1e0c:	b6 df       	rcall	.-148    	; 0x1d7a <__fp_pscB>
    1e0e:	18 f0       	brcs	.+6      	; 0x1e16 <__mulsf3+0x12>
    1e10:	95 23       	and	r25, r21
    1e12:	09 f0       	breq	.+2      	; 0x1e16 <__mulsf3+0x12>
    1e14:	a2 cf       	rjmp	.-188    	; 0x1d5a <__fp_inf>
    1e16:	a7 cf       	rjmp	.-178    	; 0x1d66 <__fp_nan>
    1e18:	11 24       	eor	r1, r1
    1e1a:	ea cf       	rjmp	.-44     	; 0x1df0 <__fp_szero>

00001e1c <__mulsf3x>:
    1e1c:	c6 df       	rcall	.-116    	; 0x1daa <__fp_split3>
    1e1e:	a0 f3       	brcs	.-24     	; 0x1e08 <__mulsf3+0x4>

00001e20 <__mulsf3_pse>:
    1e20:	95 9f       	mul	r25, r21
    1e22:	d1 f3       	breq	.-12     	; 0x1e18 <__mulsf3+0x14>
    1e24:	95 0f       	add	r25, r21
    1e26:	50 e0       	ldi	r21, 0x00	; 0
    1e28:	55 1f       	adc	r21, r21
    1e2a:	62 9f       	mul	r22, r18
    1e2c:	f0 01       	movw	r30, r0
    1e2e:	72 9f       	mul	r23, r18
    1e30:	bb 27       	eor	r27, r27
    1e32:	f0 0d       	add	r31, r0
    1e34:	b1 1d       	adc	r27, r1
    1e36:	63 9f       	mul	r22, r19
    1e38:	aa 27       	eor	r26, r26
    1e3a:	f0 0d       	add	r31, r0
    1e3c:	b1 1d       	adc	r27, r1
    1e3e:	aa 1f       	adc	r26, r26
    1e40:	64 9f       	mul	r22, r20
    1e42:	66 27       	eor	r22, r22
    1e44:	b0 0d       	add	r27, r0
    1e46:	a1 1d       	adc	r26, r1
    1e48:	66 1f       	adc	r22, r22
    1e4a:	82 9f       	mul	r24, r18
    1e4c:	22 27       	eor	r18, r18
    1e4e:	b0 0d       	add	r27, r0
    1e50:	a1 1d       	adc	r26, r1
    1e52:	62 1f       	adc	r22, r18
    1e54:	73 9f       	mul	r23, r19
    1e56:	b0 0d       	add	r27, r0
    1e58:	a1 1d       	adc	r26, r1
    1e5a:	62 1f       	adc	r22, r18
    1e5c:	83 9f       	mul	r24, r19
    1e5e:	a0 0d       	add	r26, r0
    1e60:	61 1d       	adc	r22, r1
    1e62:	22 1f       	adc	r18, r18
    1e64:	74 9f       	mul	r23, r20
    1e66:	33 27       	eor	r19, r19
    1e68:	a0 0d       	add	r26, r0
    1e6a:	61 1d       	adc	r22, r1
    1e6c:	23 1f       	adc	r18, r19
    1e6e:	84 9f       	mul	r24, r20
    1e70:	60 0d       	add	r22, r0
    1e72:	21 1d       	adc	r18, r1
    1e74:	82 2f       	mov	r24, r18
    1e76:	76 2f       	mov	r23, r22
    1e78:	6a 2f       	mov	r22, r26
    1e7a:	11 24       	eor	r1, r1
    1e7c:	9f 57       	subi	r25, 0x7F	; 127
    1e7e:	50 40       	sbci	r21, 0x00	; 0
    1e80:	8a f0       	brmi	.+34     	; 0x1ea4 <__mulsf3_pse+0x84>
    1e82:	e1 f0       	breq	.+56     	; 0x1ebc <__mulsf3_pse+0x9c>
    1e84:	88 23       	and	r24, r24
    1e86:	4a f0       	brmi	.+18     	; 0x1e9a <__mulsf3_pse+0x7a>
    1e88:	ee 0f       	add	r30, r30
    1e8a:	ff 1f       	adc	r31, r31
    1e8c:	bb 1f       	adc	r27, r27
    1e8e:	66 1f       	adc	r22, r22
    1e90:	77 1f       	adc	r23, r23
    1e92:	88 1f       	adc	r24, r24
    1e94:	91 50       	subi	r25, 0x01	; 1
    1e96:	50 40       	sbci	r21, 0x00	; 0
    1e98:	a9 f7       	brne	.-22     	; 0x1e84 <__mulsf3_pse+0x64>
    1e9a:	9e 3f       	cpi	r25, 0xFE	; 254
    1e9c:	51 05       	cpc	r21, r1
    1e9e:	70 f0       	brcs	.+28     	; 0x1ebc <__mulsf3_pse+0x9c>
    1ea0:	5c cf       	rjmp	.-328    	; 0x1d5a <__fp_inf>
    1ea2:	a6 cf       	rjmp	.-180    	; 0x1df0 <__fp_szero>
    1ea4:	5f 3f       	cpi	r21, 0xFF	; 255
    1ea6:	ec f3       	brlt	.-6      	; 0x1ea2 <__mulsf3_pse+0x82>
    1ea8:	98 3e       	cpi	r25, 0xE8	; 232
    1eaa:	dc f3       	brlt	.-10     	; 0x1ea2 <__mulsf3_pse+0x82>
    1eac:	86 95       	lsr	r24
    1eae:	77 95       	ror	r23
    1eb0:	67 95       	ror	r22
    1eb2:	b7 95       	ror	r27
    1eb4:	f7 95       	ror	r31
    1eb6:	e7 95       	ror	r30
    1eb8:	9f 5f       	subi	r25, 0xFF	; 255
    1eba:	c1 f7       	brne	.-16     	; 0x1eac <__mulsf3_pse+0x8c>
    1ebc:	fe 2b       	or	r31, r30
    1ebe:	88 0f       	add	r24, r24
    1ec0:	91 1d       	adc	r25, r1
    1ec2:	96 95       	lsr	r25
    1ec4:	87 95       	ror	r24
    1ec6:	97 f9       	bld	r25, 7
    1ec8:	08 95       	ret

00001eca <vfprintf>:
    1eca:	a0 e1       	ldi	r26, 0x10	; 16
    1ecc:	b0 e0       	ldi	r27, 0x00	; 0
    1ece:	ea e6       	ldi	r30, 0x6A	; 106
    1ed0:	ff e0       	ldi	r31, 0x0F	; 15
    1ed2:	6c c3       	rjmp	.+1752   	; 0x25ac <__prologue_saves__>
    1ed4:	7c 01       	movw	r14, r24
    1ed6:	1b 01       	movw	r2, r22
    1ed8:	6a 01       	movw	r12, r20
    1eda:	fc 01       	movw	r30, r24
    1edc:	17 82       	std	Z+7, r1	; 0x07
    1ede:	16 82       	std	Z+6, r1	; 0x06
    1ee0:	83 81       	ldd	r24, Z+3	; 0x03
    1ee2:	81 ff       	sbrs	r24, 1
    1ee4:	2a c3       	rjmp	.+1620   	; 0x253a <vfprintf+0x670>
    1ee6:	9e 01       	movw	r18, r28
    1ee8:	2f 5f       	subi	r18, 0xFF	; 255
    1eea:	3f 4f       	sbci	r19, 0xFF	; 255
    1eec:	39 01       	movw	r6, r18
    1eee:	f7 01       	movw	r30, r14
    1ef0:	93 81       	ldd	r25, Z+3	; 0x03
    1ef2:	f1 01       	movw	r30, r2
    1ef4:	93 fd       	sbrc	r25, 3
    1ef6:	85 91       	lpm	r24, Z+
    1ef8:	93 ff       	sbrs	r25, 3
    1efa:	81 91       	ld	r24, Z+
    1efc:	1f 01       	movw	r2, r30
    1efe:	88 23       	and	r24, r24
    1f00:	09 f4       	brne	.+2      	; 0x1f04 <vfprintf+0x3a>
    1f02:	17 c3       	rjmp	.+1582   	; 0x2532 <vfprintf+0x668>
    1f04:	85 32       	cpi	r24, 0x25	; 37
    1f06:	39 f4       	brne	.+14     	; 0x1f16 <vfprintf+0x4c>
    1f08:	93 fd       	sbrc	r25, 3
    1f0a:	85 91       	lpm	r24, Z+
    1f0c:	93 ff       	sbrs	r25, 3
    1f0e:	81 91       	ld	r24, Z+
    1f10:	1f 01       	movw	r2, r30
    1f12:	85 32       	cpi	r24, 0x25	; 37
    1f14:	31 f4       	brne	.+12     	; 0x1f22 <vfprintf+0x58>
    1f16:	b7 01       	movw	r22, r14
    1f18:	90 e0       	ldi	r25, 0x00	; 0
    1f1a:	81 d4       	rcall	.+2306   	; 0x281e <fputc>
    1f1c:	56 01       	movw	r10, r12
    1f1e:	65 01       	movw	r12, r10
    1f20:	e6 cf       	rjmp	.-52     	; 0x1eee <vfprintf+0x24>
    1f22:	10 e0       	ldi	r17, 0x00	; 0
    1f24:	51 2c       	mov	r5, r1
    1f26:	91 2c       	mov	r9, r1
    1f28:	ff e1       	ldi	r31, 0x1F	; 31
    1f2a:	f9 15       	cp	r31, r9
    1f2c:	d8 f0       	brcs	.+54     	; 0x1f64 <vfprintf+0x9a>
    1f2e:	8b 32       	cpi	r24, 0x2B	; 43
    1f30:	79 f0       	breq	.+30     	; 0x1f50 <vfprintf+0x86>
    1f32:	38 f4       	brcc	.+14     	; 0x1f42 <vfprintf+0x78>
    1f34:	80 32       	cpi	r24, 0x20	; 32
    1f36:	79 f0       	breq	.+30     	; 0x1f56 <vfprintf+0x8c>
    1f38:	83 32       	cpi	r24, 0x23	; 35
    1f3a:	a1 f4       	brne	.+40     	; 0x1f64 <vfprintf+0x9a>
    1f3c:	f9 2d       	mov	r31, r9
    1f3e:	f0 61       	ori	r31, 0x10	; 16
    1f40:	2e c0       	rjmp	.+92     	; 0x1f9e <vfprintf+0xd4>
    1f42:	8d 32       	cpi	r24, 0x2D	; 45
    1f44:	61 f0       	breq	.+24     	; 0x1f5e <vfprintf+0x94>
    1f46:	80 33       	cpi	r24, 0x30	; 48
    1f48:	69 f4       	brne	.+26     	; 0x1f64 <vfprintf+0x9a>
    1f4a:	29 2d       	mov	r18, r9
    1f4c:	21 60       	ori	r18, 0x01	; 1
    1f4e:	2d c0       	rjmp	.+90     	; 0x1faa <vfprintf+0xe0>
    1f50:	39 2d       	mov	r19, r9
    1f52:	32 60       	ori	r19, 0x02	; 2
    1f54:	93 2e       	mov	r9, r19
    1f56:	89 2d       	mov	r24, r9
    1f58:	84 60       	ori	r24, 0x04	; 4
    1f5a:	98 2e       	mov	r9, r24
    1f5c:	2a c0       	rjmp	.+84     	; 0x1fb2 <vfprintf+0xe8>
    1f5e:	e9 2d       	mov	r30, r9
    1f60:	e8 60       	ori	r30, 0x08	; 8
    1f62:	15 c0       	rjmp	.+42     	; 0x1f8e <vfprintf+0xc4>
    1f64:	97 fc       	sbrc	r9, 7
    1f66:	2d c0       	rjmp	.+90     	; 0x1fc2 <vfprintf+0xf8>
    1f68:	20 ed       	ldi	r18, 0xD0	; 208
    1f6a:	28 0f       	add	r18, r24
    1f6c:	2a 30       	cpi	r18, 0x0A	; 10
    1f6e:	88 f4       	brcc	.+34     	; 0x1f92 <vfprintf+0xc8>
    1f70:	96 fe       	sbrs	r9, 6
    1f72:	06 c0       	rjmp	.+12     	; 0x1f80 <vfprintf+0xb6>
    1f74:	3a e0       	ldi	r19, 0x0A	; 10
    1f76:	13 9f       	mul	r17, r19
    1f78:	20 0d       	add	r18, r0
    1f7a:	11 24       	eor	r1, r1
    1f7c:	12 2f       	mov	r17, r18
    1f7e:	19 c0       	rjmp	.+50     	; 0x1fb2 <vfprintf+0xe8>
    1f80:	8a e0       	ldi	r24, 0x0A	; 10
    1f82:	58 9e       	mul	r5, r24
    1f84:	20 0d       	add	r18, r0
    1f86:	11 24       	eor	r1, r1
    1f88:	52 2e       	mov	r5, r18
    1f8a:	e9 2d       	mov	r30, r9
    1f8c:	e0 62       	ori	r30, 0x20	; 32
    1f8e:	9e 2e       	mov	r9, r30
    1f90:	10 c0       	rjmp	.+32     	; 0x1fb2 <vfprintf+0xe8>
    1f92:	8e 32       	cpi	r24, 0x2E	; 46
    1f94:	31 f4       	brne	.+12     	; 0x1fa2 <vfprintf+0xd8>
    1f96:	96 fc       	sbrc	r9, 6
    1f98:	cc c2       	rjmp	.+1432   	; 0x2532 <vfprintf+0x668>
    1f9a:	f9 2d       	mov	r31, r9
    1f9c:	f0 64       	ori	r31, 0x40	; 64
    1f9e:	9f 2e       	mov	r9, r31
    1fa0:	08 c0       	rjmp	.+16     	; 0x1fb2 <vfprintf+0xe8>
    1fa2:	8c 36       	cpi	r24, 0x6C	; 108
    1fa4:	21 f4       	brne	.+8      	; 0x1fae <vfprintf+0xe4>
    1fa6:	29 2d       	mov	r18, r9
    1fa8:	20 68       	ori	r18, 0x80	; 128
    1faa:	92 2e       	mov	r9, r18
    1fac:	02 c0       	rjmp	.+4      	; 0x1fb2 <vfprintf+0xe8>
    1fae:	88 36       	cpi	r24, 0x68	; 104
    1fb0:	41 f4       	brne	.+16     	; 0x1fc2 <vfprintf+0xf8>
    1fb2:	f1 01       	movw	r30, r2
    1fb4:	93 fd       	sbrc	r25, 3
    1fb6:	85 91       	lpm	r24, Z+
    1fb8:	93 ff       	sbrs	r25, 3
    1fba:	81 91       	ld	r24, Z+
    1fbc:	1f 01       	movw	r2, r30
    1fbe:	81 11       	cpse	r24, r1
    1fc0:	b3 cf       	rjmp	.-154    	; 0x1f28 <vfprintf+0x5e>
    1fc2:	9b eb       	ldi	r25, 0xBB	; 187
    1fc4:	98 0f       	add	r25, r24
    1fc6:	93 30       	cpi	r25, 0x03	; 3
    1fc8:	20 f4       	brcc	.+8      	; 0x1fd2 <vfprintf+0x108>
    1fca:	99 2d       	mov	r25, r9
    1fcc:	90 61       	ori	r25, 0x10	; 16
    1fce:	80 5e       	subi	r24, 0xE0	; 224
    1fd0:	07 c0       	rjmp	.+14     	; 0x1fe0 <vfprintf+0x116>
    1fd2:	9b e9       	ldi	r25, 0x9B	; 155
    1fd4:	98 0f       	add	r25, r24
    1fd6:	93 30       	cpi	r25, 0x03	; 3
    1fd8:	08 f0       	brcs	.+2      	; 0x1fdc <vfprintf+0x112>
    1fda:	59 c1       	rjmp	.+690    	; 0x228e <vfprintf+0x3c4>
    1fdc:	99 2d       	mov	r25, r9
    1fde:	9f 7e       	andi	r25, 0xEF	; 239
    1fe0:	96 ff       	sbrs	r25, 6
    1fe2:	16 e0       	ldi	r17, 0x06	; 6
    1fe4:	9f 73       	andi	r25, 0x3F	; 63
    1fe6:	99 2e       	mov	r9, r25
    1fe8:	85 36       	cpi	r24, 0x65	; 101
    1fea:	19 f4       	brne	.+6      	; 0x1ff2 <vfprintf+0x128>
    1fec:	90 64       	ori	r25, 0x40	; 64
    1fee:	99 2e       	mov	r9, r25
    1ff0:	08 c0       	rjmp	.+16     	; 0x2002 <vfprintf+0x138>
    1ff2:	86 36       	cpi	r24, 0x66	; 102
    1ff4:	21 f4       	brne	.+8      	; 0x1ffe <vfprintf+0x134>
    1ff6:	39 2f       	mov	r19, r25
    1ff8:	30 68       	ori	r19, 0x80	; 128
    1ffa:	93 2e       	mov	r9, r19
    1ffc:	02 c0       	rjmp	.+4      	; 0x2002 <vfprintf+0x138>
    1ffe:	11 11       	cpse	r17, r1
    2000:	11 50       	subi	r17, 0x01	; 1
    2002:	97 fe       	sbrs	r9, 7
    2004:	07 c0       	rjmp	.+14     	; 0x2014 <vfprintf+0x14a>
    2006:	1c 33       	cpi	r17, 0x3C	; 60
    2008:	50 f4       	brcc	.+20     	; 0x201e <vfprintf+0x154>
    200a:	44 24       	eor	r4, r4
    200c:	43 94       	inc	r4
    200e:	41 0e       	add	r4, r17
    2010:	27 e0       	ldi	r18, 0x07	; 7
    2012:	0b c0       	rjmp	.+22     	; 0x202a <vfprintf+0x160>
    2014:	18 30       	cpi	r17, 0x08	; 8
    2016:	38 f0       	brcs	.+14     	; 0x2026 <vfprintf+0x15c>
    2018:	27 e0       	ldi	r18, 0x07	; 7
    201a:	17 e0       	ldi	r17, 0x07	; 7
    201c:	05 c0       	rjmp	.+10     	; 0x2028 <vfprintf+0x15e>
    201e:	27 e0       	ldi	r18, 0x07	; 7
    2020:	9c e3       	ldi	r25, 0x3C	; 60
    2022:	49 2e       	mov	r4, r25
    2024:	02 c0       	rjmp	.+4      	; 0x202a <vfprintf+0x160>
    2026:	21 2f       	mov	r18, r17
    2028:	41 2c       	mov	r4, r1
    202a:	56 01       	movw	r10, r12
    202c:	84 e0       	ldi	r24, 0x04	; 4
    202e:	a8 0e       	add	r10, r24
    2030:	b1 1c       	adc	r11, r1
    2032:	f6 01       	movw	r30, r12
    2034:	60 81       	ld	r22, Z
    2036:	71 81       	ldd	r23, Z+1	; 0x01
    2038:	82 81       	ldd	r24, Z+2	; 0x02
    203a:	93 81       	ldd	r25, Z+3	; 0x03
    203c:	04 2d       	mov	r16, r4
    203e:	a3 01       	movw	r20, r6
    2040:	00 d3       	rcall	.+1536   	; 0x2642 <__ftoa_engine>
    2042:	6c 01       	movw	r12, r24
    2044:	f9 81       	ldd	r31, Y+1	; 0x01
    2046:	fc 87       	std	Y+12, r31	; 0x0c
    2048:	f0 ff       	sbrs	r31, 0
    204a:	02 c0       	rjmp	.+4      	; 0x2050 <vfprintf+0x186>
    204c:	f3 ff       	sbrs	r31, 3
    204e:	06 c0       	rjmp	.+12     	; 0x205c <vfprintf+0x192>
    2050:	91 fc       	sbrc	r9, 1
    2052:	06 c0       	rjmp	.+12     	; 0x2060 <vfprintf+0x196>
    2054:	92 fe       	sbrs	r9, 2
    2056:	06 c0       	rjmp	.+12     	; 0x2064 <vfprintf+0x19a>
    2058:	00 e2       	ldi	r16, 0x20	; 32
    205a:	05 c0       	rjmp	.+10     	; 0x2066 <vfprintf+0x19c>
    205c:	0d e2       	ldi	r16, 0x2D	; 45
    205e:	03 c0       	rjmp	.+6      	; 0x2066 <vfprintf+0x19c>
    2060:	0b e2       	ldi	r16, 0x2B	; 43
    2062:	01 c0       	rjmp	.+2      	; 0x2066 <vfprintf+0x19c>
    2064:	00 e0       	ldi	r16, 0x00	; 0
    2066:	8c 85       	ldd	r24, Y+12	; 0x0c
    2068:	8c 70       	andi	r24, 0x0C	; 12
    206a:	19 f0       	breq	.+6      	; 0x2072 <vfprintf+0x1a8>
    206c:	01 11       	cpse	r16, r1
    206e:	43 c2       	rjmp	.+1158   	; 0x24f6 <vfprintf+0x62c>
    2070:	80 c2       	rjmp	.+1280   	; 0x2572 <vfprintf+0x6a8>
    2072:	97 fe       	sbrs	r9, 7
    2074:	10 c0       	rjmp	.+32     	; 0x2096 <vfprintf+0x1cc>
    2076:	4c 0c       	add	r4, r12
    2078:	fc 85       	ldd	r31, Y+12	; 0x0c
    207a:	f4 ff       	sbrs	r31, 4
    207c:	04 c0       	rjmp	.+8      	; 0x2086 <vfprintf+0x1bc>
    207e:	8a 81       	ldd	r24, Y+2	; 0x02
    2080:	81 33       	cpi	r24, 0x31	; 49
    2082:	09 f4       	brne	.+2      	; 0x2086 <vfprintf+0x1bc>
    2084:	4a 94       	dec	r4
    2086:	14 14       	cp	r1, r4
    2088:	74 f5       	brge	.+92     	; 0x20e6 <vfprintf+0x21c>
    208a:	28 e0       	ldi	r18, 0x08	; 8
    208c:	24 15       	cp	r18, r4
    208e:	78 f5       	brcc	.+94     	; 0x20ee <vfprintf+0x224>
    2090:	88 e0       	ldi	r24, 0x08	; 8
    2092:	48 2e       	mov	r4, r24
    2094:	2c c0       	rjmp	.+88     	; 0x20ee <vfprintf+0x224>
    2096:	96 fc       	sbrc	r9, 6
    2098:	2a c0       	rjmp	.+84     	; 0x20ee <vfprintf+0x224>
    209a:	81 2f       	mov	r24, r17
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	8c 15       	cp	r24, r12
    20a0:	9d 05       	cpc	r25, r13
    20a2:	9c f0       	brlt	.+38     	; 0x20ca <vfprintf+0x200>
    20a4:	3c ef       	ldi	r19, 0xFC	; 252
    20a6:	c3 16       	cp	r12, r19
    20a8:	3f ef       	ldi	r19, 0xFF	; 255
    20aa:	d3 06       	cpc	r13, r19
    20ac:	74 f0       	brlt	.+28     	; 0x20ca <vfprintf+0x200>
    20ae:	89 2d       	mov	r24, r9
    20b0:	80 68       	ori	r24, 0x80	; 128
    20b2:	98 2e       	mov	r9, r24
    20b4:	0a c0       	rjmp	.+20     	; 0x20ca <vfprintf+0x200>
    20b6:	e2 e0       	ldi	r30, 0x02	; 2
    20b8:	f0 e0       	ldi	r31, 0x00	; 0
    20ba:	ec 0f       	add	r30, r28
    20bc:	fd 1f       	adc	r31, r29
    20be:	e1 0f       	add	r30, r17
    20c0:	f1 1d       	adc	r31, r1
    20c2:	80 81       	ld	r24, Z
    20c4:	80 33       	cpi	r24, 0x30	; 48
    20c6:	19 f4       	brne	.+6      	; 0x20ce <vfprintf+0x204>
    20c8:	11 50       	subi	r17, 0x01	; 1
    20ca:	11 11       	cpse	r17, r1
    20cc:	f4 cf       	rjmp	.-24     	; 0x20b6 <vfprintf+0x1ec>
    20ce:	97 fe       	sbrs	r9, 7
    20d0:	0e c0       	rjmp	.+28     	; 0x20ee <vfprintf+0x224>
    20d2:	44 24       	eor	r4, r4
    20d4:	43 94       	inc	r4
    20d6:	41 0e       	add	r4, r17
    20d8:	81 2f       	mov	r24, r17
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	c8 16       	cp	r12, r24
    20de:	d9 06       	cpc	r13, r25
    20e0:	2c f4       	brge	.+10     	; 0x20ec <vfprintf+0x222>
    20e2:	1c 19       	sub	r17, r12
    20e4:	04 c0       	rjmp	.+8      	; 0x20ee <vfprintf+0x224>
    20e6:	44 24       	eor	r4, r4
    20e8:	43 94       	inc	r4
    20ea:	01 c0       	rjmp	.+2      	; 0x20ee <vfprintf+0x224>
    20ec:	10 e0       	ldi	r17, 0x00	; 0
    20ee:	97 fe       	sbrs	r9, 7
    20f0:	06 c0       	rjmp	.+12     	; 0x20fe <vfprintf+0x234>
    20f2:	1c 14       	cp	r1, r12
    20f4:	1d 04       	cpc	r1, r13
    20f6:	34 f4       	brge	.+12     	; 0x2104 <vfprintf+0x23a>
    20f8:	c6 01       	movw	r24, r12
    20fa:	01 96       	adiw	r24, 0x01	; 1
    20fc:	05 c0       	rjmp	.+10     	; 0x2108 <vfprintf+0x23e>
    20fe:	85 e0       	ldi	r24, 0x05	; 5
    2100:	90 e0       	ldi	r25, 0x00	; 0
    2102:	02 c0       	rjmp	.+4      	; 0x2108 <vfprintf+0x23e>
    2104:	81 e0       	ldi	r24, 0x01	; 1
    2106:	90 e0       	ldi	r25, 0x00	; 0
    2108:	01 11       	cpse	r16, r1
    210a:	01 96       	adiw	r24, 0x01	; 1
    210c:	11 23       	and	r17, r17
    210e:	31 f0       	breq	.+12     	; 0x211c <vfprintf+0x252>
    2110:	21 2f       	mov	r18, r17
    2112:	30 e0       	ldi	r19, 0x00	; 0
    2114:	2f 5f       	subi	r18, 0xFF	; 255
    2116:	3f 4f       	sbci	r19, 0xFF	; 255
    2118:	82 0f       	add	r24, r18
    211a:	93 1f       	adc	r25, r19
    211c:	25 2d       	mov	r18, r5
    211e:	30 e0       	ldi	r19, 0x00	; 0
    2120:	82 17       	cp	r24, r18
    2122:	93 07       	cpc	r25, r19
    2124:	14 f4       	brge	.+4      	; 0x212a <vfprintf+0x260>
    2126:	58 1a       	sub	r5, r24
    2128:	01 c0       	rjmp	.+2      	; 0x212c <vfprintf+0x262>
    212a:	51 2c       	mov	r5, r1
    212c:	89 2d       	mov	r24, r9
    212e:	89 70       	andi	r24, 0x09	; 9
    2130:	41 f4       	brne	.+16     	; 0x2142 <vfprintf+0x278>
    2132:	55 20       	and	r5, r5
    2134:	31 f0       	breq	.+12     	; 0x2142 <vfprintf+0x278>
    2136:	b7 01       	movw	r22, r14
    2138:	80 e2       	ldi	r24, 0x20	; 32
    213a:	90 e0       	ldi	r25, 0x00	; 0
    213c:	70 d3       	rcall	.+1760   	; 0x281e <fputc>
    213e:	5a 94       	dec	r5
    2140:	f8 cf       	rjmp	.-16     	; 0x2132 <vfprintf+0x268>
    2142:	00 23       	and	r16, r16
    2144:	21 f0       	breq	.+8      	; 0x214e <vfprintf+0x284>
    2146:	b7 01       	movw	r22, r14
    2148:	80 2f       	mov	r24, r16
    214a:	90 e0       	ldi	r25, 0x00	; 0
    214c:	68 d3       	rcall	.+1744   	; 0x281e <fputc>
    214e:	93 fc       	sbrc	r9, 3
    2150:	08 c0       	rjmp	.+16     	; 0x2162 <vfprintf+0x298>
    2152:	55 20       	and	r5, r5
    2154:	31 f0       	breq	.+12     	; 0x2162 <vfprintf+0x298>
    2156:	b7 01       	movw	r22, r14
    2158:	80 e3       	ldi	r24, 0x30	; 48
    215a:	90 e0       	ldi	r25, 0x00	; 0
    215c:	60 d3       	rcall	.+1728   	; 0x281e <fputc>
    215e:	5a 94       	dec	r5
    2160:	f8 cf       	rjmp	.-16     	; 0x2152 <vfprintf+0x288>
    2162:	97 fe       	sbrs	r9, 7
    2164:	4a c0       	rjmp	.+148    	; 0x21fa <vfprintf+0x330>
    2166:	46 01       	movw	r8, r12
    2168:	d7 fe       	sbrs	r13, 7
    216a:	02 c0       	rjmp	.+4      	; 0x2170 <vfprintf+0x2a6>
    216c:	81 2c       	mov	r8, r1
    216e:	91 2c       	mov	r9, r1
    2170:	c6 01       	movw	r24, r12
    2172:	88 19       	sub	r24, r8
    2174:	99 09       	sbc	r25, r9
    2176:	f3 01       	movw	r30, r6
    2178:	e8 0f       	add	r30, r24
    217a:	f9 1f       	adc	r31, r25
    217c:	fe 87       	std	Y+14, r31	; 0x0e
    217e:	ed 87       	std	Y+13, r30	; 0x0d
    2180:	96 01       	movw	r18, r12
    2182:	24 19       	sub	r18, r4
    2184:	31 09       	sbc	r19, r1
    2186:	38 8b       	std	Y+16, r19	; 0x10
    2188:	2f 87       	std	Y+15, r18	; 0x0f
    218a:	01 2f       	mov	r16, r17
    218c:	10 e0       	ldi	r17, 0x00	; 0
    218e:	11 95       	neg	r17
    2190:	01 95       	neg	r16
    2192:	11 09       	sbc	r17, r1
    2194:	3f ef       	ldi	r19, 0xFF	; 255
    2196:	83 16       	cp	r8, r19
    2198:	93 06       	cpc	r9, r19
    219a:	21 f4       	brne	.+8      	; 0x21a4 <vfprintf+0x2da>
    219c:	b7 01       	movw	r22, r14
    219e:	8e e2       	ldi	r24, 0x2E	; 46
    21a0:	90 e0       	ldi	r25, 0x00	; 0
    21a2:	3d d3       	rcall	.+1658   	; 0x281e <fputc>
    21a4:	c8 14       	cp	r12, r8
    21a6:	d9 04       	cpc	r13, r9
    21a8:	4c f0       	brlt	.+18     	; 0x21bc <vfprintf+0x2f2>
    21aa:	8f 85       	ldd	r24, Y+15	; 0x0f
    21ac:	98 89       	ldd	r25, Y+16	; 0x10
    21ae:	88 15       	cp	r24, r8
    21b0:	99 05       	cpc	r25, r9
    21b2:	24 f4       	brge	.+8      	; 0x21bc <vfprintf+0x2f2>
    21b4:	ed 85       	ldd	r30, Y+13	; 0x0d
    21b6:	fe 85       	ldd	r31, Y+14	; 0x0e
    21b8:	81 81       	ldd	r24, Z+1	; 0x01
    21ba:	01 c0       	rjmp	.+2      	; 0x21be <vfprintf+0x2f4>
    21bc:	80 e3       	ldi	r24, 0x30	; 48
    21be:	f1 e0       	ldi	r31, 0x01	; 1
    21c0:	8f 1a       	sub	r8, r31
    21c2:	91 08       	sbc	r9, r1
    21c4:	2d 85       	ldd	r18, Y+13	; 0x0d
    21c6:	3e 85       	ldd	r19, Y+14	; 0x0e
    21c8:	2f 5f       	subi	r18, 0xFF	; 255
    21ca:	3f 4f       	sbci	r19, 0xFF	; 255
    21cc:	3e 87       	std	Y+14, r19	; 0x0e
    21ce:	2d 87       	std	Y+13, r18	; 0x0d
    21d0:	80 16       	cp	r8, r16
    21d2:	91 06       	cpc	r9, r17
    21d4:	24 f0       	brlt	.+8      	; 0x21de <vfprintf+0x314>
    21d6:	b7 01       	movw	r22, r14
    21d8:	90 e0       	ldi	r25, 0x00	; 0
    21da:	21 d3       	rcall	.+1602   	; 0x281e <fputc>
    21dc:	db cf       	rjmp	.-74     	; 0x2194 <vfprintf+0x2ca>
    21de:	c8 14       	cp	r12, r8
    21e0:	d9 04       	cpc	r13, r9
    21e2:	41 f4       	brne	.+16     	; 0x21f4 <vfprintf+0x32a>
    21e4:	9a 81       	ldd	r25, Y+2	; 0x02
    21e6:	96 33       	cpi	r25, 0x36	; 54
    21e8:	20 f4       	brcc	.+8      	; 0x21f2 <vfprintf+0x328>
    21ea:	95 33       	cpi	r25, 0x35	; 53
    21ec:	19 f4       	brne	.+6      	; 0x21f4 <vfprintf+0x32a>
    21ee:	3c 85       	ldd	r19, Y+12	; 0x0c
    21f0:	34 ff       	sbrs	r19, 4
    21f2:	81 e3       	ldi	r24, 0x31	; 49
    21f4:	b7 01       	movw	r22, r14
    21f6:	90 e0       	ldi	r25, 0x00	; 0
    21f8:	48 c0       	rjmp	.+144    	; 0x228a <vfprintf+0x3c0>
    21fa:	8a 81       	ldd	r24, Y+2	; 0x02
    21fc:	81 33       	cpi	r24, 0x31	; 49
    21fe:	19 f0       	breq	.+6      	; 0x2206 <vfprintf+0x33c>
    2200:	9c 85       	ldd	r25, Y+12	; 0x0c
    2202:	9f 7e       	andi	r25, 0xEF	; 239
    2204:	9c 87       	std	Y+12, r25	; 0x0c
    2206:	b7 01       	movw	r22, r14
    2208:	90 e0       	ldi	r25, 0x00	; 0
    220a:	09 d3       	rcall	.+1554   	; 0x281e <fputc>
    220c:	11 11       	cpse	r17, r1
    220e:	05 c0       	rjmp	.+10     	; 0x221a <vfprintf+0x350>
    2210:	94 fc       	sbrc	r9, 4
    2212:	16 c0       	rjmp	.+44     	; 0x2240 <vfprintf+0x376>
    2214:	85 e6       	ldi	r24, 0x65	; 101
    2216:	90 e0       	ldi	r25, 0x00	; 0
    2218:	15 c0       	rjmp	.+42     	; 0x2244 <vfprintf+0x37a>
    221a:	b7 01       	movw	r22, r14
    221c:	8e e2       	ldi	r24, 0x2E	; 46
    221e:	90 e0       	ldi	r25, 0x00	; 0
    2220:	fe d2       	rcall	.+1532   	; 0x281e <fputc>
    2222:	1e 5f       	subi	r17, 0xFE	; 254
    2224:	82 e0       	ldi	r24, 0x02	; 2
    2226:	01 e0       	ldi	r16, 0x01	; 1
    2228:	08 0f       	add	r16, r24
    222a:	f3 01       	movw	r30, r6
    222c:	e8 0f       	add	r30, r24
    222e:	f1 1d       	adc	r31, r1
    2230:	80 81       	ld	r24, Z
    2232:	b7 01       	movw	r22, r14
    2234:	90 e0       	ldi	r25, 0x00	; 0
    2236:	f3 d2       	rcall	.+1510   	; 0x281e <fputc>
    2238:	80 2f       	mov	r24, r16
    223a:	01 13       	cpse	r16, r17
    223c:	f4 cf       	rjmp	.-24     	; 0x2226 <vfprintf+0x35c>
    223e:	e8 cf       	rjmp	.-48     	; 0x2210 <vfprintf+0x346>
    2240:	85 e4       	ldi	r24, 0x45	; 69
    2242:	90 e0       	ldi	r25, 0x00	; 0
    2244:	b7 01       	movw	r22, r14
    2246:	eb d2       	rcall	.+1494   	; 0x281e <fputc>
    2248:	d7 fc       	sbrc	r13, 7
    224a:	06 c0       	rjmp	.+12     	; 0x2258 <vfprintf+0x38e>
    224c:	c1 14       	cp	r12, r1
    224e:	d1 04       	cpc	r13, r1
    2250:	41 f4       	brne	.+16     	; 0x2262 <vfprintf+0x398>
    2252:	ec 85       	ldd	r30, Y+12	; 0x0c
    2254:	e4 ff       	sbrs	r30, 4
    2256:	05 c0       	rjmp	.+10     	; 0x2262 <vfprintf+0x398>
    2258:	d1 94       	neg	r13
    225a:	c1 94       	neg	r12
    225c:	d1 08       	sbc	r13, r1
    225e:	8d e2       	ldi	r24, 0x2D	; 45
    2260:	01 c0       	rjmp	.+2      	; 0x2264 <vfprintf+0x39a>
    2262:	8b e2       	ldi	r24, 0x2B	; 43
    2264:	b7 01       	movw	r22, r14
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	da d2       	rcall	.+1460   	; 0x281e <fputc>
    226a:	80 e3       	ldi	r24, 0x30	; 48
    226c:	2a e0       	ldi	r18, 0x0A	; 10
    226e:	c2 16       	cp	r12, r18
    2270:	d1 04       	cpc	r13, r1
    2272:	2c f0       	brlt	.+10     	; 0x227e <vfprintf+0x3b4>
    2274:	8f 5f       	subi	r24, 0xFF	; 255
    2276:	fa e0       	ldi	r31, 0x0A	; 10
    2278:	cf 1a       	sub	r12, r31
    227a:	d1 08       	sbc	r13, r1
    227c:	f7 cf       	rjmp	.-18     	; 0x226c <vfprintf+0x3a2>
    227e:	b7 01       	movw	r22, r14
    2280:	90 e0       	ldi	r25, 0x00	; 0
    2282:	cd d2       	rcall	.+1434   	; 0x281e <fputc>
    2284:	b7 01       	movw	r22, r14
    2286:	c6 01       	movw	r24, r12
    2288:	c0 96       	adiw	r24, 0x30	; 48
    228a:	c9 d2       	rcall	.+1426   	; 0x281e <fputc>
    228c:	49 c1       	rjmp	.+658    	; 0x2520 <vfprintf+0x656>
    228e:	83 36       	cpi	r24, 0x63	; 99
    2290:	31 f0       	breq	.+12     	; 0x229e <vfprintf+0x3d4>
    2292:	83 37       	cpi	r24, 0x73	; 115
    2294:	79 f0       	breq	.+30     	; 0x22b4 <vfprintf+0x3ea>
    2296:	83 35       	cpi	r24, 0x53	; 83
    2298:	09 f0       	breq	.+2      	; 0x229c <vfprintf+0x3d2>
    229a:	52 c0       	rjmp	.+164    	; 0x2340 <vfprintf+0x476>
    229c:	1f c0       	rjmp	.+62     	; 0x22dc <vfprintf+0x412>
    229e:	56 01       	movw	r10, r12
    22a0:	32 e0       	ldi	r19, 0x02	; 2
    22a2:	a3 0e       	add	r10, r19
    22a4:	b1 1c       	adc	r11, r1
    22a6:	f6 01       	movw	r30, r12
    22a8:	80 81       	ld	r24, Z
    22aa:	89 83       	std	Y+1, r24	; 0x01
    22ac:	01 e0       	ldi	r16, 0x01	; 1
    22ae:	10 e0       	ldi	r17, 0x00	; 0
    22b0:	63 01       	movw	r12, r6
    22b2:	11 c0       	rjmp	.+34     	; 0x22d6 <vfprintf+0x40c>
    22b4:	56 01       	movw	r10, r12
    22b6:	f2 e0       	ldi	r31, 0x02	; 2
    22b8:	af 0e       	add	r10, r31
    22ba:	b1 1c       	adc	r11, r1
    22bc:	f6 01       	movw	r30, r12
    22be:	c0 80       	ld	r12, Z
    22c0:	d1 80       	ldd	r13, Z+1	; 0x01
    22c2:	96 fe       	sbrs	r9, 6
    22c4:	03 c0       	rjmp	.+6      	; 0x22cc <vfprintf+0x402>
    22c6:	61 2f       	mov	r22, r17
    22c8:	70 e0       	ldi	r23, 0x00	; 0
    22ca:	02 c0       	rjmp	.+4      	; 0x22d0 <vfprintf+0x406>
    22cc:	6f ef       	ldi	r22, 0xFF	; 255
    22ce:	7f ef       	ldi	r23, 0xFF	; 255
    22d0:	c6 01       	movw	r24, r12
    22d2:	9a d2       	rcall	.+1332   	; 0x2808 <strnlen>
    22d4:	8c 01       	movw	r16, r24
    22d6:	f9 2d       	mov	r31, r9
    22d8:	ff 77       	andi	r31, 0x7F	; 127
    22da:	13 c0       	rjmp	.+38     	; 0x2302 <vfprintf+0x438>
    22dc:	56 01       	movw	r10, r12
    22de:	22 e0       	ldi	r18, 0x02	; 2
    22e0:	a2 0e       	add	r10, r18
    22e2:	b1 1c       	adc	r11, r1
    22e4:	f6 01       	movw	r30, r12
    22e6:	c0 80       	ld	r12, Z
    22e8:	d1 80       	ldd	r13, Z+1	; 0x01
    22ea:	96 fe       	sbrs	r9, 6
    22ec:	03 c0       	rjmp	.+6      	; 0x22f4 <vfprintf+0x42a>
    22ee:	61 2f       	mov	r22, r17
    22f0:	70 e0       	ldi	r23, 0x00	; 0
    22f2:	02 c0       	rjmp	.+4      	; 0x22f8 <vfprintf+0x42e>
    22f4:	6f ef       	ldi	r22, 0xFF	; 255
    22f6:	7f ef       	ldi	r23, 0xFF	; 255
    22f8:	c6 01       	movw	r24, r12
    22fa:	7b d2       	rcall	.+1270   	; 0x27f2 <strnlen_P>
    22fc:	8c 01       	movw	r16, r24
    22fe:	f9 2d       	mov	r31, r9
    2300:	f0 68       	ori	r31, 0x80	; 128
    2302:	9f 2e       	mov	r9, r31
    2304:	f3 fd       	sbrc	r31, 3
    2306:	18 c0       	rjmp	.+48     	; 0x2338 <vfprintf+0x46e>
    2308:	85 2d       	mov	r24, r5
    230a:	90 e0       	ldi	r25, 0x00	; 0
    230c:	08 17       	cp	r16, r24
    230e:	19 07       	cpc	r17, r25
    2310:	98 f4       	brcc	.+38     	; 0x2338 <vfprintf+0x46e>
    2312:	b7 01       	movw	r22, r14
    2314:	80 e2       	ldi	r24, 0x20	; 32
    2316:	90 e0       	ldi	r25, 0x00	; 0
    2318:	82 d2       	rcall	.+1284   	; 0x281e <fputc>
    231a:	5a 94       	dec	r5
    231c:	f5 cf       	rjmp	.-22     	; 0x2308 <vfprintf+0x43e>
    231e:	f6 01       	movw	r30, r12
    2320:	97 fc       	sbrc	r9, 7
    2322:	85 91       	lpm	r24, Z+
    2324:	97 fe       	sbrs	r9, 7
    2326:	81 91       	ld	r24, Z+
    2328:	6f 01       	movw	r12, r30
    232a:	b7 01       	movw	r22, r14
    232c:	90 e0       	ldi	r25, 0x00	; 0
    232e:	77 d2       	rcall	.+1262   	; 0x281e <fputc>
    2330:	51 10       	cpse	r5, r1
    2332:	5a 94       	dec	r5
    2334:	01 50       	subi	r16, 0x01	; 1
    2336:	11 09       	sbc	r17, r1
    2338:	01 15       	cp	r16, r1
    233a:	11 05       	cpc	r17, r1
    233c:	81 f7       	brne	.-32     	; 0x231e <vfprintf+0x454>
    233e:	f0 c0       	rjmp	.+480    	; 0x2520 <vfprintf+0x656>
    2340:	84 36       	cpi	r24, 0x64	; 100
    2342:	11 f0       	breq	.+4      	; 0x2348 <vfprintf+0x47e>
    2344:	89 36       	cpi	r24, 0x69	; 105
    2346:	59 f5       	brne	.+86     	; 0x239e <vfprintf+0x4d4>
    2348:	56 01       	movw	r10, r12
    234a:	97 fe       	sbrs	r9, 7
    234c:	09 c0       	rjmp	.+18     	; 0x2360 <vfprintf+0x496>
    234e:	24 e0       	ldi	r18, 0x04	; 4
    2350:	a2 0e       	add	r10, r18
    2352:	b1 1c       	adc	r11, r1
    2354:	f6 01       	movw	r30, r12
    2356:	60 81       	ld	r22, Z
    2358:	71 81       	ldd	r23, Z+1	; 0x01
    235a:	82 81       	ldd	r24, Z+2	; 0x02
    235c:	93 81       	ldd	r25, Z+3	; 0x03
    235e:	0a c0       	rjmp	.+20     	; 0x2374 <vfprintf+0x4aa>
    2360:	f2 e0       	ldi	r31, 0x02	; 2
    2362:	af 0e       	add	r10, r31
    2364:	b1 1c       	adc	r11, r1
    2366:	f6 01       	movw	r30, r12
    2368:	60 81       	ld	r22, Z
    236a:	71 81       	ldd	r23, Z+1	; 0x01
    236c:	07 2e       	mov	r0, r23
    236e:	00 0c       	add	r0, r0
    2370:	88 0b       	sbc	r24, r24
    2372:	99 0b       	sbc	r25, r25
    2374:	f9 2d       	mov	r31, r9
    2376:	ff 76       	andi	r31, 0x6F	; 111
    2378:	9f 2e       	mov	r9, r31
    237a:	97 ff       	sbrs	r25, 7
    237c:	09 c0       	rjmp	.+18     	; 0x2390 <vfprintf+0x4c6>
    237e:	90 95       	com	r25
    2380:	80 95       	com	r24
    2382:	70 95       	com	r23
    2384:	61 95       	neg	r22
    2386:	7f 4f       	sbci	r23, 0xFF	; 255
    2388:	8f 4f       	sbci	r24, 0xFF	; 255
    238a:	9f 4f       	sbci	r25, 0xFF	; 255
    238c:	f0 68       	ori	r31, 0x80	; 128
    238e:	9f 2e       	mov	r9, r31
    2390:	2a e0       	ldi	r18, 0x0A	; 10
    2392:	30 e0       	ldi	r19, 0x00	; 0
    2394:	a3 01       	movw	r20, r6
    2396:	9e d2       	rcall	.+1340   	; 0x28d4 <__ultoa_invert>
    2398:	c8 2e       	mov	r12, r24
    239a:	c6 18       	sub	r12, r6
    239c:	3e c0       	rjmp	.+124    	; 0x241a <vfprintf+0x550>
    239e:	09 2d       	mov	r16, r9
    23a0:	85 37       	cpi	r24, 0x75	; 117
    23a2:	21 f4       	brne	.+8      	; 0x23ac <vfprintf+0x4e2>
    23a4:	0f 7e       	andi	r16, 0xEF	; 239
    23a6:	2a e0       	ldi	r18, 0x0A	; 10
    23a8:	30 e0       	ldi	r19, 0x00	; 0
    23aa:	1d c0       	rjmp	.+58     	; 0x23e6 <vfprintf+0x51c>
    23ac:	09 7f       	andi	r16, 0xF9	; 249
    23ae:	8f 36       	cpi	r24, 0x6F	; 111
    23b0:	91 f0       	breq	.+36     	; 0x23d6 <vfprintf+0x50c>
    23b2:	18 f4       	brcc	.+6      	; 0x23ba <vfprintf+0x4f0>
    23b4:	88 35       	cpi	r24, 0x58	; 88
    23b6:	59 f0       	breq	.+22     	; 0x23ce <vfprintf+0x504>
    23b8:	bc c0       	rjmp	.+376    	; 0x2532 <vfprintf+0x668>
    23ba:	80 37       	cpi	r24, 0x70	; 112
    23bc:	19 f0       	breq	.+6      	; 0x23c4 <vfprintf+0x4fa>
    23be:	88 37       	cpi	r24, 0x78	; 120
    23c0:	11 f0       	breq	.+4      	; 0x23c6 <vfprintf+0x4fc>
    23c2:	b7 c0       	rjmp	.+366    	; 0x2532 <vfprintf+0x668>
    23c4:	00 61       	ori	r16, 0x10	; 16
    23c6:	04 ff       	sbrs	r16, 4
    23c8:	09 c0       	rjmp	.+18     	; 0x23dc <vfprintf+0x512>
    23ca:	04 60       	ori	r16, 0x04	; 4
    23cc:	07 c0       	rjmp	.+14     	; 0x23dc <vfprintf+0x512>
    23ce:	94 fe       	sbrs	r9, 4
    23d0:	08 c0       	rjmp	.+16     	; 0x23e2 <vfprintf+0x518>
    23d2:	06 60       	ori	r16, 0x06	; 6
    23d4:	06 c0       	rjmp	.+12     	; 0x23e2 <vfprintf+0x518>
    23d6:	28 e0       	ldi	r18, 0x08	; 8
    23d8:	30 e0       	ldi	r19, 0x00	; 0
    23da:	05 c0       	rjmp	.+10     	; 0x23e6 <vfprintf+0x51c>
    23dc:	20 e1       	ldi	r18, 0x10	; 16
    23de:	30 e0       	ldi	r19, 0x00	; 0
    23e0:	02 c0       	rjmp	.+4      	; 0x23e6 <vfprintf+0x51c>
    23e2:	20 e1       	ldi	r18, 0x10	; 16
    23e4:	32 e0       	ldi	r19, 0x02	; 2
    23e6:	56 01       	movw	r10, r12
    23e8:	07 ff       	sbrs	r16, 7
    23ea:	09 c0       	rjmp	.+18     	; 0x23fe <vfprintf+0x534>
    23ec:	84 e0       	ldi	r24, 0x04	; 4
    23ee:	a8 0e       	add	r10, r24
    23f0:	b1 1c       	adc	r11, r1
    23f2:	f6 01       	movw	r30, r12
    23f4:	60 81       	ld	r22, Z
    23f6:	71 81       	ldd	r23, Z+1	; 0x01
    23f8:	82 81       	ldd	r24, Z+2	; 0x02
    23fa:	93 81       	ldd	r25, Z+3	; 0x03
    23fc:	08 c0       	rjmp	.+16     	; 0x240e <vfprintf+0x544>
    23fe:	f2 e0       	ldi	r31, 0x02	; 2
    2400:	af 0e       	add	r10, r31
    2402:	b1 1c       	adc	r11, r1
    2404:	f6 01       	movw	r30, r12
    2406:	60 81       	ld	r22, Z
    2408:	71 81       	ldd	r23, Z+1	; 0x01
    240a:	80 e0       	ldi	r24, 0x00	; 0
    240c:	90 e0       	ldi	r25, 0x00	; 0
    240e:	a3 01       	movw	r20, r6
    2410:	61 d2       	rcall	.+1218   	; 0x28d4 <__ultoa_invert>
    2412:	c8 2e       	mov	r12, r24
    2414:	c6 18       	sub	r12, r6
    2416:	0f 77       	andi	r16, 0x7F	; 127
    2418:	90 2e       	mov	r9, r16
    241a:	96 fe       	sbrs	r9, 6
    241c:	0b c0       	rjmp	.+22     	; 0x2434 <vfprintf+0x56a>
    241e:	09 2d       	mov	r16, r9
    2420:	0e 7f       	andi	r16, 0xFE	; 254
    2422:	c1 16       	cp	r12, r17
    2424:	50 f4       	brcc	.+20     	; 0x243a <vfprintf+0x570>
    2426:	94 fe       	sbrs	r9, 4
    2428:	0a c0       	rjmp	.+20     	; 0x243e <vfprintf+0x574>
    242a:	92 fc       	sbrc	r9, 2
    242c:	08 c0       	rjmp	.+16     	; 0x243e <vfprintf+0x574>
    242e:	09 2d       	mov	r16, r9
    2430:	0e 7e       	andi	r16, 0xEE	; 238
    2432:	05 c0       	rjmp	.+10     	; 0x243e <vfprintf+0x574>
    2434:	dc 2c       	mov	r13, r12
    2436:	09 2d       	mov	r16, r9
    2438:	03 c0       	rjmp	.+6      	; 0x2440 <vfprintf+0x576>
    243a:	dc 2c       	mov	r13, r12
    243c:	01 c0       	rjmp	.+2      	; 0x2440 <vfprintf+0x576>
    243e:	d1 2e       	mov	r13, r17
    2440:	04 ff       	sbrs	r16, 4
    2442:	0d c0       	rjmp	.+26     	; 0x245e <vfprintf+0x594>
    2444:	fe 01       	movw	r30, r28
    2446:	ec 0d       	add	r30, r12
    2448:	f1 1d       	adc	r31, r1
    244a:	80 81       	ld	r24, Z
    244c:	80 33       	cpi	r24, 0x30	; 48
    244e:	11 f4       	brne	.+4      	; 0x2454 <vfprintf+0x58a>
    2450:	09 7e       	andi	r16, 0xE9	; 233
    2452:	09 c0       	rjmp	.+18     	; 0x2466 <vfprintf+0x59c>
    2454:	02 ff       	sbrs	r16, 2
    2456:	06 c0       	rjmp	.+12     	; 0x2464 <vfprintf+0x59a>
    2458:	d3 94       	inc	r13
    245a:	d3 94       	inc	r13
    245c:	04 c0       	rjmp	.+8      	; 0x2466 <vfprintf+0x59c>
    245e:	80 2f       	mov	r24, r16
    2460:	86 78       	andi	r24, 0x86	; 134
    2462:	09 f0       	breq	.+2      	; 0x2466 <vfprintf+0x59c>
    2464:	d3 94       	inc	r13
    2466:	03 fd       	sbrc	r16, 3
    2468:	10 c0       	rjmp	.+32     	; 0x248a <vfprintf+0x5c0>
    246a:	00 ff       	sbrs	r16, 0
    246c:	06 c0       	rjmp	.+12     	; 0x247a <vfprintf+0x5b0>
    246e:	1c 2d       	mov	r17, r12
    2470:	d5 14       	cp	r13, r5
    2472:	78 f4       	brcc	.+30     	; 0x2492 <vfprintf+0x5c8>
    2474:	15 0d       	add	r17, r5
    2476:	1d 19       	sub	r17, r13
    2478:	0c c0       	rjmp	.+24     	; 0x2492 <vfprintf+0x5c8>
    247a:	d5 14       	cp	r13, r5
    247c:	50 f4       	brcc	.+20     	; 0x2492 <vfprintf+0x5c8>
    247e:	b7 01       	movw	r22, r14
    2480:	80 e2       	ldi	r24, 0x20	; 32
    2482:	90 e0       	ldi	r25, 0x00	; 0
    2484:	cc d1       	rcall	.+920    	; 0x281e <fputc>
    2486:	d3 94       	inc	r13
    2488:	f8 cf       	rjmp	.-16     	; 0x247a <vfprintf+0x5b0>
    248a:	d5 14       	cp	r13, r5
    248c:	10 f4       	brcc	.+4      	; 0x2492 <vfprintf+0x5c8>
    248e:	5d 18       	sub	r5, r13
    2490:	01 c0       	rjmp	.+2      	; 0x2494 <vfprintf+0x5ca>
    2492:	51 2c       	mov	r5, r1
    2494:	04 ff       	sbrs	r16, 4
    2496:	0f c0       	rjmp	.+30     	; 0x24b6 <vfprintf+0x5ec>
    2498:	b7 01       	movw	r22, r14
    249a:	80 e3       	ldi	r24, 0x30	; 48
    249c:	90 e0       	ldi	r25, 0x00	; 0
    249e:	bf d1       	rcall	.+894    	; 0x281e <fputc>
    24a0:	02 ff       	sbrs	r16, 2
    24a2:	16 c0       	rjmp	.+44     	; 0x24d0 <vfprintf+0x606>
    24a4:	01 fd       	sbrc	r16, 1
    24a6:	03 c0       	rjmp	.+6      	; 0x24ae <vfprintf+0x5e4>
    24a8:	88 e7       	ldi	r24, 0x78	; 120
    24aa:	90 e0       	ldi	r25, 0x00	; 0
    24ac:	02 c0       	rjmp	.+4      	; 0x24b2 <vfprintf+0x5e8>
    24ae:	88 e5       	ldi	r24, 0x58	; 88
    24b0:	90 e0       	ldi	r25, 0x00	; 0
    24b2:	b7 01       	movw	r22, r14
    24b4:	0c c0       	rjmp	.+24     	; 0x24ce <vfprintf+0x604>
    24b6:	80 2f       	mov	r24, r16
    24b8:	86 78       	andi	r24, 0x86	; 134
    24ba:	51 f0       	breq	.+20     	; 0x24d0 <vfprintf+0x606>
    24bc:	01 ff       	sbrs	r16, 1
    24be:	02 c0       	rjmp	.+4      	; 0x24c4 <vfprintf+0x5fa>
    24c0:	8b e2       	ldi	r24, 0x2B	; 43
    24c2:	01 c0       	rjmp	.+2      	; 0x24c6 <vfprintf+0x5fc>
    24c4:	80 e2       	ldi	r24, 0x20	; 32
    24c6:	07 fd       	sbrc	r16, 7
    24c8:	8d e2       	ldi	r24, 0x2D	; 45
    24ca:	b7 01       	movw	r22, r14
    24cc:	90 e0       	ldi	r25, 0x00	; 0
    24ce:	a7 d1       	rcall	.+846    	; 0x281e <fputc>
    24d0:	c1 16       	cp	r12, r17
    24d2:	30 f4       	brcc	.+12     	; 0x24e0 <vfprintf+0x616>
    24d4:	b7 01       	movw	r22, r14
    24d6:	80 e3       	ldi	r24, 0x30	; 48
    24d8:	90 e0       	ldi	r25, 0x00	; 0
    24da:	a1 d1       	rcall	.+834    	; 0x281e <fputc>
    24dc:	11 50       	subi	r17, 0x01	; 1
    24de:	f8 cf       	rjmp	.-16     	; 0x24d0 <vfprintf+0x606>
    24e0:	ca 94       	dec	r12
    24e2:	f3 01       	movw	r30, r6
    24e4:	ec 0d       	add	r30, r12
    24e6:	f1 1d       	adc	r31, r1
    24e8:	80 81       	ld	r24, Z
    24ea:	b7 01       	movw	r22, r14
    24ec:	90 e0       	ldi	r25, 0x00	; 0
    24ee:	97 d1       	rcall	.+814    	; 0x281e <fputc>
    24f0:	c1 10       	cpse	r12, r1
    24f2:	f6 cf       	rjmp	.-20     	; 0x24e0 <vfprintf+0x616>
    24f4:	15 c0       	rjmp	.+42     	; 0x2520 <vfprintf+0x656>
    24f6:	f4 e0       	ldi	r31, 0x04	; 4
    24f8:	f5 15       	cp	r31, r5
    24fa:	50 f5       	brcc	.+84     	; 0x2550 <vfprintf+0x686>
    24fc:	84 e0       	ldi	r24, 0x04	; 4
    24fe:	58 1a       	sub	r5, r24
    2500:	93 fe       	sbrs	r9, 3
    2502:	1e c0       	rjmp	.+60     	; 0x2540 <vfprintf+0x676>
    2504:	01 11       	cpse	r16, r1
    2506:	25 c0       	rjmp	.+74     	; 0x2552 <vfprintf+0x688>
    2508:	2c 85       	ldd	r18, Y+12	; 0x0c
    250a:	23 ff       	sbrs	r18, 3
    250c:	27 c0       	rjmp	.+78     	; 0x255c <vfprintf+0x692>
    250e:	04 e5       	ldi	r16, 0x54	; 84
    2510:	10 e0       	ldi	r17, 0x00	; 0
    2512:	39 2d       	mov	r19, r9
    2514:	30 71       	andi	r19, 0x10	; 16
    2516:	93 2e       	mov	r9, r19
    2518:	f8 01       	movw	r30, r16
    251a:	84 91       	lpm	r24, Z
    251c:	81 11       	cpse	r24, r1
    251e:	21 c0       	rjmp	.+66     	; 0x2562 <vfprintf+0x698>
    2520:	55 20       	and	r5, r5
    2522:	09 f4       	brne	.+2      	; 0x2526 <vfprintf+0x65c>
    2524:	fc cc       	rjmp	.-1544   	; 0x1f1e <vfprintf+0x54>
    2526:	b7 01       	movw	r22, r14
    2528:	80 e2       	ldi	r24, 0x20	; 32
    252a:	90 e0       	ldi	r25, 0x00	; 0
    252c:	78 d1       	rcall	.+752    	; 0x281e <fputc>
    252e:	5a 94       	dec	r5
    2530:	f7 cf       	rjmp	.-18     	; 0x2520 <vfprintf+0x656>
    2532:	f7 01       	movw	r30, r14
    2534:	86 81       	ldd	r24, Z+6	; 0x06
    2536:	97 81       	ldd	r25, Z+7	; 0x07
    2538:	23 c0       	rjmp	.+70     	; 0x2580 <vfprintf+0x6b6>
    253a:	8f ef       	ldi	r24, 0xFF	; 255
    253c:	9f ef       	ldi	r25, 0xFF	; 255
    253e:	20 c0       	rjmp	.+64     	; 0x2580 <vfprintf+0x6b6>
    2540:	b7 01       	movw	r22, r14
    2542:	80 e2       	ldi	r24, 0x20	; 32
    2544:	90 e0       	ldi	r25, 0x00	; 0
    2546:	6b d1       	rcall	.+726    	; 0x281e <fputc>
    2548:	5a 94       	dec	r5
    254a:	51 10       	cpse	r5, r1
    254c:	f9 cf       	rjmp	.-14     	; 0x2540 <vfprintf+0x676>
    254e:	da cf       	rjmp	.-76     	; 0x2504 <vfprintf+0x63a>
    2550:	51 2c       	mov	r5, r1
    2552:	b7 01       	movw	r22, r14
    2554:	80 2f       	mov	r24, r16
    2556:	90 e0       	ldi	r25, 0x00	; 0
    2558:	62 d1       	rcall	.+708    	; 0x281e <fputc>
    255a:	d6 cf       	rjmp	.-84     	; 0x2508 <vfprintf+0x63e>
    255c:	08 e5       	ldi	r16, 0x58	; 88
    255e:	10 e0       	ldi	r17, 0x00	; 0
    2560:	d8 cf       	rjmp	.-80     	; 0x2512 <vfprintf+0x648>
    2562:	91 10       	cpse	r9, r1
    2564:	80 52       	subi	r24, 0x20	; 32
    2566:	b7 01       	movw	r22, r14
    2568:	90 e0       	ldi	r25, 0x00	; 0
    256a:	59 d1       	rcall	.+690    	; 0x281e <fputc>
    256c:	0f 5f       	subi	r16, 0xFF	; 255
    256e:	1f 4f       	sbci	r17, 0xFF	; 255
    2570:	d3 cf       	rjmp	.-90     	; 0x2518 <vfprintf+0x64e>
    2572:	23 e0       	ldi	r18, 0x03	; 3
    2574:	25 15       	cp	r18, r5
    2576:	10 f4       	brcc	.+4      	; 0x257c <vfprintf+0x6b2>
    2578:	83 e0       	ldi	r24, 0x03	; 3
    257a:	c1 cf       	rjmp	.-126    	; 0x24fe <vfprintf+0x634>
    257c:	51 2c       	mov	r5, r1
    257e:	c4 cf       	rjmp	.-120    	; 0x2508 <vfprintf+0x63e>
    2580:	60 96       	adiw	r28, 0x10	; 16
    2582:	e2 e1       	ldi	r30, 0x12	; 18
    2584:	2f c0       	rjmp	.+94     	; 0x25e4 <__epilogue_restores__>

00002586 <__divmodhi4>:
    2586:	97 fb       	bst	r25, 7
    2588:	07 2e       	mov	r0, r23
    258a:	16 f4       	brtc	.+4      	; 0x2590 <__divmodhi4+0xa>
    258c:	00 94       	com	r0
    258e:	06 d0       	rcall	.+12     	; 0x259c <__divmodhi4_neg1>
    2590:	77 fd       	sbrc	r23, 7
    2592:	08 d0       	rcall	.+16     	; 0x25a4 <__divmodhi4_neg2>
    2594:	42 d0       	rcall	.+132    	; 0x261a <__udivmodhi4>
    2596:	07 fc       	sbrc	r0, 7
    2598:	05 d0       	rcall	.+10     	; 0x25a4 <__divmodhi4_neg2>
    259a:	3e f4       	brtc	.+14     	; 0x25aa <__divmodhi4_exit>

0000259c <__divmodhi4_neg1>:
    259c:	90 95       	com	r25
    259e:	81 95       	neg	r24
    25a0:	9f 4f       	sbci	r25, 0xFF	; 255
    25a2:	08 95       	ret

000025a4 <__divmodhi4_neg2>:
    25a4:	70 95       	com	r23
    25a6:	61 95       	neg	r22
    25a8:	7f 4f       	sbci	r23, 0xFF	; 255

000025aa <__divmodhi4_exit>:
    25aa:	08 95       	ret

000025ac <__prologue_saves__>:
    25ac:	2f 92       	push	r2
    25ae:	3f 92       	push	r3
    25b0:	4f 92       	push	r4
    25b2:	5f 92       	push	r5
    25b4:	6f 92       	push	r6
    25b6:	7f 92       	push	r7
    25b8:	8f 92       	push	r8
    25ba:	9f 92       	push	r9
    25bc:	af 92       	push	r10
    25be:	bf 92       	push	r11
    25c0:	cf 92       	push	r12
    25c2:	df 92       	push	r13
    25c4:	ef 92       	push	r14
    25c6:	ff 92       	push	r15
    25c8:	0f 93       	push	r16
    25ca:	1f 93       	push	r17
    25cc:	cf 93       	push	r28
    25ce:	df 93       	push	r29
    25d0:	cd b7       	in	r28, 0x3d	; 61
    25d2:	de b7       	in	r29, 0x3e	; 62
    25d4:	ca 1b       	sub	r28, r26
    25d6:	db 0b       	sbc	r29, r27
    25d8:	0f b6       	in	r0, 0x3f	; 63
    25da:	f8 94       	cli
    25dc:	de bf       	out	0x3e, r29	; 62
    25de:	0f be       	out	0x3f, r0	; 63
    25e0:	cd bf       	out	0x3d, r28	; 61
    25e2:	09 94       	ijmp

000025e4 <__epilogue_restores__>:
    25e4:	2a 88       	ldd	r2, Y+18	; 0x12
    25e6:	39 88       	ldd	r3, Y+17	; 0x11
    25e8:	48 88       	ldd	r4, Y+16	; 0x10
    25ea:	5f 84       	ldd	r5, Y+15	; 0x0f
    25ec:	6e 84       	ldd	r6, Y+14	; 0x0e
    25ee:	7d 84       	ldd	r7, Y+13	; 0x0d
    25f0:	8c 84       	ldd	r8, Y+12	; 0x0c
    25f2:	9b 84       	ldd	r9, Y+11	; 0x0b
    25f4:	aa 84       	ldd	r10, Y+10	; 0x0a
    25f6:	b9 84       	ldd	r11, Y+9	; 0x09
    25f8:	c8 84       	ldd	r12, Y+8	; 0x08
    25fa:	df 80       	ldd	r13, Y+7	; 0x07
    25fc:	ee 80       	ldd	r14, Y+6	; 0x06
    25fe:	fd 80       	ldd	r15, Y+5	; 0x05
    2600:	0c 81       	ldd	r16, Y+4	; 0x04
    2602:	1b 81       	ldd	r17, Y+3	; 0x03
    2604:	aa 81       	ldd	r26, Y+2	; 0x02
    2606:	b9 81       	ldd	r27, Y+1	; 0x01
    2608:	ce 0f       	add	r28, r30
    260a:	d1 1d       	adc	r29, r1
    260c:	0f b6       	in	r0, 0x3f	; 63
    260e:	f8 94       	cli
    2610:	de bf       	out	0x3e, r29	; 62
    2612:	0f be       	out	0x3f, r0	; 63
    2614:	cd bf       	out	0x3d, r28	; 61
    2616:	ed 01       	movw	r28, r26
    2618:	08 95       	ret

0000261a <__udivmodhi4>:
    261a:	aa 1b       	sub	r26, r26
    261c:	bb 1b       	sub	r27, r27
    261e:	51 e1       	ldi	r21, 0x11	; 17
    2620:	07 c0       	rjmp	.+14     	; 0x2630 <__udivmodhi4_ep>

00002622 <__udivmodhi4_loop>:
    2622:	aa 1f       	adc	r26, r26
    2624:	bb 1f       	adc	r27, r27
    2626:	a6 17       	cp	r26, r22
    2628:	b7 07       	cpc	r27, r23
    262a:	10 f0       	brcs	.+4      	; 0x2630 <__udivmodhi4_ep>
    262c:	a6 1b       	sub	r26, r22
    262e:	b7 0b       	sbc	r27, r23

00002630 <__udivmodhi4_ep>:
    2630:	88 1f       	adc	r24, r24
    2632:	99 1f       	adc	r25, r25
    2634:	5a 95       	dec	r21
    2636:	a9 f7       	brne	.-22     	; 0x2622 <__udivmodhi4_loop>
    2638:	80 95       	com	r24
    263a:	90 95       	com	r25
    263c:	bc 01       	movw	r22, r24
    263e:	cd 01       	movw	r24, r26
    2640:	08 95       	ret

00002642 <__ftoa_engine>:
    2642:	28 30       	cpi	r18, 0x08	; 8
    2644:	08 f0       	brcs	.+2      	; 0x2648 <__ftoa_engine+0x6>
    2646:	27 e0       	ldi	r18, 0x07	; 7
    2648:	33 27       	eor	r19, r19
    264a:	da 01       	movw	r26, r20
    264c:	99 0f       	add	r25, r25
    264e:	31 1d       	adc	r19, r1
    2650:	87 fd       	sbrc	r24, 7
    2652:	91 60       	ori	r25, 0x01	; 1
    2654:	00 96       	adiw	r24, 0x00	; 0
    2656:	61 05       	cpc	r22, r1
    2658:	71 05       	cpc	r23, r1
    265a:	39 f4       	brne	.+14     	; 0x266a <__ftoa_engine+0x28>
    265c:	32 60       	ori	r19, 0x02	; 2
    265e:	2e 5f       	subi	r18, 0xFE	; 254
    2660:	3d 93       	st	X+, r19
    2662:	30 e3       	ldi	r19, 0x30	; 48
    2664:	2a 95       	dec	r18
    2666:	e1 f7       	brne	.-8      	; 0x2660 <__ftoa_engine+0x1e>
    2668:	08 95       	ret
    266a:	9f 3f       	cpi	r25, 0xFF	; 255
    266c:	30 f0       	brcs	.+12     	; 0x267a <__ftoa_engine+0x38>
    266e:	80 38       	cpi	r24, 0x80	; 128
    2670:	71 05       	cpc	r23, r1
    2672:	61 05       	cpc	r22, r1
    2674:	09 f0       	breq	.+2      	; 0x2678 <__ftoa_engine+0x36>
    2676:	3c 5f       	subi	r19, 0xFC	; 252
    2678:	3c 5f       	subi	r19, 0xFC	; 252
    267a:	3d 93       	st	X+, r19
    267c:	91 30       	cpi	r25, 0x01	; 1
    267e:	08 f0       	brcs	.+2      	; 0x2682 <__ftoa_engine+0x40>
    2680:	80 68       	ori	r24, 0x80	; 128
    2682:	91 1d       	adc	r25, r1
    2684:	df 93       	push	r29
    2686:	cf 93       	push	r28
    2688:	1f 93       	push	r17
    268a:	0f 93       	push	r16
    268c:	ff 92       	push	r15
    268e:	ef 92       	push	r14
    2690:	19 2f       	mov	r17, r25
    2692:	98 7f       	andi	r25, 0xF8	; 248
    2694:	96 95       	lsr	r25
    2696:	e9 2f       	mov	r30, r25
    2698:	96 95       	lsr	r25
    269a:	96 95       	lsr	r25
    269c:	e9 0f       	add	r30, r25
    269e:	ff 27       	eor	r31, r31
    26a0:	ea 54       	subi	r30, 0x4A	; 74
    26a2:	ff 4f       	sbci	r31, 0xFF	; 255
    26a4:	99 27       	eor	r25, r25
    26a6:	33 27       	eor	r19, r19
    26a8:	ee 24       	eor	r14, r14
    26aa:	ff 24       	eor	r15, r15
    26ac:	a7 01       	movw	r20, r14
    26ae:	e7 01       	movw	r28, r14
    26b0:	05 90       	lpm	r0, Z+
    26b2:	08 94       	sec
    26b4:	07 94       	ror	r0
    26b6:	28 f4       	brcc	.+10     	; 0x26c2 <__ftoa_engine+0x80>
    26b8:	36 0f       	add	r19, r22
    26ba:	e7 1e       	adc	r14, r23
    26bc:	f8 1e       	adc	r15, r24
    26be:	49 1f       	adc	r20, r25
    26c0:	51 1d       	adc	r21, r1
    26c2:	66 0f       	add	r22, r22
    26c4:	77 1f       	adc	r23, r23
    26c6:	88 1f       	adc	r24, r24
    26c8:	99 1f       	adc	r25, r25
    26ca:	06 94       	lsr	r0
    26cc:	a1 f7       	brne	.-24     	; 0x26b6 <__ftoa_engine+0x74>
    26ce:	05 90       	lpm	r0, Z+
    26d0:	07 94       	ror	r0
    26d2:	28 f4       	brcc	.+10     	; 0x26de <__ftoa_engine+0x9c>
    26d4:	e7 0e       	add	r14, r23
    26d6:	f8 1e       	adc	r15, r24
    26d8:	49 1f       	adc	r20, r25
    26da:	56 1f       	adc	r21, r22
    26dc:	c1 1d       	adc	r28, r1
    26de:	77 0f       	add	r23, r23
    26e0:	88 1f       	adc	r24, r24
    26e2:	99 1f       	adc	r25, r25
    26e4:	66 1f       	adc	r22, r22
    26e6:	06 94       	lsr	r0
    26e8:	a1 f7       	brne	.-24     	; 0x26d2 <__ftoa_engine+0x90>
    26ea:	05 90       	lpm	r0, Z+
    26ec:	07 94       	ror	r0
    26ee:	28 f4       	brcc	.+10     	; 0x26fa <__ftoa_engine+0xb8>
    26f0:	f8 0e       	add	r15, r24
    26f2:	49 1f       	adc	r20, r25
    26f4:	56 1f       	adc	r21, r22
    26f6:	c7 1f       	adc	r28, r23
    26f8:	d1 1d       	adc	r29, r1
    26fa:	88 0f       	add	r24, r24
    26fc:	99 1f       	adc	r25, r25
    26fe:	66 1f       	adc	r22, r22
    2700:	77 1f       	adc	r23, r23
    2702:	06 94       	lsr	r0
    2704:	a1 f7       	brne	.-24     	; 0x26ee <__ftoa_engine+0xac>
    2706:	05 90       	lpm	r0, Z+
    2708:	07 94       	ror	r0
    270a:	20 f4       	brcc	.+8      	; 0x2714 <__ftoa_engine+0xd2>
    270c:	49 0f       	add	r20, r25
    270e:	56 1f       	adc	r21, r22
    2710:	c7 1f       	adc	r28, r23
    2712:	d8 1f       	adc	r29, r24
    2714:	99 0f       	add	r25, r25
    2716:	66 1f       	adc	r22, r22
    2718:	77 1f       	adc	r23, r23
    271a:	88 1f       	adc	r24, r24
    271c:	06 94       	lsr	r0
    271e:	a9 f7       	brne	.-22     	; 0x270a <__ftoa_engine+0xc8>
    2720:	84 91       	lpm	r24, Z
    2722:	10 95       	com	r17
    2724:	17 70       	andi	r17, 0x07	; 7
    2726:	41 f0       	breq	.+16     	; 0x2738 <__ftoa_engine+0xf6>
    2728:	d6 95       	lsr	r29
    272a:	c7 95       	ror	r28
    272c:	57 95       	ror	r21
    272e:	47 95       	ror	r20
    2730:	f7 94       	ror	r15
    2732:	e7 94       	ror	r14
    2734:	1a 95       	dec	r17
    2736:	c1 f7       	brne	.-16     	; 0x2728 <__ftoa_engine+0xe6>
    2738:	ec e5       	ldi	r30, 0x5C	; 92
    273a:	f0 e0       	ldi	r31, 0x00	; 0
    273c:	68 94       	set
    273e:	15 90       	lpm	r1, Z+
    2740:	15 91       	lpm	r17, Z+
    2742:	35 91       	lpm	r19, Z+
    2744:	65 91       	lpm	r22, Z+
    2746:	95 91       	lpm	r25, Z+
    2748:	05 90       	lpm	r0, Z+
    274a:	7f e2       	ldi	r23, 0x2F	; 47
    274c:	73 95       	inc	r23
    274e:	e1 18       	sub	r14, r1
    2750:	f1 0a       	sbc	r15, r17
    2752:	43 0b       	sbc	r20, r19
    2754:	56 0b       	sbc	r21, r22
    2756:	c9 0b       	sbc	r28, r25
    2758:	d0 09       	sbc	r29, r0
    275a:	c0 f7       	brcc	.-16     	; 0x274c <__ftoa_engine+0x10a>
    275c:	e1 0c       	add	r14, r1
    275e:	f1 1e       	adc	r15, r17
    2760:	43 1f       	adc	r20, r19
    2762:	56 1f       	adc	r21, r22
    2764:	c9 1f       	adc	r28, r25
    2766:	d0 1d       	adc	r29, r0
    2768:	7e f4       	brtc	.+30     	; 0x2788 <__ftoa_engine+0x146>
    276a:	70 33       	cpi	r23, 0x30	; 48
    276c:	11 f4       	brne	.+4      	; 0x2772 <__ftoa_engine+0x130>
    276e:	8a 95       	dec	r24
    2770:	e6 cf       	rjmp	.-52     	; 0x273e <__ftoa_engine+0xfc>
    2772:	e8 94       	clt
    2774:	01 50       	subi	r16, 0x01	; 1
    2776:	30 f0       	brcs	.+12     	; 0x2784 <__ftoa_engine+0x142>
    2778:	08 0f       	add	r16, r24
    277a:	0a f4       	brpl	.+2      	; 0x277e <__ftoa_engine+0x13c>
    277c:	00 27       	eor	r16, r16
    277e:	02 17       	cp	r16, r18
    2780:	08 f4       	brcc	.+2      	; 0x2784 <__ftoa_engine+0x142>
    2782:	20 2f       	mov	r18, r16
    2784:	23 95       	inc	r18
    2786:	02 2f       	mov	r16, r18
    2788:	7a 33       	cpi	r23, 0x3A	; 58
    278a:	28 f0       	brcs	.+10     	; 0x2796 <__ftoa_engine+0x154>
    278c:	79 e3       	ldi	r23, 0x39	; 57
    278e:	7d 93       	st	X+, r23
    2790:	2a 95       	dec	r18
    2792:	e9 f7       	brne	.-6      	; 0x278e <__ftoa_engine+0x14c>
    2794:	10 c0       	rjmp	.+32     	; 0x27b6 <__ftoa_engine+0x174>
    2796:	7d 93       	st	X+, r23
    2798:	2a 95       	dec	r18
    279a:	89 f6       	brne	.-94     	; 0x273e <__ftoa_engine+0xfc>
    279c:	06 94       	lsr	r0
    279e:	97 95       	ror	r25
    27a0:	67 95       	ror	r22
    27a2:	37 95       	ror	r19
    27a4:	17 95       	ror	r17
    27a6:	17 94       	ror	r1
    27a8:	e1 18       	sub	r14, r1
    27aa:	f1 0a       	sbc	r15, r17
    27ac:	43 0b       	sbc	r20, r19
    27ae:	56 0b       	sbc	r21, r22
    27b0:	c9 0b       	sbc	r28, r25
    27b2:	d0 09       	sbc	r29, r0
    27b4:	98 f0       	brcs	.+38     	; 0x27dc <__ftoa_engine+0x19a>
    27b6:	23 95       	inc	r18
    27b8:	7e 91       	ld	r23, -X
    27ba:	73 95       	inc	r23
    27bc:	7a 33       	cpi	r23, 0x3A	; 58
    27be:	08 f0       	brcs	.+2      	; 0x27c2 <__ftoa_engine+0x180>
    27c0:	70 e3       	ldi	r23, 0x30	; 48
    27c2:	7c 93       	st	X, r23
    27c4:	20 13       	cpse	r18, r16
    27c6:	b8 f7       	brcc	.-18     	; 0x27b6 <__ftoa_engine+0x174>
    27c8:	7e 91       	ld	r23, -X
    27ca:	70 61       	ori	r23, 0x10	; 16
    27cc:	7d 93       	st	X+, r23
    27ce:	30 f0       	brcs	.+12     	; 0x27dc <__ftoa_engine+0x19a>
    27d0:	83 95       	inc	r24
    27d2:	71 e3       	ldi	r23, 0x31	; 49
    27d4:	7d 93       	st	X+, r23
    27d6:	70 e3       	ldi	r23, 0x30	; 48
    27d8:	2a 95       	dec	r18
    27da:	e1 f7       	brne	.-8      	; 0x27d4 <__ftoa_engine+0x192>
    27dc:	11 24       	eor	r1, r1
    27de:	ef 90       	pop	r14
    27e0:	ff 90       	pop	r15
    27e2:	0f 91       	pop	r16
    27e4:	1f 91       	pop	r17
    27e6:	cf 91       	pop	r28
    27e8:	df 91       	pop	r29
    27ea:	99 27       	eor	r25, r25
    27ec:	87 fd       	sbrc	r24, 7
    27ee:	90 95       	com	r25
    27f0:	08 95       	ret

000027f2 <strnlen_P>:
    27f2:	fc 01       	movw	r30, r24
    27f4:	05 90       	lpm	r0, Z+
    27f6:	61 50       	subi	r22, 0x01	; 1
    27f8:	70 40       	sbci	r23, 0x00	; 0
    27fa:	01 10       	cpse	r0, r1
    27fc:	d8 f7       	brcc	.-10     	; 0x27f4 <strnlen_P+0x2>
    27fe:	80 95       	com	r24
    2800:	90 95       	com	r25
    2802:	8e 0f       	add	r24, r30
    2804:	9f 1f       	adc	r25, r31
    2806:	08 95       	ret

00002808 <strnlen>:
    2808:	fc 01       	movw	r30, r24
    280a:	61 50       	subi	r22, 0x01	; 1
    280c:	70 40       	sbci	r23, 0x00	; 0
    280e:	01 90       	ld	r0, Z+
    2810:	01 10       	cpse	r0, r1
    2812:	d8 f7       	brcc	.-10     	; 0x280a <strnlen+0x2>
    2814:	80 95       	com	r24
    2816:	90 95       	com	r25
    2818:	8e 0f       	add	r24, r30
    281a:	9f 1f       	adc	r25, r31
    281c:	08 95       	ret

0000281e <fputc>:
    281e:	0f 93       	push	r16
    2820:	1f 93       	push	r17
    2822:	cf 93       	push	r28
    2824:	df 93       	push	r29
    2826:	fb 01       	movw	r30, r22
    2828:	23 81       	ldd	r18, Z+3	; 0x03
    282a:	21 fd       	sbrc	r18, 1
    282c:	03 c0       	rjmp	.+6      	; 0x2834 <fputc+0x16>
    282e:	8f ef       	ldi	r24, 0xFF	; 255
    2830:	9f ef       	ldi	r25, 0xFF	; 255
    2832:	2c c0       	rjmp	.+88     	; 0x288c <fputc+0x6e>
    2834:	22 ff       	sbrs	r18, 2
    2836:	16 c0       	rjmp	.+44     	; 0x2864 <fputc+0x46>
    2838:	46 81       	ldd	r20, Z+6	; 0x06
    283a:	57 81       	ldd	r21, Z+7	; 0x07
    283c:	24 81       	ldd	r18, Z+4	; 0x04
    283e:	35 81       	ldd	r19, Z+5	; 0x05
    2840:	42 17       	cp	r20, r18
    2842:	53 07       	cpc	r21, r19
    2844:	44 f4       	brge	.+16     	; 0x2856 <fputc+0x38>
    2846:	a0 81       	ld	r26, Z
    2848:	b1 81       	ldd	r27, Z+1	; 0x01
    284a:	9d 01       	movw	r18, r26
    284c:	2f 5f       	subi	r18, 0xFF	; 255
    284e:	3f 4f       	sbci	r19, 0xFF	; 255
    2850:	31 83       	std	Z+1, r19	; 0x01
    2852:	20 83       	st	Z, r18
    2854:	8c 93       	st	X, r24
    2856:	26 81       	ldd	r18, Z+6	; 0x06
    2858:	37 81       	ldd	r19, Z+7	; 0x07
    285a:	2f 5f       	subi	r18, 0xFF	; 255
    285c:	3f 4f       	sbci	r19, 0xFF	; 255
    285e:	37 83       	std	Z+7, r19	; 0x07
    2860:	26 83       	std	Z+6, r18	; 0x06
    2862:	14 c0       	rjmp	.+40     	; 0x288c <fputc+0x6e>
    2864:	8b 01       	movw	r16, r22
    2866:	ec 01       	movw	r28, r24
    2868:	fb 01       	movw	r30, r22
    286a:	00 84       	ldd	r0, Z+8	; 0x08
    286c:	f1 85       	ldd	r31, Z+9	; 0x09
    286e:	e0 2d       	mov	r30, r0
    2870:	09 95       	icall
    2872:	89 2b       	or	r24, r25
    2874:	e1 f6       	brne	.-72     	; 0x282e <fputc+0x10>
    2876:	d8 01       	movw	r26, r16
    2878:	16 96       	adiw	r26, 0x06	; 6
    287a:	8d 91       	ld	r24, X+
    287c:	9c 91       	ld	r25, X
    287e:	17 97       	sbiw	r26, 0x07	; 7
    2880:	01 96       	adiw	r24, 0x01	; 1
    2882:	17 96       	adiw	r26, 0x07	; 7
    2884:	9c 93       	st	X, r25
    2886:	8e 93       	st	-X, r24
    2888:	16 97       	sbiw	r26, 0x06	; 6
    288a:	ce 01       	movw	r24, r28
    288c:	df 91       	pop	r29
    288e:	cf 91       	pop	r28
    2890:	1f 91       	pop	r17
    2892:	0f 91       	pop	r16
    2894:	08 95       	ret

00002896 <sprintf>:
    2896:	ae e0       	ldi	r26, 0x0E	; 14
    2898:	b0 e0       	ldi	r27, 0x00	; 0
    289a:	e0 e5       	ldi	r30, 0x50	; 80
    289c:	f4 e1       	ldi	r31, 0x14	; 20
    289e:	94 ce       	rjmp	.-728    	; 0x25c8 <__prologue_saves__+0x1c>
    28a0:	0d 89       	ldd	r16, Y+21	; 0x15
    28a2:	1e 89       	ldd	r17, Y+22	; 0x16
    28a4:	86 e0       	ldi	r24, 0x06	; 6
    28a6:	8c 83       	std	Y+4, r24	; 0x04
    28a8:	1a 83       	std	Y+2, r17	; 0x02
    28aa:	09 83       	std	Y+1, r16	; 0x01
    28ac:	8f ef       	ldi	r24, 0xFF	; 255
    28ae:	9f e7       	ldi	r25, 0x7F	; 127
    28b0:	9e 83       	std	Y+6, r25	; 0x06
    28b2:	8d 83       	std	Y+5, r24	; 0x05
    28b4:	ae 01       	movw	r20, r28
    28b6:	47 5e       	subi	r20, 0xE7	; 231
    28b8:	5f 4f       	sbci	r21, 0xFF	; 255
    28ba:	6f 89       	ldd	r22, Y+23	; 0x17
    28bc:	78 8d       	ldd	r23, Y+24	; 0x18
    28be:	ce 01       	movw	r24, r28
    28c0:	01 96       	adiw	r24, 0x01	; 1
    28c2:	03 db       	rcall	.-2554   	; 0x1eca <vfprintf>
    28c4:	ef 81       	ldd	r30, Y+7	; 0x07
    28c6:	f8 85       	ldd	r31, Y+8	; 0x08
    28c8:	e0 0f       	add	r30, r16
    28ca:	f1 1f       	adc	r31, r17
    28cc:	10 82       	st	Z, r1
    28ce:	2e 96       	adiw	r28, 0x0e	; 14
    28d0:	e4 e0       	ldi	r30, 0x04	; 4
    28d2:	96 ce       	rjmp	.-724    	; 0x2600 <__epilogue_restores__+0x1c>

000028d4 <__ultoa_invert>:
    28d4:	fa 01       	movw	r30, r20
    28d6:	aa 27       	eor	r26, r26
    28d8:	28 30       	cpi	r18, 0x08	; 8
    28da:	51 f1       	breq	.+84     	; 0x2930 <__ultoa_invert+0x5c>
    28dc:	20 31       	cpi	r18, 0x10	; 16
    28de:	81 f1       	breq	.+96     	; 0x2940 <__ultoa_invert+0x6c>
    28e0:	e8 94       	clt
    28e2:	6f 93       	push	r22
    28e4:	6e 7f       	andi	r22, 0xFE	; 254
    28e6:	6e 5f       	subi	r22, 0xFE	; 254
    28e8:	7f 4f       	sbci	r23, 0xFF	; 255
    28ea:	8f 4f       	sbci	r24, 0xFF	; 255
    28ec:	9f 4f       	sbci	r25, 0xFF	; 255
    28ee:	af 4f       	sbci	r26, 0xFF	; 255
    28f0:	b1 e0       	ldi	r27, 0x01	; 1
    28f2:	3e d0       	rcall	.+124    	; 0x2970 <__ultoa_invert+0x9c>
    28f4:	b4 e0       	ldi	r27, 0x04	; 4
    28f6:	3c d0       	rcall	.+120    	; 0x2970 <__ultoa_invert+0x9c>
    28f8:	67 0f       	add	r22, r23
    28fa:	78 1f       	adc	r23, r24
    28fc:	89 1f       	adc	r24, r25
    28fe:	9a 1f       	adc	r25, r26
    2900:	a1 1d       	adc	r26, r1
    2902:	68 0f       	add	r22, r24
    2904:	79 1f       	adc	r23, r25
    2906:	8a 1f       	adc	r24, r26
    2908:	91 1d       	adc	r25, r1
    290a:	a1 1d       	adc	r26, r1
    290c:	6a 0f       	add	r22, r26
    290e:	71 1d       	adc	r23, r1
    2910:	81 1d       	adc	r24, r1
    2912:	91 1d       	adc	r25, r1
    2914:	a1 1d       	adc	r26, r1
    2916:	20 d0       	rcall	.+64     	; 0x2958 <__ultoa_invert+0x84>
    2918:	09 f4       	brne	.+2      	; 0x291c <__ultoa_invert+0x48>
    291a:	68 94       	set
    291c:	3f 91       	pop	r19
    291e:	2a e0       	ldi	r18, 0x0A	; 10
    2920:	26 9f       	mul	r18, r22
    2922:	11 24       	eor	r1, r1
    2924:	30 19       	sub	r19, r0
    2926:	30 5d       	subi	r19, 0xD0	; 208
    2928:	31 93       	st	Z+, r19
    292a:	de f6       	brtc	.-74     	; 0x28e2 <__ultoa_invert+0xe>
    292c:	cf 01       	movw	r24, r30
    292e:	08 95       	ret
    2930:	46 2f       	mov	r20, r22
    2932:	47 70       	andi	r20, 0x07	; 7
    2934:	40 5d       	subi	r20, 0xD0	; 208
    2936:	41 93       	st	Z+, r20
    2938:	b3 e0       	ldi	r27, 0x03	; 3
    293a:	0f d0       	rcall	.+30     	; 0x295a <__ultoa_invert+0x86>
    293c:	c9 f7       	brne	.-14     	; 0x2930 <__ultoa_invert+0x5c>
    293e:	f6 cf       	rjmp	.-20     	; 0x292c <__ultoa_invert+0x58>
    2940:	46 2f       	mov	r20, r22
    2942:	4f 70       	andi	r20, 0x0F	; 15
    2944:	40 5d       	subi	r20, 0xD0	; 208
    2946:	4a 33       	cpi	r20, 0x3A	; 58
    2948:	18 f0       	brcs	.+6      	; 0x2950 <__ultoa_invert+0x7c>
    294a:	49 5d       	subi	r20, 0xD9	; 217
    294c:	31 fd       	sbrc	r19, 1
    294e:	40 52       	subi	r20, 0x20	; 32
    2950:	41 93       	st	Z+, r20
    2952:	02 d0       	rcall	.+4      	; 0x2958 <__ultoa_invert+0x84>
    2954:	a9 f7       	brne	.-22     	; 0x2940 <__ultoa_invert+0x6c>
    2956:	ea cf       	rjmp	.-44     	; 0x292c <__ultoa_invert+0x58>
    2958:	b4 e0       	ldi	r27, 0x04	; 4
    295a:	a6 95       	lsr	r26
    295c:	97 95       	ror	r25
    295e:	87 95       	ror	r24
    2960:	77 95       	ror	r23
    2962:	67 95       	ror	r22
    2964:	ba 95       	dec	r27
    2966:	c9 f7       	brne	.-14     	; 0x295a <__ultoa_invert+0x86>
    2968:	00 97       	sbiw	r24, 0x00	; 0
    296a:	61 05       	cpc	r22, r1
    296c:	71 05       	cpc	r23, r1
    296e:	08 95       	ret
    2970:	9b 01       	movw	r18, r22
    2972:	ac 01       	movw	r20, r24
    2974:	0a 2e       	mov	r0, r26
    2976:	06 94       	lsr	r0
    2978:	57 95       	ror	r21
    297a:	47 95       	ror	r20
    297c:	37 95       	ror	r19
    297e:	27 95       	ror	r18
    2980:	ba 95       	dec	r27
    2982:	c9 f7       	brne	.-14     	; 0x2976 <__ultoa_invert+0xa2>
    2984:	62 0f       	add	r22, r18
    2986:	73 1f       	adc	r23, r19
    2988:	84 1f       	adc	r24, r20
    298a:	95 1f       	adc	r25, r21
    298c:	a0 1d       	adc	r26, r0
    298e:	08 95       	ret

00002990 <eeprom_read_byte>:
    2990:	e1 99       	sbic	0x1c, 1	; 28
    2992:	fe cf       	rjmp	.-4      	; 0x2990 <eeprom_read_byte>
    2994:	9f bb       	out	0x1f, r25	; 31
    2996:	8e bb       	out	0x1e, r24	; 30
    2998:	e0 9a       	sbi	0x1c, 0	; 28
    299a:	99 27       	eor	r25, r25
    299c:	8d b3       	in	r24, 0x1d	; 29
    299e:	08 95       	ret

000029a0 <eeprom_write_byte>:
    29a0:	26 2f       	mov	r18, r22

000029a2 <eeprom_write_r18>:
    29a2:	e1 99       	sbic	0x1c, 1	; 28
    29a4:	fe cf       	rjmp	.-4      	; 0x29a2 <eeprom_write_r18>
    29a6:	9f bb       	out	0x1f, r25	; 31
    29a8:	8e bb       	out	0x1e, r24	; 30
    29aa:	2d bb       	out	0x1d, r18	; 29
    29ac:	0f b6       	in	r0, 0x3f	; 63
    29ae:	f8 94       	cli
    29b0:	e2 9a       	sbi	0x1c, 2	; 28
    29b2:	e1 9a       	sbi	0x1c, 1	; 28
    29b4:	0f be       	out	0x3f, r0	; 63
    29b6:	01 96       	adiw	r24, 0x01	; 1
    29b8:	08 95       	ret

000029ba <_exit>:
    29ba:	f8 94       	cli

000029bc <__stop_program>:
    29bc:	ff cf       	rjmp	.-2      	; 0x29bc <__stop_program>
